{
["The current array index"]={new="当前数组索引";old="The current array index"};
["The current array element"]={old="The current array element";new="当前数组元素"};
["The array to use"]={old="The array to use";new="要使用的数组"};
["{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}."]={old="{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.";new="{}{}可选{}{}数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将为{}array_length(array) + offset{}."};
["{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2)."]={new="{}{}可选{}{}要遍历的元素数量。负值将向后遍历数组（即按索引的降序顺序，例如 2&gt; 1&gt; 0 而不是 0&gt; 1&gt; 2）。";old="{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2)."};
["{}{}IMPORTANT{}{}&nbsp;You {}cannot{} use this function&nbsp;to change array elements directly, i.e. by writing&nbsp;{}
      {}{}element = value;{}{}
    {}&nbsp;in the function. You {}can{} make changes if the array element {}references{}&nbsp;something else (e.g. when the array element itself is an {}array{} or {}struct{})."]={new="{}{}IMPORTANT{}{}您{}不能{}使用此函数直接更改数组元素，即通过写入函数中的
{}{}{}element = value;{}{}{}
。如果数组元素{}引用{}其他内容（例如，当数组元素本身是{}数组{}或{}结构{}时），则{}可以{}进行更改。";old="{}{}IMPORTANT{}{}&nbsp;You {}cannot{} use this function&nbsp;to change array elements directly, i.e. by writing&nbsp;{}
      {}{}element = value;{}{}
    {}&nbsp;in the function. You {}can{} make changes if the array element {}references{}&nbsp;something else (e.g. when the array element itself is an {}array{} or {}struct{})."};
["The function to use for each element"]={new="用于每个元素的函数";old="The function to use for each element"};
["This function loops through an array or a range of it and executes the predicate function {}for each{} element."]={new="此函数循环通过数组或其范围，并为每个{}元素执行谓词函数{}。";old="This function loops through an array or a range of it and executes the predicate function {}for each{} element."};
['The above code first creates a temporary array of structs {}array{} where each struct stores and "x" and "y" value. It then defines a temporary function {}x_to_index{}&nbsp;that takes in an element and index and sets the element\'s "x" to that index. It expects the&nbsp;{}element{}&nbsp;parameter to be a struct. Finally {}{}array_foreach{}{}&nbsp;is called with the array and the function as the arguments. After the code has executed all structs will have their "x" value set to their array index.']={old='The above code first creates a temporary array of structs {}array{} where each struct stores and "x" and "y" value. It then defines a temporary function {}x_to_index{}&nbsp;that takes in an element and index and sets the element\'s "x" to that index. It expects the&nbsp;{}element{}&nbsp;parameter to be a struct. Finally {}{}array_foreach{}{}&nbsp;is called with the array and the function as the arguments. After the code has executed all structs will have their "x" value set to their array index.';new="上面的代码首先创建一个临时数组的结构{}array{}，其中每个结构存储和 “x” 和 “y” 值。然后，它定义一个临时函数{}x_to_index{}，该函数包含一个元素和索引，并将元素的 “x” 设置为该索引。它期望{}element{}参数是一个结构。最后{}{}array_foreach{}{}以数组和函数为参数调用。代码执行后，所有结构都将其 “x” 值设置为数组索引。"}
}