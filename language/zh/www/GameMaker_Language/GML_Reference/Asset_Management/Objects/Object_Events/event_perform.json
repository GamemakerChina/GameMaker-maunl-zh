{
    "A gesture event (Tap, Drag, Flick, Pinch or Rotate)":"手势事件(点击、拖动、轻拂、捏合或旋转)",
    "A single click/touch and release has been detected for an {}instance{}":"已检测到{}实例{}的单次单击/触摸和释放",
    "A single click/touch and release has been detected {}anywhere{} in the room":"在房间的{}任何地方{}检测到单击/触摸和释放",
    "A touch/click has been held and moved for an {}instance{}":"已为{}实例{}按住并移动触摸/单击",
    "A touch/click has been held and moved {}anywhere{} in the room":"触摸/点击已被按住并移动到房间中的{}任何位置{}",
    "Animation event that runs every step for objects that use skeletal animations":"为使用骨骼动画的对象运行每个步骤的动画事件",
    "Animation event that runs for skeletal animations as assigned in the skeletal animation tool":"为骨骼动画工具中指定的骨骼动画运行的动画事件",
    "Asynchronous events can be called using {}{}event_perform_async(){}{}.":"可以使用{}{}event_perform_async(){}{}调用异步事件。",
    "Broadcast Message event used for sprites and sequences":"用于子画面和序列的广播消息事件",
    "Collision with an object":"与物体碰撞",
    "Draw event. {}{}{}NOTE{} {}This event cannot be forced outside of a draw event and the constants are only for identifying the event when performed in these cases.{}":"绘制事件。{}{}{}注意{}{}此事件不能强制超出绘制事件，且常量仅用于识别在这些情况下执行的事件。{}",
    "If the object has reached the end of a path it is following":"如果对象已到达其所沿路径的终点",
    "If the object\u0027s sprite has reached the end of its animation":"如果对象的精灵已到达其动画的结尾",
    "Keyboard/Keyboard Pressed/Keyboard Released":"",
    "Left button held down anywhere":"在任何位置按住左键",
    "Left button held down on object":"在对象上按住左键",
    "Left button just pressed anywhere":"左键已按下任意位置",
    "Left button just pressed on object":"刚在对象上按下的左键",
    "Left button just released anywhere":"左键在任何地方释放",
    "Left button just released on object":"刚在对象上释放的左键",
    "Middle button (or clickable wheel) held down anywhere":"在任何位置按住中间按钮(或可点击的滚轮)",
    "Middle button (or clickable wheel) held down on object":"在对象上按住中间按钮(或可单击的滚轮)",
    "Middle button (or clickable wheel) just pressed anywhere":"中间按钮(或可点击的滚轮)只需按下任意位置",
    "Middle button (or clickable wheel) just pressed on object":"刚刚在对象上按下的中间按钮(或可点击的滚轮)",
    "Middle button just released anywhere":"中间的按钮刚刚在任何地方释放",
    "Middle button just released on object":"刚刚在对象上释放的中间按钮",
    "Mouse just entered object\u0027s bounding box":"鼠标刚进入对象的边界框",
    "Mouse just left object\u0027s bounding box":"鼠标刚刚离开对象的边界框",
    "Mouse wheel scrolled downwards":"鼠标滚轮向下滚动",
    "Mouse wheel scrolled upwards":"鼠标滚轮向上滚动",
    "No buttons held down":"没有按下按钮",
    "One of the 16 available user events.":"16个可用用户事件之一。",
    "One of the actions listed under \u0027Other\u0027":"\"其他\"下列出的操作之一",
    "Only triggered at the end of a room":"只在房间的尽头触发。",
    "Only triggered at the end of the game":"仅在游戏结束时触发",
    "Only triggered at the start of a room":"仅在房间开始时触发",
    "Only triggered at the start of the game":"仅在游戏开始时触发",
    "Right button held down anywhere":"在任何地方按下右键",
    "Right button held down on object":"在对象上按住右键",
    "Right button just pressed anywhere":"右按钮刚刚按下任何地方",
    "Right button just pressed on object":"刚刚在对象上按下右键",
    "Right button just released anywhere":"右按钮刚刚在任何地方释放",
    "Right button just released on object":"刚刚在对象上释放右键",
    "The beginning of a drag gesture has been detected for an {}instance{}":"已为{}实例{}检测到拖动手势的开始",
    "The beginning of a drag gesture has been detected {}anywhere{} in the room":"在房间的任何地方{}检测到拖动手势的开始{}",
    "The draw begin event.":"",
    "The draw end event.":"",
    "The movement between two touches for an {}instance{} has been detected as a rotation":"{}实例{}的两次触摸之间的移动已被检测为旋转",
    "The movement between two touches for an {}instance{} has been detected as inwards":"{}实例{}的两次触摸之间的移动已被检测为向内",
    "The movement between two touches for an {}instance{} has been detected as outwards":"{}实例{}的两次触摸之间的移动已被检测为向外",
    "The movement between two touches for an {}instance{} has been detected as rotating":"{}实例{}的两次触摸之间的移动已被检测为旋转",
    "The movement between two touches {}anywhere{} in the room has been detected as a rotation":"房间中任意位置的两次触摸{}之间的移动已被检测为旋转",
    "The movement between two touches {}anywhere{} in the room has been detected as inwards":"房间中任何地方的两次触摸{}之间的移动已被检测为向内",
    "The movement between two touches {}anywhere{} in the room has been detected as outwards":"房间内任何地方的两次触摸{}之间的移动已被检测为向外移动",
    "The movement between two touches {}anywhere{} in the room has been detected as rotating":"房间中任意位置{}的两次触摸{}之间的移动被检测为旋转",
    "The number relevant to which of the 12 alarms you wish to trigger the event of":"与您希望触发事件的12个alarms中的哪个警报相关的数字",
    "The post draw event.":"",
    "The pre draw event.":"",
    "The release of a touch/click from a drag had enough movement for a flick event to be detected for the {}instance{}":"对于{}实例{}，从拖动中释放触摸/单击具有足够的移动来检测轻弹事件。",
    "The release of a touch/click from a drag had enough movement for a flick event to be detected {}anywhere{} in the room":"从拖动中释放触摸/点击具有足够的移动，以便在房间中的任何地方{}检测到轻弹事件{}",
    "The release of one (or both) touches for a pinch has been detected for an {}instance{}":"已检测到{}实例{}的一个(或两个)捏合触摸的释放",
    "The release of one (or both) touches for a pinch has been detected {}anywhere{} in the room":"在房间中的任何地方{}检测到释放一个(或两个)捏合触摸",
    "The release of one (or both) touches for a rotation has been detected for an {}instance{}":"已为{}实例{}检测到旋转的一个(或两个)触摸的释放",
    "The release of one (or both) touches for a rotation has been detected {}anywhere{} in the room":"在房间的任何地方{}检测到释放一个(或两个)旋转触摸",
    "The release of the touch/click from a drag has been detected for an {}instance{}":"对于{}实例{}，已检测到从拖动释放触摸/单击",
    "The release of the touch/click from a drag has been detected {}anywhere{} in the room":"在房间的{}任何地方{}检测到从拖动释放触摸/点击",
    "The table below outlines all the constants that are included in {}GameMaker{} for referencing event types, as well as their number value. The events themselves are marked in {}bold text{} and are the same as the return values of the {}{}event_type{}{} variable (to be passed into the first argument of this function), while their number values are marked with {}italic text{} and are the same as the return values for the {}{}event_number{}{} variable (to be passed into the second argument of this function):":"下表概述了{}GameMaker{}中包含的用于引用事件类型的所有常量及其数值。事件本身用{}粗体文本{}标记，并且与{}{}event_type{}{}变量的返回值相同(要传递到该函数的第一个参数中)，而其数值用{}斜体text{}标记，并且与{}{}event_number{}{}变量的返回值相同(要传递到该函数的第二个参数)：",
    "This function will perform the specified event, with the designated argument, for the instance running the code. There are many options here which allow complete simulation of all possible events, but note that this literally just performs all the code in the event and the game will not modify anything to make it trigger itself manually, for example if you choose to perform a keyboard press event, the event will be triggered but relevant key will not be recognised as having been pressed. Or if you perform an alarm event, the alarm counter will not be set to -1 but rather continue to count down.":"此函数将使用指定的参数为运行代码的实例执行指定的事件。这里有许多选项，可以完全模拟所有可能的事件，但请注意，这实际上只是执行事件中的所有代码，游戏不会修改任何内容以使其手动触发，例如，如果您选择执行键盘按下事件，则事件将被触发，但相关按键将不会被识别为已按下。或者，如果您执行报警事件，报警计数器将不会被设置为-1，而是继续倒计时。",
    "Two quick touches/clicks and releases have been detected for an {}instance{}":"检测到{}实例{}的两次快速触摸/点击和释放",
    "Two quick touches/clicks and releases have been detected {}anywhere{} in the room":"在房间的任何地方{}检测到两次快速触摸/点击和释放",
    "Two touches and a straight movement have been detected for an {}instance{}":"检测到{}实例{}的两次触摸和一次直线移动",
    "Two touches and a straight movement have been detected {}anywhere{} in the room":"在房间的任何地方检测到两次触摸和一次直线移动",
    "Whether the instance is interesecting with the boundary of the given view (0 to 7)":"实例是否与给定视图(0到7)的边界相交",
    "Whether the instance is intersecting the boundary":"实例是否与边界相交",
    "Whether the instance is outside of the room":"实例是否在房间外",
    "Whether the instance is outside the given view (0 to 7)":"实例是否在给定的视图之外(0到7)",
    "{}obj_enemy{} for example.":"例如{}obj_enemy{}。"
}