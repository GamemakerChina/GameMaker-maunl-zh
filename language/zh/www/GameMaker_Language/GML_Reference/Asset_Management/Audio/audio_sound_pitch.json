{
    "The above code will change the pitch of the audio played from the sound indexed in the variable \"s_engine\" based on the value of the variable \"gear\".":"上述代码将基于可变\"档位\"的值，从变量\"s_engine\"中索引的声音改变所播放的音频的音调。",
    "The index of the sound to change.":"要改变的声音的索引。",
    "The pitch argument is a {}pitch multiplier{}, in that the input value multiplies the current pitch by that amount, so the default value of 1 is no pitch change, while a value of less than 1 will lower the pitch and greater than 1 will raise the pitch. It is best to use small increments for this function as any value under 0 or over 5 may not be audible anyway. It is worth noting that the total pitch change permitted is clamped to (1/256) - 256 octaves, so any value over or under this will not be registered.":"音高参数为{}音高乘数{}，因为输入值将当前音高乘以该值，因此1的默认值为无音高变化，而小于1的值将降低音高，大于1将升高音高。最好对此函数使用小增量，因为任何小于0或大于5的值无论如何都听不见。值得注意的是，允许的总螺距变化被箝位为(1/256)- 256个八度，因此超过或低于该值的任何值都不会被记录。",
    "The pitch multiplier (default 1).":"音高乘数(默认值1)。",
    "This function can be used to change the pitch of a given sound. The sound can either be one referenced from an index for an individual sound being played which has been stored in a variable when using the {}{}audio_play_sound(){}{} or {}{}audio_play_sound_at(){}{} functions, or an actual sound asset from the Asset Browser. If it is an index of a playing sound, then only that instance will be changed, however when using a sound asset from the Asset Browser, all instances of that sound asset being played will be changed.":"此功能可用于更改给定声音的音调。声音可以是使用{}{}audio_play_sound(){}{}或{}{}audio_play_sound_at(){}{}函数时存储在变量中的正在播放的单个声音的索引引用的声音，也可以是来自资源浏览器的实际声音资源。如果它是播放声音的索引，则只更改该实例，但是，当使用资源浏览器中的声音资源时，正在播放的声音资源的所有实例将改变。",
    "{}{}IMPORTANT{}{}&nbsp;As the pitch argument is a {}pitch multiplier{}, the sound instance\u0027s pitch will be multiplied by the sound asset\u0027s pitch and also by the sound emitter\u0027s pitch in case the sound was played on an emitter using&nbsp;{}audio_play_sound_on{}. The final pitch that will be heard is the original pitch of the sound multiplied by the three pitch multipliers:&nbsp;{}\n    {}\n    final_pitch = original sound pitch * sound asset pitch * emitter pitch * sound instance pitch.{}\n    {}\n    By default the three pitch multipliers are equal to 1 so that the final pitch that is heard is equal to the original sound\u0027s pitch.\n  ":"{}{}IMPORTANT{}{}由于音调参数是{}音高乘数{}，如果声音在使用{}audio_play_sound_on{}的发射器上播放，则声音实例的音调将乘以声音资源的音调，以及声音发射器的音调。 最后听到的音调是声音的原始音调乘以三个音调乘数：{}\n{}\nfinal_pitch=原始音高*声音资源音调*发射器音高*声音实例音调。{}\n{}\n默认情况下，三个音调乘数等于1，以便听到的最终音调等于原始声音的音调。",
    "{}{}{}NOTE{}{}&nbsp;{}The clamped value given above is what {}GameMaker{} attempts to clamp the range to, but this value is {}not{} guaranteed on all target platforms. iOS, for example, clamps to (1/256) - 8, so you may need to experiment on each target platform and have different versions of a sound resource, each one pre-shifted, should you require higher or lower octave values.":"{}{}{}注意{}{}{}以上给出的箝位值是{}GameMaker{}尝试将范围箝位到的值，但{}并非所有目标平台都保证该值{}。 例如，iOS 箝位到(1/256)- 8，所以您可能需要在每个目标平台上进行实验，并拥有不同版本的声音资源，如果您需要更高或更低的倍频程值，则每个版本都预移位。"
}