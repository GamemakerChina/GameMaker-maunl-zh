{
    "Another feature of buffered audio is that you can use a buffer to create a queue of audio which can then be streamed to the device running your project. An audio queue takes a regular buffer which you have previously filled with audio data, and enables you to \"point\" to parts of it and tell {}GameMaker{} to stream the audio in a given order from that buffer. The available functions for audio queues are:":"缓冲音频的另一个功能是，您可以使用缓冲区创建音频队列，然后将其传输到运行项目的设备。音频队列采用您之前已填充音频数据的常规缓冲区，并使您能够\"指向\"它的一部分，并告诉{}GameMaker{}以给定的顺序从该缓冲区流式传输音频。音频队列的可用函数包括：",
    "Audio buffers will also permit you to record sound from any of the available sources (like microphones or the OS), which can then be queued and streamed using the above functions (for example). Recording audio will trigger an {}Audio Recording Asynchronous Event{} which will contain specific information about what is being recorded.{}\n    {}\n    For recording audio, the following functions are available:\n  ":"音频缓冲区还允许您录制来自任何可用源(如麦克风或操作系统)的声音，然后可以使用上述功能(例如)排队和流式传输。录制音频将触发{}音频录制异步事件{}，该事件将包含关于正在录制的内容的特定信息。{}\n{}\n录音功能如下：",
    "Note that once you have created a sound from an audio buffer, you are {}not{} creating a new sound in memory, but rather pointing to the position within the buffer where the sound is stored. You should not change this buffer after a sound has been associated with it otherwise you will get unexpected results, and you cannot delete the buffer while a sound is associated with it. Instead, free the sound (or sounds) first then delete the buffer. Once you have created your new audio resource from a buffer, you can use it\u0027s index value in any of the regular audio functions to play it, change it\u0027s gain or pitch, pause it, etc... Note that the buffer used to load the audio {}can only support PCM sounds{}, so formats like OGG will not be supported.":"请注意，一旦您从音频缓冲区创建了一个声音，您就不是{}{}在内存中创建一个新的声音，而是指向缓冲区中存储声音的位置。在声音与此缓冲区关联后，不应更改此缓冲区，否则会出现意外结果，并且在声音与此缓冲区关联时，不能删除此缓冲区。相反，首先释放声音(或声音)，然后删除缓冲区。一旦你从缓冲区创建了新的音频资源，你可以在任何常规音频功能中使用它的索引值来播放它，改变它的增益或音调，暂停它，等等。请注意，用于加载音频的缓冲区{}只能支持PCM声音{}，因此像OGG这样的格式将不受支持。",
    "Once a queue has been created, you can then use the returned queue index just as you would the sound index for any normal sound to play it, pause it, restart it, or change it\u0027s gain and pitch. The only thing you cannot do is get the track length or set the track position, but other than that, an audio queue can be used just like any other sound. You should also note that some of the audio queue functions will also trigger an {}Audio Playback Asynchronous Event{}.":"创建队列后，您可以像使用任何正常声音的声音索引一样使用返回的队列索引来播放、暂停、重新启动或更改其增益和音调。唯一做不到的是获取音轨长度或设置音轨位置，但除此之外，音频队列可以像任何其他声音一样使用。您还应该注意，一些音频队列函数也会触发{}音频回放异步事件{}。",
    "You can use {}audio buffers{} to load, save and manipulate audio files within your games. These buffers are created beforehand using the appropriate {}buffer functions{}&nbsp;and then you can use the following functions to create a sound to use in your project:":"您可以使用{}音频缓冲区{}加载、保存和操作游戏中的音频文件。这些缓冲区是事先使用适当的{}缓冲区函数{}创建的，然后可以使用以下函数创建项目中使用的声音：",
    "{}{}NOTE{} {}Most platforms {}except HTML5{} support recording audio in some form, but that does not mean that all devices will permit it, even if the platform does, so you should always check that the {}{}{}audio_get_recorder_count(){}{}{} function returns a value greater than 0 to verify that recording devices are available before using the rest of the recording functions.":"{}{}注意{}{}除 HTML5{}以外的大多数平台{}都支持以某种形式录制音频，但这并不意味着所有设备都会允许录制，即使平台允许，因此您应始终检查{}{}{}audio_get_recorder_count(){}{}{}函数返回大于0的值，以在使用其余录制函数之前验证录音设备是否可用。"
}