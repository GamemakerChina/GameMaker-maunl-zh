{
    "If the given listener is not ever going to move, or the movement is not a constant motion, you would normally not need to set these values, but, for example, if you are making a scrolling game where the player has a constant bottom to top movement and the enemies a constant top to bottom movement, you would set the listener {}and{} emitter velocities (for emitters you would use {}{}audio_emitter_velocity(){}{}) to the appropriate vectors to simulate the correct Doppler effect as they move past the player instance.":"如果给定的听众永远不会移动，或者该移动不是恒定的运动，通常不需要设置这些值，但是，例如，如果您正在做一个滚动游戏，其中玩家有一个恒定的从下到上的运动，而敌人有一个恒定的从上到下的运动， 您将将监听器{}和{}发射器速度(对于发射器，您将使用{}{}audio_emitter_velocity(){}{})设置为适当的向量，以模拟经过播放器实例时的正确多普勒效果。",
    "The above code checks the number of listeners available then loops through them and if their x velocity is not 0, it sets their velocity values to 0, 0, 0.":"上面的代码检查可用的监听器的数量，然后循环通过它们，如果它们的 x 速度不是 0，则其将它们的速度值设置为 0、0、0。",
    "The image below shows how this could be setup for the example game given above:":"下图显示了如何为上面给出的示例游戏进行设置：",
    "The listener to change the velocity of (default 0).":"要更改速度的监听器 (默认值为 0)。",
    "The x velocity of the listener (default 0).":"监听器的 X 速度 (默认值为 0)。",
    "The y velocity of the listener (default 0).":"监听器的 Y 速度 (默认值为 0)。",
    "The z velocity of the listener (default 0).":"监听器的 Z 速度 (默认值为 0)。",
    "This function can be used to give the given listener {}Doppler {}effects and simulate audio motion based on the vector that is resolved from the given relative x, y and z positions. The default listener index is 0, but you can use the function {}{}audio_get_listener_info(){}{} to get the different indices available for the target platform.":"此函数可用于给出给定的收听者{}多普勒{}效果，并基于从给定的相对x、y和z位置解析的矢量来模拟音频运动。默认监听器索引为0，但可以使用函数{}{}audio_get_listener_info(){}{}获取目标平台可用的不同索引。"
}