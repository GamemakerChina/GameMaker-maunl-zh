{
    "The above code creates an audio emitter and assigns its index to the variable \"s_emit\". This emitter is then placed at a position within the room and given a velocity of 5 pixels per step along the x axis (it will Doppler correctly in relation to the listener as if it had a horizontal speed of 5 pixels per step).":"上面的代码创建一个音频发射器，并将其索引分配给变量\"s_emit\"。然后，该发射器被放置在房间内的某个位置，并且沿着x轴每步5个像素的速度(它将相对于收听者正确地多普勒，就好像它具有5个像素的水平速度每步)。",
    "The index of the emitter to change.":"要更改的发射器的索引。",
    "The x vector value (default 0).":"X 向量值 (默认为 0)。",
    "The y vector value (default 0).":"Y 向量值 (默认为 0)。",
    "The z vector value (default 0).":"Z 向量值 (默认为 0)。",
    "This function can be used to give an emitter {}Doppler {}effects and simulate audio motion based on the vector that is resolved from the given relative x, y and z positions. If the emitter itself is not ever going to move you would normally not need to set these values, but, for example, if you are making a scrolling shooter game where the enemies come from the right and scroll to the left, you would set this to have a velocity of (hspeed, 0, 0) in the create event of the enemies (and update the emitter of each instance in the step event using {}{}audio_emitter_position(){}{}) to give any sounds emitted by the enemy instances the correct Doppler as they pass the player instance (which in turn would be using the function {}{}audio_listener_position(){}{} to set the {}listener{} to the correct position).":"该函数可用于给出发射器{}多普勒{}效果，并基于从给定相对x、y和z位置解析的矢量模拟音频运动。如果发射器本身永远不会移动，通常不需要设置这些值，但是，例如，如果您正在制作一个滚动射击游戏，其中敌人从右边来并向左滚动，那么您可以将其设置为(hspeed， 0， 0)在敌人的创建事件中(使用{}{}audio_emitter_position(){}{}更新步骤事件中每个实例的发射器)，以在敌人实例经过播放器实例时向敌人实例发射的任何声音提供正确的多普勒(播放器实例反过来将使用函数{}{}audio_listener_position(){}{}将{}监听器{}设置为正确位置)。"
}