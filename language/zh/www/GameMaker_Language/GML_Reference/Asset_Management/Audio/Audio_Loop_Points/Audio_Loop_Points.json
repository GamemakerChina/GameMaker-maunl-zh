{
    "After changing this, the remainder of the looping part will be played, followed by the outro part.":"更改此设置后，将播放循环部分的其余部分，然后播放尾声部分。",
    "By default, a sound is set to loop from the beginning to the end. This corresponds to a start value of 0.0 seconds and an end value of 0.0 seconds (corresponding to&nbsp;{}{}audio_sound_length{}{}).":"默认情况下，声音设置为从头到尾循环。这对应于 0.0 秒的起始值和 0.0 秒的结束值 (对应于 {}{}audio_sound_length{}{})。",
    "By using the functions provided for audio looping, the looping is performed on the audio thread, {}at audio rates{}.":"通过使用为音频循环提供的功能，以音频速率{}在音频线程{}上执行循环。",
    "Converting from BPM":"从 BPM 转换",
    "Enabling/Disabling Looping":"启用/禁用循环",
    "Every sound asset and sound instance has a single loop section, defined by a start and end time in seconds. The part of the sound between this start and end will play looped if the sound is set to loop.":"每个声音资源和声音实例都有一个循环部分，由以秒为单位的开始和结束时间定义。如果声音设置为循环，则此开始和结束之间的声音部分将播放循环。",
    "Every sound has one loop section. You can add multiple loop sections yourself by storing them in a struct and manually applying the start and end of the loop section you want to use at any given moment:&nbsp;":"每个声音都有一个循环部分。您可以自己添加多个循环节，方法是将它们存储在结构中，并在任何给定时刻手动应用要使用的循环节的开始和结束：",
    "Every sound that you play using any of the {}audio_play_sound_{} functions gets its default loop start and loop end time from the asset when played, e.g.:&nbsp;":"使用任何 {}audio_play_sound_{} 函数播放的每个声音都会在播放时从资源获取其默认循环开始时间和循环结束时间，例如： ",
    "Examples":"示例",
    "Function Reference":"函数指南",
    "Here are the GML Code functions for audio looping:":"以下是音频循环的 GML 代码函数：",
    "In this situation you have an audio file with an intro, a looping mid-section and an outro. The audio is played from the start, plays the intro part first, then moves to the looped part and keeps playing this looped until the audio is set to no longer loop. At that point the looped part will finish playing a last time to then transition to the outro part.":"在这种情况下，您有一个音频文件，其中有一个前奏、一个循环的中间部分和一个结尾。音频从头开始播放，首先播放前奏部分，然后移动到循环部分，并继续播放此循环部分，直到音频设置为不再循环。在这一点上，循环部分将完成最后一次播放，然后过渡到超出部分。",
    "Intro &amp; Outro":"前奏和尾声",
    "Limitations":"限制",
    "Loop Section":"循环部分",
    "Multiple Loops":"多重循环",
    "Once the sound is in the looping part, the sound instance can then be set to no longer loop:&nbsp;":"一旦声音进入循环部分，就可以将声音实例设置为不再循环：",
    "Setting the loop state of a sound instance can be done in two ways. The first is when playing the sound using&nbsp;{}{}audio_play_sound{}{}&nbsp;or any of the other {}audio_play_sound_{}&nbsp;functions:&nbsp;":"设置声音实例的循环状态可以通过两种方式完成。第一个是使用 {}{}audio_play_sound{}{} 或任何其他 {}audio_play_sound_{} 函数播放声音时：",
    "The following are a couple of ways in which you can use audio loop points to loop audio.":"以下是使用音频循环点循环音频的几种方法。",
    "The loop end position {}must{} be after the loop start position, except when they are both set to 0.0 (i.e. loop the sound from start to end).":"循环结束位置{}必须{}在循环开始位置之后，除非它们都设置为 0.0 (即从开始循环到结束声音)。",
    "The second is by calling the function&nbsp;{}{}audio_sound_loop{}{}&nbsp;on an already playing sound:&nbsp;":"第二种方式是将函数 {}{}audio_sound_loop{}{} 称为已经在播放的声音：",
    "This code sets the loop start position for a sound asset {}snd_bgm{} to the start of the fifth bar.":"此代码将声音资源 {}snd_bgm{} 的循环开始位置设置为第五条的开始位置。",
    "Using the BPM of a piece of music you can calculate the time one \"beat\" takes. This way you can loop parts of a sound that correspond precisely to beats or bars in the music:&nbsp;":"使用一段音乐的 BPM，你可以计算出一个\"节拍\"所花费的时间。通过这种方式，您可以循环播放与音乐中的节拍或小节精确对应的声音部分：",
    "While you can manually control audio playback using&nbsp;{}{}audio_sound_get_track_position{}{}&nbsp;and&nbsp;{}{}audio_sound_set_track_position{}{}, this will never be accurate for looping a section, as audio is processed at a much higher rate, e.g. 44100 or 48000 times a second (the sample rate), which is a lot more than the default game speed of 60. This means that many samples may have already played between the time you call one function and the next.":"虽然您可以使用 {}{}audio_sound_get_track_position{}{} 和 {}{}audio_sound_set_track_position{}{} 手动控制音频播放，但这对于循环一节是永远不会准确的，因为音频的处理速度要高得多，例如每秒 44100 或 48000 次 (采样率)，这比默认的游戏速度 60 要高得多。这意味着在调用一个函数和下一个函数之间可能已经播放了许多样本。",
    "{}Audio Loop Points{}":"{}音频循环点{}",
    "{}Audio Loop Points{}&nbsp;allow you to loop a part (or&nbsp;section) of an audio asset.":"{}音频循环点{}允许您循环音频资源的一部分(或一节)。",
    "{}When pushing the feature to its limits (e.g. with extremely small loop-sections), compressed sounds will incur a performance penalty. In such cases, it is better to use uncompressed sound assets.{}":"{}当将该功能推到其极限时(例如，使用极小的循环部分)，压缩声音将导致性能损失。在这种情况下，最好使用未压缩的声音资源。{}",
    "{}{}NOTE{}{}&nbsp;Once the sound has stopped playing {}ins_sound{} will no longer refer to a valid sound instance and you will need to play a new one using&nbsp;{}{}audio_play_sound{}{}.":"{}{}注意{}{} 声音停止播放 {}ins_sound{} 后，将不再引用有效的声音实例，您需要使用 {}{}audio_play_sound{}{} 播放新的声音实例。",
    "{}{}NOTE{}{}&nbsp;When a sound\u0027s track position reaches the loop end position&nbsp;{}GameMaker{}&nbsp;checks whether it should loop. If at that moment its loop state is set to {}true{}, the sound will jump back to the loop start position. If not, it will continue playing the sound until the end, unless you change either the track position or the loop end.":"{}{}注意{}{} 当声音的音轨位置到达循环结束位置时，{}GameMaker{} 会检查是否应该循环。如果此时其循环状态设置为 {}true{}，则声音将跳回循环开始位置。如果不是，它将继续播放声音直到结束，除非您更改轨道位置或循环结束。",
    "{}{}{}NOTE{}{}&nbsp;{}{}You cannot use buffer-based audio queues or audio sync groups with the audio looping functions. All other kind of audio can be used without problems,{}&nbsp;including {}buffer sounds{} and {}streams{}.&nbsp;{}{}":"{}{}{}注意{}{} {}{}不能将基于缓冲区的音频队列或音频同步组与音频循环功能一起使用。所有其他类型的音频都可以毫无问题地使用，{} 包括{}缓冲声音{}和{}流{}。{}{}"
}