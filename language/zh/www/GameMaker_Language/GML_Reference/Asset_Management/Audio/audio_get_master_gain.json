{
    "The above code loops through the available listeners, checking to see if their gain is 1 or not, and if it is not it sets it to 1 for each of them.":"上面的代码循环通过可用的侦听器，检查其增益是否为1，如果不是，则为每个监听器设置为1。",
    "The default listener index is 0, but you can use the function&nbsp;{}{}audio_get_listener_info{}{}&nbsp;to get the different indices available for the target platform. The gain value returned is based on a linear scale from 0 (silent) to 1 (full volume).":"默认监听器索引为 0，但可以使用函数 {}{}audio_get_listener_info(){}{} 获取目标平台可用的不同索引。返回的增益值基于从 0 (静音) 到 1 (全音量) 的线性标度。",
    "The index of the listener to get the gain of.":"收听者获取增益的索引。",
    "With this function you can get the absolute value for the global volume of all sounds and music for a specific listener.":"通过此函数，您可以获取特定听众所有声音和音乐的全局音量的绝对值。",
    "With this function you can get the absolute value for the global volume of all sounds and music for a specific listener. The default listener index is 0, but you can use the function {}{}audio_get_listener_info(){}{}&nbsp;to get the different indices available for the target platform. The gain value returned is based on a linear scale from 0 (silent) to 1 (full volume). Note that on some platforms you can have a gain of greater than 1, although a value of 1 is considered \"full volume\" and anything greater may introduce audio clipping.":"通过此函数，您可以获取特定听众所有声音和音乐的全局音量的绝对值。默认监听器索引为0，但可以使用函数{}{}audio_get_listener_info(){}{}获取目标平台可用的不同索引。返回的增益值基于从0(静音)到1(全音量)的线性标度。请注意，在某些平台上，增益可以大于1，但1被视为\"全音量\"，任何更大的值都可能引入音频削波。",
    "{}{}NOTE{}{}&nbsp;On some platforms you can have a gain of greater than 1, although a value of 1 is considered \"full volume\" and anything greater may introduce audio clipping.":"{}{}注意{}{} 在某些平台上，增益可以大于 1，但 1 被视为\"全音量\"，任何更大的值都可能引入音频削波。",
    "{}{}NOTE{}{}&nbsp;Use&nbsp;{}{}db_to_lin{}{}&nbsp;and&nbsp;{}{}lin_to_db{}{}&nbsp;to convert back and forth between linear gains and gains expressed in decibels (dB).":"{}{}注意{}{} 使用 {}{}db_to_lin{}{} 和 {}{}lin_to_db{}{} 在线性增益和以分贝 (dB) 表示的增益之间来回转换。"
}