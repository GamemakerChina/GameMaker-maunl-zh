{
    "OPTIONAL! The type of asset to get the tags for, only used when supplying an index for the first argument.":"可选!要获取标签的资源类型，仅在为第一个参数提供索引时使用。",
    "The above code will retrieve all the tags assigned to the object that the instance running the code has been created from.":"上面的代码将检索分配给运行代码的实例已从中创建的对象的所有标记。",
    "The given name refers to a {}Sequence{}.":"给定的名称指的是{}序列{}。",
    "The given name refers to a {}font{}.":"给定的名称指的是{}字体{}。",
    "The given name refers to a {}path{}.":"给定的名称指的是{}路径{}。",
    "The given name refers to a {}room{}.":"给定的名称指的是{}房间{}。",
    "The given name refers to a {}script{}.":"给定的名称指的是{}脚本{}。",
    "The given name refers to a {}shader{}.":"给定的名称指的是{}着色器{}。",
    "The given name refers to a {}sound{}.":"给定的名称指的是{}声音{}。",
    "The given name refers to a {}sprite{}.":"给定的名称指的是{}精灵{}。",
    "The given name refers to a {}tile set{}.":"给定的名称指的是{}图块{}。",
    "The given name refers to a {}time line{}.":"给定的名称指的是{}时间线{}。",
    "The given name refers to a&nbsp;{}Particle System{}.":"给定的名称指的是{}粒子系统{}。",
    "The given name refers to an asset that either does not exist, or is not one of the above listed.":"给定的名称指的是不存在或不是上述资源之一的资源。",
    "The given name refers to an {}Animation Curve{}.":"给定的名称指的是{}动画曲线{}。",
    "The given name refers to an {}object{}.":"给定的名称指的是{}对象{}。",
    "The name of the asset (a string) or its index.":"资产的名称(字符串)或其索引。",
    "This function retrieves all tags assigned to an asset from {}The Asset Browser{}.":"此函数从{}资产浏览器{}检索分配给资产的所有标签。",
    "With this function you can retrieve all the tags assigned to an asset from the Asset Browser. You supply either the asset name (as a string) or it\u0027s asset index, and the function will return an {}array{} of tags for that asset. If no tags are found or there is an error (ie: the name string given doesn\u0027t exist) then the returned array will be empty. If you supply an asset index value, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below:":"使用此函数，您可以从资源浏览器检索分配给资源的所有标记。您可以提供资源名称 (作为字符串) 或它的资源索引，该函数将返回该资源的标签{}数组{}。如果找不到任何标签或有错误 (即: 给定的名称字符串不存在)，则返回的数组将为空。如果提供资源索引值，则需要提供可选的资源类型参数 (常量)，因为不同类型的资源可以具有相同的索引，即使它们不能具有相同的名称。下表列出了可用的资源类型:",
    "You supply either the asset name (as a string) or its asset index, and the function will return an {}array{} of tags for that asset. If no tags are found or there is an error (i.e.: the name string given doesn\u0027t exist) then the returned array will be empty. If you supply an asset index value, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below:":"您提供资产名称(作为字符串)或其资产索引，该函数将返回该资产的标签{}数组{}。如果未找到标签或存在错误(即：给定的名称字符串不存在)，则返回的数组将为空。如果您提供资产索引值，则需要提供可选的资产类型参数(常量)，因为不同类型的资产可以具有相同的索引，即使它们不能具有相同的名称。下表列出了可用的资产类型：",
    "{}{}OPTIONAL{}{}&nbsp;The type of asset to get the tags for, only used when supplying an index for the first argument.":"{}{}可选{}{}要获取标签的资产类型，仅在为第一个参数提供索引时使用。"
}