{
    "It is worth noting that for the font alignment functions to work (like {}{}draw_set_halign(){}{}) then the font sprite should have its origin set to the {}top left corner{}. If you use other values then you will need to take the origin offset into consideration when drawing text using the font.":"值得注意的是，要使字体对齐函数起作用 (例如{}{}draw_set_halign(){}{})，则字体精灵的原点应设置为{}左上角{}。如果使用其他值，则在使用字体绘制文本时需要考虑原点偏移量。",
    "Set as proportional font or not.":"是否设置为比例字体。",
    "String from which sprite sub-image order is taken.":"从中获取精灵子图像顺序的字符串。",
    "The above code will create a new font asset from the sprite indexed in the variable \"spr_CalcFont\" and store the index of the new font in the variable \"global.Font\". The sub-images of the sprite font will be mapped to the string specified.":"上述代码将从变量 \"spr_CalcFont\" 中索引的精灵创建新的字体资源，并将新字体的索引存储在变量 \"global.font\" 中。精灵字体的子图像将映射到指定的字符串。",
    "The function returns an {}index{} value that should be stored in a variable as this will be needed in all further codes that refer to this font, or it will return -1 if the function fails for any reason.":"该函数返回一个{}index{}值，该值应存储在变量中，因为在引用此字体的所有其他代码中都需要此值，或者如果该函数由于任何原因而失败，它将返回-1。",
    "The space to leave between each letter.":"每个字母之间要留出的空间。",
    "The sprite to add a font based on.":"要添加字体的sprite.",
    "With this function you can use a \"sprite strip\" (the sprite itself {}must{} be a sprite asset from the Asset Browser, or a sprite you have added to the game resources using {}sprite_add{}) to create a new font asset, where each sub-image would be an individual symbol or letter. Unlike the normal {}{}font_add_sprite(){}{} which has a specific order for the sub-images of the sprite, this function will map the sprite sub-images based on the argument \"string_map\" of the function. This argument is a string that you can use to tell {}GameMaker{} what order the sub-images of the sprite font are and it will map these automatically when writing text. So, for example, if you have a string-map of \"AaBbCcDdEeFfGgHh\", your sprite font {}must{} have the sub-images ordered in this way. You can define \"space\" as being any character you want, for example a single line the size that you want the space to be, and all spaces in text will be rendered at that width (but the image chosen will {}never{} be rendered), or if you don\u0027t supply a sprite for space then the width of the widest character in the sprite font will be used instead.":"使用此函数，您可以使用 \"精灵条\" (精灵本身{}必须{}是资源浏览器中的精灵资源，或者使用{}sprite_add{}添加到游戏资源中的精灵) 来创建新的字体资源，其中每个子图像将是一个单独的符号或字母。与普通的{}{}font_add_sprite(){}{}对sprite的子图像有特定的顺序不同，此函数将根据函数的参数 \"string_map\" 来映射sprite子图像。这个参数是一个字符串，你可以用它来告诉{}GameMaker{}精灵字体的子图像是什么顺序，它会在写文本时自动映射这些。因此，例如，如果您有一个字符串映射 \"AaBbCcDdEeFfGgHh\"，则您的sprite字体{}必须{}具有以这种方式排序的子图像。您可以将 \"空格\" 定义为您想要的任何字符，例如，您希望空格大小的单行，并且文本中的所有空格都将以该宽度呈现 (但是选择的图像将{}永远不会{}被呈现)，或者，如果您不提供sprite空间，则将使用sprite字体中最宽字符的宽度。",
    "You can also set the spacing for the font to be proportional ({}true{}) or not ({}false{}), where a proportional font is spaced based on the actual width of the letters (so the letter \"i\" takes less room than the letter \"w\", for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will \"touch\" if proportional).":"您还可以将字体的间距设置为按比例 ({}true{}) 或不按比例 ({}false{})，其中按比例字体的间距是根据字母的实际宽度进行的 (因此，字母 \"i\" 占用的空间比字母 \"w\" 少，例如)，而非比例字体将根据子图像宽度进行间隔，例如等宽字体。最后，您可以定义书写时每个字母之间要留出的空间，这可以是任何整数值，0是没有空格的 (如果比例，字母将 \"触摸\")。",
    "{}{}NOTE{} {}When you load a font into {}GameMaker{} you must remember to remove it again (with {}{}{}font_delete(){}{}{}) when no longer needed, otherwise there is risk of a memory leak which will slow down and eventually crash your game.":"{}{}注意{}{}当您将字体加载到{}GameMaker{}时，您必须记住在不再需要时再次将其删除 (使用{}{}{}font_delete(){}{}{})，否则存在内存泄漏的风险，这将减慢速度并最终使您的游戏崩溃。"
}