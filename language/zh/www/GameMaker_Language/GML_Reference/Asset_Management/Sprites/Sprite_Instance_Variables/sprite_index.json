{
    "Changing the sprite does not change the index of the currently visible frame, given that there is a sub-image for the current frame in the new sprite. So if you change the sprite on frame number 3, the new sprite will be drawn with that frame visible. However, if the new sprite does {}not{} contain a sub-image for the current frame,&nbsp;{}{}image_index{}{}&nbsp;will reset to {}0{}, displaying the first frame of the sprite instead.":"更改精灵不会更改当前可见帧的索引，因为新精灵中存在当前帧的子图像。因此，如果您更改第 3 帧上的精灵，则新的精灵将在该帧可见的情况下绘制。不过，如果新精灵 {} 不 {} 包含当前帧的子图像，则 {}{}image_index{}{} 将重置为 {}0{}，转而显示精灵的第一帧。",
    "The above code will loop through all instances of \"obj_Check\" checking for a collision line between them and the instance running the code. The sprite of those instances will be changed depending on the return value (true or false) for the collision line.":"上面的代码将遍历“ OBJ_检查”的所有实例，检查它们与运行该代码的实例之间的冲突线。这些实例的精灵将根据碰撞线的返回值(true或false)进行更改。",
    "This variable returns the current sprite set for the instance, or {}-1{} if the instance has no sprite associated with it.":"该变量返回实例的当前精灵集，如果实例没有与之关联的精灵，则返回 {}-1{}。",
    "This variable returns the index of the current sprite for the instance, or -1 if the instance has no sprite associated with it. You can change it to give the instance a different sprite by giving it the name of a sprite from the resource tree or by using a variable that has an externally loaded sprite indexed in it. Changing the sprite does not change the index of the currently visible frame, so if you change the sprite on frame number 3, the new sprite will be drawn with that frame visible (assuming it has the same number of frames).":"此变量返回实例的当前精灵的索引，如果实例没有与之关联的精灵，则返回-1。您可以通过从资源树中为实例指定精灵的名称，或者使用包含外部加载的精灵索引的变量，来更改它以为实例指定不同的精灵.更改sprite不会更改当前可见帧的索引，因此，如果更改编号为3的帧上的精灵，则新的精灵将在该帧可见的情况下绘制(假设它具有相同的帧数)。",
    "You can change it to give the instance a different sprite, by either giving it the reference of a sprite from&nbsp;{}The Asset Browser{} or by using a variable that has an {}externally loaded sprite{} indexed in it.":"您可以更改它，为实例提供不同的精灵，方法是从 {} 资源浏览器 {} 提供精灵的引用，或者使用在其中建立索引的 {} 外部加载精灵 {} 的变量。"
}