{
    "By default all new sprites have their bounding boxes calculated automatically (the exact bbox will depend on the size and transparency of the sprite), however you may wish to customise this, in which case you should also use the function {}{}sprite_collision_mask(){}{}.":"默认情况下，所有新的精灵都会自动计算其边界框(确切的边界框将取决于精灵的大小和透明度)，但是您可能希望对此进行自定义，在这种情况下，您还应该使用函数{}{}sprite_collision_mask(){}{}。",
    "Finally you can also specify the x and y {}origin{} for the sprite. This is the point where the sprite is \"fixed\" onto the instance that uses it, and is always calculated as relative to the 0,0 top left corner of one sprite sub-image. So, for example, a sprite that is 32 x 32 pixels with these values set to (16,16) will have its origin in the center.":"最后，您还可以为sprite指定X和Y{}原点{}。这是精灵被“固定”到使用它的实例上的点，并且总是相对于一个精灵子图像的左上角0，0来计算。因此，例如，将这些值设置为(16，16)的32 X 32像素的sprite将使其原点位于中心。",
    "If you choose the \"removeback\" option, you may also want {}GameMaker{} to smooth the edges of the sprite by setting the \"smooth\" argument to {}true{}. All this does is create a semi-transparent border around the edges of the sprite after it has had its background removed.":"如果您选择“ RemoveBack ”选项，您可能还希望{}GameMaker{}通过将“ Smooth ”参数设置为{}true{}来平滑精灵的边缘。所有这些都是在精灵的背景被移除后，在精灵的边缘创建一个半透明的边界。",
    "Indicates the x position of the origin in the sprite.":"指示原点在精灵中的X位置。",
    "Indicates the y position of the origin in the sprite.":"指示原点在精灵中的Y位置。",
    "Indicates whether to make all pixels with the background colour (left-bottom pixel) transparent.":"指示是否将具有背景色的所有像素(左下像素)设置为透明。",
    "Indicates whether to smooth the edges.":"指示是否平滑边缘。",
    "Setting the \"removeback\" argument to {}true{} will remove a colour from the sprite, by checking the {}bottom left{} pixel of the sprite for the colour there and then using that as the colour to be removed.":"将“ removeBack ”参数设置为{}true{}将从精灵中删除颜色，方法是检查精灵的{}左下{}像素中的颜色，然后将其用作要删除的颜色。",
    "Setting the \"removeback\" argument to {}true{} will remove a colour from the sprite, by checking the {}bottom left{} pixel of the sprite for the colour there and then using that as the colour to be removed.&nbsp;When \"removeback\" is enabled, the alpha channel of the surface is ignored, meaning all pixels other than the \"background colour\" ones become fully opaque.":"将 \"removeback\" 参数设置为 {}true{} 将从精灵中删除一种颜色，方法是检查精灵的 {} 左下角 {} 像素中的颜色，然后使用该像素作为要移除的颜色。当启用 \"removeback\" 时，表面的 Alpha 通道将被忽略，这意味着除 \" 背景色 \" 之外的所有像素都变得完全不透明。",
    "The above code creates a surface and stores its index in the local variable \"surf\". It then targets that surface, clears it and draws several sprites on top of each other. Finally it creates a new sprite from the composite image drawn on the surface and assigns its index to \"spr_Custom\" before freeing up the memory used by the surface.":"上面的代码创建了一个表面，并将其索引存储在局部变量“ surf ”中。然后，它以该表面为目标，清除该表面，并在彼此的顶部绘制多个精灵。最后，它从绘制在表面上的合成图像创建一个新的sprite，并在释放表面使用的内存之前将其索引分配给“ SPR_自定义”。",
    "The height of the area to be copied (from the y position).":"要复制的区域的高度(从Y位置)。",
    "The index of the surface to create from.":"要创建的surface的索引。",
    "The width of the area to be copied (from the x position).":"要复制的区域的宽度(从X位置)。",
    "The x position to copy from.":"要从中复制的X位置。",
    "The y position to copy from.":"要复制的Y位置。",
    "With this function you can create a sprite from a previously initialised surface (the surface index ID value is returned when you create the surface using {}{}surface_create(){}{}). The x and y coordinates that you then input in the function should be relative to the (0,0) position of the {}surface{} (the top left corner) and not the game window (nor the view if you have one active). The width and height arguments are in pixels and define the width and height of the part of the surface to use.":"使用此函数，您可以从先前初始化的表面创建sprite(当您使用{}{}Surface_create(){}{}创建表面时，将返回表面索引ID值)。然后你在函数中输入的X和y坐标应该相对于{}表面{}(左上角)的(0，0)位置，而不是游戏窗口(也不是视图，如果你有一个活动的)。宽度和高度参数以像素为单位，并定义要使用的表面部分的宽度和高度。",
    "{}{}NOTE{}{} When you create a sprite in {}GameMaker{} with this method you must remember to remove it again (with {}{}sprite_delete(){}{}) when no longer needed, otherwise there is risk of a memory leak which will slow down and eventually crash your game.":"{}{}注意{}{} 当您使用此方法在{}GameMaker{}中创建精灵时，必须记住在不再需要时再次将其删除(使用{}{}sprite_delete(){}{})，否则存在内存泄漏的风险，这将降低游戏速度并最终使游戏崩溃。",
    "{}{}NOTE{}{}&nbsp;This function will only work with surfaces that use the&nbsp;{}{}surface_rgba8unorm{}{} (default) surface format.":"{}{}注意{}{} 此函数仅适用于使用 {}{}surface_rgba8unorm{}{} (默认)曲面格式的曲面。"
}