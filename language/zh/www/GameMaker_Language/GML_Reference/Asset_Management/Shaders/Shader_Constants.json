{
    "Apart from the shader functions and constants defined in the OpenGL ES Shading Language (GLSL ES) {}Reference Pages{}, there are also a number of built-in&nbsp;shader constants&nbsp;available to you that are unique to {}GameMaker{}.":"除了 OpenGL ES 着色语言 (GLSL ES){} 参考页 {} 中定义的着色器函数和常量之外，您还可以使用许多 {}GameMaker{} 特有的内置着色器常量。",
    "Apart from the shader functions and constants defined in the OpenGL ES Shading Language (GLSL ES) {}Reference Pages{}, there are also a number of shader constants available to you that are unique to {}GameMaker{}.":"除了在 OpenGL ES 着色语言(GLSL ES){}参考页{}中定义的着色器函数和常量之外，还有许多可用于{}GameMaker{}的着色器常量。",
    "Apart from the shader functions and constants defined in the OpenGL ES Shading Language (GLSL ES) {}Reference Pages{}, there are also a number of shader uniforms available to you that are unique to {}GameMaker{}.":"除了 OpenGL ES 着色器语言 (GLSL ES){} 参考页面 {} 中定义的着色器函数和常量外，还有许多着色器 uniform 可供您使用，这些着色器 uniform 是 {}GameMaker{} 独有的。",
    "Shader Constants":"着色器常量",
    "The following constants (i.e. {}defines{}) can be used as array indices when using the shader array uniform&nbsp;{}gm_Matrices{}:":"使用着色器数组统一 {}gm_Matrices{} 时，以下常量 (即 {}defines{}) 可用作数组索引：",
    "The following constants are also available:":"以下常量也可用：",
    "The following display matrix constants can be used as array indices when using the shader array constant&nbsp;{}gm_Matrices{}:":"使用着色器数组常量{}GM_矩阵{}时，可以将以下显示矩阵常量用作数组索引：",
    "The following pre-defined matrix uniforms and constants can be used in your shader to access {}GameMaker{} specific values:":"可以在着色器中使用以下预定义的矩阵统一和常量来访问 {}GameMaker{} 特定值：",
    "The maximum number of point and directional lights available in the shader":"材质球中可用的点光源和平行光的最大数量",
    "The maximum number of point and directional lights available in the shader.":"着色器中可用的点光源和平行光的最大数量。",
    "The maximum number of point and directional lights available in the vertex&nbsp;shader.":"顶点着色器中可用的点光源和定向光源的最大数量。",
    "The names listed in the tables below refer to either:":"下表中列出的名称指的是：",
    "The size of the matrix array ({}gm_Matrices{}) in the vertex shader.":"顶点着色器中的矩阵数组的大小 ({}gm_Matrices{})。",
    "This array constant returns a transform matrix and is one of the available pre-defined uniforms that {}GameMaker{} creates for you to use within the shader code editor. The array index is chosen from one of the above listed constants.":"此数组常量返回变换矩阵，是{}GameMaker{}为您在着色器代码编辑器中使用而创建的可用预定义 uniform 之一。数组索引选自上述常数之一。",
    "This array index constant holds the index to the current projection matrix. The index returned would be used as an array value when accessing the built-in {}gm_Matrices{} uniform within the shader code.":"该数组索引常量保存当前投影矩阵的索引。在访问着色器代码中的内置 {}gm_Matrices{} 统一值时，返回的索引将用作数组值。",
    "This array index constant holds the index to the current projection matrix. The index returned would be used as an array value when calling the {}gm_Matrices{} constant within the shader code.":"此数组索引常数保存当前投影矩阵的索引。当调用着色器代码中的{}gm_Matrices{}常量时，返回的索引将用作数组值。",
    "This array index constant holds the index to the current view matrix. The index returned would be used as an array value when accessing the built-in&nbsp;{}gm_Matrices{} uniform within the shader code.":"该数组索引常量保存当前视图矩阵的索引。在访问着色器代码中的内置 {}gm_Matrices{} 统一值时，返回的索引将用作数组值。",
    "This array index constant holds the index to the current view matrix. The index returned would be used as an array value when calling the {}gm_Matrices{} constant within the shader code.":"此数组索引常量保存当前视图矩阵的索引。当调用着色器代码中的{}gm_Matrices{}常量时，返回的索引将用作数组值。",
    "This array index constant holds the index to the current world matrix. This can be used for things like lighting if you have light information in world space. The index returned would be used as an array value when accessing the built-in {}gm_Matrices{} uniform within the shader code.":"该数组索引常量保存当前世界矩阵的索引。如果您有世界空间中的光信息，这可以用于诸如照明之类的事情。在访问着色器代码中的内置 {}gm_Matrices{} 统一值时，返回的索引将用作数组值。",
    "This array index constant holds the index to the current world matrix. This can be used for things like lighting if you have light information in world-space. The index returned would be used as an array value when calling the {}gm_Matrices{} constant within the shader code.":"此数组索引常数保存当前世界矩阵的索引。如果世界空间中有灯光信息，这可以用于照明之类的事情。当调用着色器代码中的{}gm_Matrices{}常量时，返回的索引将用作数组值。",
    "This array index constant holds the index to the result of the world and view matrices multiplied together. This is often used for things like fog. The index returned would be used as an array value when accessing the built-in {}gm_Matrices{} uniform within the shader code.":"该数组索引常量保存世界矩阵和视图矩阵相乘结果的索引。这通常用于雾等事物。在访问着色器代码中的内置 {}gm_Matrices{} 统一值时，返回的索引将用作数组值。",
    "This array index constant holds the index to the result of the world and view matrices multiplied together. This is often used for things like fog. The index returned would be used as an array value when calling the {}gm_Matrices{} constant within the shader code.":"此数组索引常量保存世界结果的索引，并查看相乘在一起的矩阵。这经常用于雾之类的事情。当调用着色器代码中的{}gm_Matrices{}常量时，返回的索引将用作数组值。",
    "This array index constant holds the index to the result of the world, view and projection matrices multiplied together. This is the normal transformation matrix used for vertex positions. The index returned would be used as an array value when calling the {}gm_Matrices{} constant within the shader code.":"此数组索引常量将世界、视图和投影矩阵结果的索引相乘在一起。这是用于顶点位置的法线变换矩阵。当调用着色器代码中的{}gm_Matrices{}常量时，返回的索引将用作数组值。",
    "This array index constant holds the index to the result of the world, view and projection matrices multiplied together. This is the normal transformation matrix used for vertex positions. The index returned would be used as an index into the&nbsp;{}gm_Matrices{} uniform within the shader code.":"该数组索引常量保存世界矩阵、视图矩阵和投影矩阵相乘结果的索引。这是用于顶点位置的法线变换矩阵。返回的索引将用作着色器代码中 {}gm_Matrices{} 统一的索引。",
    "This array uniform of mat4s stores the various transform matrices used by&nbsp;{}GameMaker{} and is one of the available predefined uniforms that {}GameMaker{} creates for you to use within the shader code editor. The array index is chosen from one of the matrix index constants&nbsp;listed above, e.g. {}gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION]{}. Its number of elements is {}MATRICES_MAX{}.":"此 mat4s 数组统一存储了 {}GameMaker{} 使用的各种变换矩阵，并且是 {}GameMaker{} 创建供您在着色器代码编辑器中使用的可用预定义统一之一。数组索引选自上面列出的矩阵索引常量之一，例如 {}gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION]{}。其元素数量为 {}MATRICES_MAX{}。",
    "This boolean uniform holds whether alpha testing is enabled. See&nbsp;{}{}gpu_set_alphatestenable{}{} for more information on alpha testing.":"这个布尔值保存是否启用 alpha 测试。有关 alpha 测试的更多信息，请参阅 {}{}gpu_set_alphatestenable{}{}。",
    "This boolean uniform holds whether lighting is enabled, i.e. the value set with&nbsp;{}{}draw_light_enable{}{} and returned by&nbsp;{}{}draw_get_lighting{}{}.":"该布尔值保存是否启用光照，即使用 {}{}draw_light_enable{}{} 设置并由 {}{}draw_get_lighting{}{} 返回的值。",
    "This can be used to get alpha testing in the shader. See {}{}gpu_set_alphatestenable(){}{}&nbsp;for more information on alpha testing.":"这可用于在着色器中进行 Alpha 测试。有关 alpha 测试的更多信息，请参见{}{}gpu_set_alphatestenable(){}{}。",
    "This can be used to get or set the {}GameMaker{} lighting when using 3D.":"这可用于在使用3D时获取或设置{}GameMaker{}照明。",
    "This can be used to get the current alpha testing reference value. See {}{}gpu_set_alphatestref(){}{}&nbsp;for more information on the alpha test reference.":"这可用于获取当前alpha测试参考值。有关 alpha 测试参考的更多信息，请参见{}{}gpu_set_alphatestref(){}{}。",
    "This can be used to get the distance at which fog is maximal and nothing can be seen anymore.":"这可以用来获得雾最大并且什么都看不见的距离。",
    "This can be used to get the distance where polygons start to be blended with the fog colour.":"这可用于获取多边形开始与雾颜色混合的距离。",
    "This can be used to get the fog colour used by {}GameMaker{}.":"这可用于获取{}GameMaker{}使用的雾色。",
    "This float uniform holds the current alpha testing reference value. See&nbsp;{}{}gpu_set_alphatestref{}{} for more information on the alpha test reference.":"该浮点uniform保存当前的 alpha 测试参考值。有关 alpha 测试参考的更多信息，请参阅 {}{}gpu_set_alphatestref{}{}。",
    "This is a 2D sampler constant that returns the texture of the current object, as set by {}GameMaker{}. So it would be the current sprite, surface or texture that would normally be used when drawing without the shader being called.":"这是返回当前对象的纹理的二维采样器常量，由{}GameMaker{}设置。 因此，在不调用着色器的情况下绘制时，通常使用的是当前精灵、表面或纹理。",
    "This is a 2D sampler uniform that holds the texture of that which&nbsp;{}GameMaker{}&nbsp;is currently drawing. So it would be the (full) texture page the current sprite is on, the texture of the surface being drawn or the texture passed as the texture to&nbsp;{}{}vertex_submit{}{}&nbsp;in case you\u0027re submitting a custom vertex buffer.":"这是一个 2D 采样器制服，保存 {}GameMaker{} 当前正在绘制的纹理。因此，如果您要提交自定义顶点缓冲区，它将是当前精灵所在的 (完整) 纹理页面、正在绘制的表面纹理或作为纹理传递到 {}{}vertex_submit{}{} 的纹理。",
    "This is a vec4 containing the colour of the ambient light as set in {}{}draw_light_define_ambient(){}{}":"这是一个包含在 {}{}draw_light_define_ambient(){}{} 中设置的环境光颜色的 vec4",
    "This is a vec4 uniform containing the colour of the ambient light as set with&nbsp;{}{}draw_light_define_ambient{}{}.":"这是一个 vec4 制服，包含使用 {}{}draw_light_define_ambient{}{} 设置的环境光颜色。",
    "This is an array of vec4s, each vec4 contains a light\u0027s colour (R, G, B), with the alpha channel (A) always being 1":"这是一个 vec4s 数组，每个 vec4 包含一种光的颜色 (R、G、B)，其中 Alpha 通道 (A) 始终为 1",
    "This is an array of vec4s, each vec4 contains a light\u0027s normalised direction vector (X, Y, Z) and a fourth dimension (W) which is 1 when the light is enabled, and 0 when disabled":"这是一个 vec4s 数组，每个 vec4 包含一个光的归一化方向向量 (X、Y、Z) 和第四维 (W)，当光启用时为 1，禁用时为 0",
    "This is an array of vec4s, each vec4 contains a light\u0027s position (X, Y, Z) and a fourth dimension (W) which is the light\u0027s range, which is 0 when that light is disabled":"这是一个 vec4s 数组，每个 vec4 包含一个光的位置 (X、Y、Z) 和第四维 (W)，这是光的范围，当该光被禁用时，第四维 (W) 为 0",
    "This is an array uniform of vec4s, where each vec4 contains a light\u0027s colour (R, G, B), with the alpha channel (A) always being 1.":"这是 vec4 的统一数组，其中每个 vec4 包含光的颜色 (R、G、B)，且 alpha 通道 (A) 始终为 1。",
    "This is an array uniform of vec4s, where each vec4 contains a light\u0027s normalised direction vector (X, Y, Z) and a fourth dimension (W) which is 1 when the light is enabled, and 0 when disabled. Light properties can be set using&nbsp;{}{}draw_light_define_direction{}{}.":"这是一个 vec4s 的统一数组，其中每个 vec4 包含光的归一化方向向量 (X, Y, Z) 和第四个维度 (W)，当光启用时为 1，禁用时为 0。可以使用 {}{}draw_light_define_direction{}{} 设置灯光属性。",
    "This is an array uniform of vec4s, where each vec4 contains a light\u0027s position (X, Y, Z) and a fourth dimension (W) which is the light\u0027s range, which is 0 when that light is disabled. Light properties can be set using&nbsp;{}{}draw_light_define_point{}{}.":"这是 vec4 的统一数组，其中每个 vec4 包含灯光的位置 (X、Y、Z) 和第四个维度 (W)，第四个维度是灯光的范围，当灯光被禁用时，第四个维度为 0。可以使用 {}{}draw_light_define_point{}{} 设置灯光属性。",
    "This is not an array index, but rather returns the number of the lights in the vertex shader.":"这不是数组索引，而是返回顶点着色器中的灯光数量。",
    "This is not an array index, but rather returns the size of the matrix array in the vertex shader.":"这不是数组索引，而是返回顶点着色器中矩阵数组的大小。",
    "This is the distance at which fog is maximal and nothing can be seen anymore.":"这是雾气最大并且什么也看不见的距离。",
    "This is the distance where polygons start to be blended with the fog colour.":"这是多边形开始与雾颜色混合的距离。",
    "This will hold&nbsp;{}true{} or {}false{}, depending on whether the GPU has pixel fog enabled or not.":"该值将保持 {}true{} 或 {}false{}，具体取决于 GPU 是否启用了像素雾。",
    "This will hold&nbsp;{}true{} or {}false{}, depending on whether the GPU has vertex fog enabled or not.":"该值将保持 {}true{} 或 {}false{}，具体取决于 GPU 是否启用了顶点雾。",
    "This will return {}true{} or {}false{} if the GPU has pixel fog enabled or not.":"如果 GPU 启用或未启用像素雾，这将返回{}true{}或{}false{}。",
    "This will return {}true{} or {}false{} if the GPU has vertex fog enabled or not.":"如果 GPU 启用或未启用顶点雾，这将返回{}true{}或{}false{}。",
    "Uniforms, which start with the {}gm_{} prefix":"Uniforms，以 {}gm_{} 前缀开头",
    "{}#define{}s, which are similar to&nbsp;{}Macros{}&nbsp;in&nbsp;{}GML Code{}&nbsp;and are written in {}UPPERCASE{}":"{}#define{}，类似于 {}GML 代码 {} 中的 {} 宏 {}，并以 {}UPPERCASE{} 编写",
    "{}Built-In Shader Constants{}":"{} 内置着色器常量 {}"
}