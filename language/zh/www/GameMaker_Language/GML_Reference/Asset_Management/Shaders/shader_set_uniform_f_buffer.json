{
    "As floats are represented in a buffer using the&nbsp;{}{}buffer_f32{}{}&nbsp;data type, this function expects the data in the range given by offset and count to be formatted as consecutive values of this type.":"由于浮点数是使用 {}{}buffer_f32{}{} 数据类型在缓冲区中表示的，因此此函数要求将偏移量和计数给定范围内的数据格式化为该类型的连续值。",
    "The above code first creates a new buffer {}buffer{}&nbsp;of a fixed size that has room to store four values ({}_values{}) of type {}buffer_f32{}. This is done in an object\u0027s Create event. Four values between 0 and 1 are then {}written{} to the buffer that represent, in order, the R, G, B and A component of a blend colour. After that a handle is retrieved to a&nbsp;{}uniform vec4 u_vBlendColour;{} uniform defined in a {}shader{}&nbsp;named \"shader_Colorize\". Next in the Draw event this shader is set, the four values in the buffer are passed to the shader using&nbsp;{}{}shader_set_uniform_f_buffer{}{}, and the model in a {}vertex buffer{} named&nbsp;{}vb_character{}&nbsp;is submitted (i.e. {}drawn{}). After that the shader is reset. Finally in the Clean Up event the buffer is deleted to avoid a memory leak.":"上面的代码首先创建一个固定大小的新缓冲区 {}buffer{}，该缓冲区具有存储类型为 {}buffer_f32{} 的四个值 ({2}_values{3}) 的空间。这是在对象的创建事件中完成的。然后，将 0 到 1 之间的四个值按顺序 {} 写入 {} 表示混合色的 R、G、B 和 A 分量的缓冲区。之后，句柄被检索到在名为 \"shader_Colorize\" 的 {10} 着色器 {11} 中定义的 {} uniform vec4 u_vBlendColour; {} 句柄。接下来，在设置此着色器的绘制事件中，缓冲区中的四个值将传递给着色器使用 {}{}shader_set_uniform_f_buffer{}{}，并提交名为 {18}vb_character{19} 的 {} 顶点缓冲区 {} 中的模型 (即 {}drawn{})。之后，着色器将重置。最后，在清除事件中，删除缓冲区以避免内存泄漏。",
    "The buffer to read the values from":"要从中读取值的缓冲区",
    "The handle to the shader uniform as returned by&nbsp;{}{}shader_get_uniform{}{}":"由 {}{}shader_get_uniform{}{} 返回的着色器统一的 uniform 句柄",
    "The number of values of type {}buffer_f32{}&nbsp;to be used (see {}Buffer Data Type Constant{})":"要使用的 {}buffer_f32{} 类型的值数 (参见 {} 缓冲区数据类型常量 {})",
    "The offset (in bytes) in the buffer":"缓冲区中的偏移量(字节)",
    "With this function you can set the value of a shader uniform to a list of floating point values that are stored in a buffer.":"使用该函数，可以将着色器统一的值设置为存储在缓冲区中的浮点值的列表。",
    "{}{}NOTE{}{}&nbsp;All uniforms must be set {}after{} calling the function {}{}shader_set{}{}&nbsp;and {}before{} calling {}{}shader_reset{}{}.":"{}{}注意{}{}：调用函数{}{}shader_set(){}{} {4}之后{5}，调用{}{}shader_reset(){}{} {10}之前{11}，必须设置所有 uniform 。"
}