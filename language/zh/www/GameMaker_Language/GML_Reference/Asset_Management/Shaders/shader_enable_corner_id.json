{
    "Enable ({}true{}) or disable ({}false{}) this function.":"启用({}true{})或禁用({}false{})此函数。",
    "It sets a global state for all&nbsp;shaders being used where, when enabled, the shader \"steals\" 2 bits from the input colour values; one from the lowest bit of the red colour value, and one from the lowest bit of the blue colour value. These values can then be recovered in the shader to work out which vertex you are&nbsp;dealing with (i.e.&nbsp;which corner).":"它为所有正在使用的着色器设置一个全局状态，当启用时，着色器从输入颜色值中\"窃取\"2位;一个来自红色值的最低位，一个来自蓝色值的最低位。然后可以在着色器中恢复这些值，以确定您正在处理的顶点(即哪个角落)。",
    "The above code will enable the use of colour bits for the corner ID for all shaders.":"上面的代码将启用所有着色器的角点ID的颜色位。",
    "The above code will enable the use of colour bits for the corner id for all shaders.":"上面的代码将启用所有着色器的角点ID的颜色位。",
    "The following table lists the possible values and their corresponding corner position:&nbsp;":"下表列出了可能的值及其对应的角点位置：",
    "The lowest bit of the {}blue{} component stores the {}most significant bit{}, the lowest bit of the {}red{}&nbsp;component stores the {}least significant bit{}. You can calculate the corner ID in a vertex shader by doing this:":"{}蓝色{}分量的最低位存储{}最高有效位{}，{}红色{}分量的最低位存储{}最低有效位{}。您可以通过执行以下操作来计算顶点着色器中的角ID：",
    "This function enables the use of corner IDs in shaders.":"此函数允许在着色器中使用角ID。",
    "With this function you can set a global state for all shaders being used where, when enabled, the shader \"steals\" 2 bits from the input colour values. The first is from the lower bit of the red colour value, and the second is from the lower bit of the blue colour value. These values can get then be recovered in the shader to work out which vertex you are&nbsp;dealing with (ie: which corner).":"使用此功能，您可以为所有正在使用的着色器设置全局状态，当启用该着色器时，着色器将从输入颜色值\"窃取\"2位。第一个来自红色值的低位，第二个来自蓝色值的低位。然后可以在着色器中恢复这些值，以确定您正在处理的是哪个顶点(即：哪个角)。",
    "With this function you can set a global state for all shaders being used where, when enabled, the shader \"steals\" 2 bits from the input colour values. The first is from the lower bit of the red colour value, and the second is from the lower bit of the blue colour value. These values can then be recovered in the shader to work out which vertex you are&nbsp;dealing with (ie: which corner).":"使用此功能，您可以为所有正在使用的着色器设置全局状态，当启用该着色器时，着色器将从输入颜色值\"窃取\"2位。第一个来自红色值的低位，第二个来自蓝色值的低位。然后可以在着色器中恢复这些值，以确定您正在处理的是哪个顶点(即：哪个角)。",
    "{}{}NOTE{}{}&nbsp;The corner IDs are numbered consecutively going clockwise, starting at 0 for the top-left corner.":"{}{}注意{}{} 角 ID 按顺时针方向连续编号，左上角从 0 开始编号。"
}