{
    "The above code will create a new layer with a depth of -1000 and then set the instance {}layer{} variable to the returned layer ID, moving the instance from the layer it is currently on to the new layer being created.":"上面的代码将创建一个深度为- 1000的新层，然后将实例{}层{}变量设置为返回的层ID，将实例从其当前所在的层移动到正在创建的新层。",
    "This {}built-in variable{} is created for every instance in a room and contains the layer ID value of the layer that the instance is assigned to. This value can then be used in other functions like {}{}layer_get_depth(){}{}&nbsp;or it can be changed to move the instance to another layer, but note that if the layer being assigned does not exist in the current room, then you will get an error that will force your game to close. When assigning a layer, you must supply the unique {}layer ID{} as returned by the function {}{}layer_get_id(){}{}&nbsp;(when using named room layers), or as returned by the function {}{}layer_create(){}{}&nbsp;(when you create your own layers at run time).":"此 {} 内置变量 {} 是为房间中的每个实例创建的，包含实例分配到的图层的图层 ID 值。然后可以在其他函数中使用该值，例如 {}{}layer_get_depth(){}{}，或者可以更改它以将实例移动到另一层，但请注意，如果当前房间中不存在所分配的层，那么你会收到一个错误，迫使你的游戏关闭。分配图层时，您必须提供由函数 {}{}layer_get_id(){}{} 返回的唯一 {6} 图层 ID{7}( 使用命名房间图层时)，或由函数 {}{}  layer_create(){}{} 返回 ( 当您在运行时创建自己的层时)。",
    "{}IMPORTANT{}&nbsp;If you have created the instance using the {}{}{}instance_create_depth(){}{}{} function, or have manually changed the {}{}{}depth{}{}{} variable, the layer assigned to the instance becomes a \"managed\" layer, which is one that {}GameMaker{} controls and manages automatically. In these cases the {}layer{} variable will return -1.":"{} 重要提示{} 如果您使用 {}{}{}instance_create_depth(){}{}{} 函数创建了实例，或者手动更改了 {}{}{} depth {}{}{} 变量，分配给实例的层成为 \" 托管 \" 层，这是由 {}GameMaker{} 自动控制和管理的层。在这些情况下，{}layer{} 变量将返回 -1。"
}