{
    "In {}GameMaker{} the lower the depth value for an instance, the \"closer to the camera\" that instance will be drawn, while a higher depth value means that the instance will be drawn \"further away from the camera\", i.e: -1000 is drawn on top of -100, which is drawn on top of 0, and so on.":"在{}GameMaker{}中，实例的深度值越低，将绘制该实例的\"更靠近相机\"，而深度值越高，则表示实例将被绘制为\"远离相机\"，即：- 1000 绘制在 - 100 的顶部，这在 0 的顶部，依此类推。",
    "Keep in mind that modifying the depth of an instance may change which {}Filters &amp; Effects{} are applied on it, as changing the depth to be&nbsp;lower than an&nbsp;FX layer\u0027s depth will no longer apply its effect on the instance.":"请记住，修改实例的深度可能会更改哪些{}过滤器&效果{}应用于该实例，因为将深度更改为低于FX层的深度将不再对实例应用其效果。",
    "The above code will check to see if the y position has changed and if it has then the depth will also be set to correspond to it.":"上面的代码将检查Y位置是否已更改，如果已更改，则深度也将设置为与其对应。",
    "When you create an object you can assign it an initial {}depth{} which defines how the instances of that object will be drawn in the room when the game is being played and this variable can be used to get and to change that depth value while the game is running. You would normally not need to use this variable as you should be setting instances to be added to discreet {}layers{}, which in turn are set to a specific depth, but it may be that you want to change the depth of an instance using this value, in which case a \"temporary layer\" will be created specifically for the instance at the given depth. Note that when no instances are on the same depth then this temporary layer will be removed from memory (unlike regular layers which will remain even if they have nothing on them).":"当你创建一个对象时，你可以为其分配一个初始{}depth{}，它定义了在玩游戏时在房间里如何绘制该物体的实例，这个变量可用于在游戏运行时获取和更改该深度值。通常情况下，您无需使用此变量，因为您应该将实例设置为隐蔽的{}层{}，然后将其设置为特定的深度，但您可能想使用此值更改实例的深度，在这种情况下，将在给定深度下专门为实例创建 \"临时层\"。请注意，当没有一个实例处于相同深度时，这个临时层将从内存中移除(与普通图层不同，即使它们上面没有任何东西也会保留)。",
    "{}IMPORTANT!{} When you modify the {}depth{} variable and {}GameMaker{} manages the layers, the built in {}{}{}layer{}{}{} variable will return -1 and not the layer ID, since managed layers cannot be manipulated through code.":"{}IMPORTANT！{}修改{}深度{}变量并且{}GameMaker{}管理层时，内置的{}{}{}层{}{}{}变量将返回-1，而不是层 ID，因为托管层无法通过代码操作。",
    "{}Note that instances of an object that have the {}same{} depth can be drawn {}above {}or{} below each other{} even when they appear to be placed one on top of the other in the room editor. If you want to guarantee that something is drawn over or under everything else, you should always set the depth (or layer) explicitly. Also note that there is a minimum (-16000) and maximum (+16000)&nbsp;depth value outside of which instances will not be drawn, although they will still exist and process events.":"{}请注意，具有相同{}深度{}的对象的实例可以绘制在{}上方{}或{}下方{}，即使它们似乎在房间编辑器中一个放在另一个之上。如果你想保证某物被画在其他事物之上或之下，你应该总是明确地设置深度(或层)。还要注意，存在最小(-16000)和最大(+16000)深度值，虽然它们仍然存在并处理事件，但是不会在它们之外绘制实例。",
    "{}Note that instances of an object that have the {}same{} depth can be drawn {}above {}or{} below each other{} even when they appear to be placed one on top of the other in {}The Room Editor{}. If you want to guarantee that something is drawn over or under everything else, you should always set the depth (or layer) explicitly. Also note that there is a minimum ({}-16000{}) and maximum ({}16000{})&nbsp;depth value outside of which instances will not be drawn, although they will still exist and process events.":"{} 请注意，具有 {} 相同 {} 深度的对象实例可以绘制在彼此的 {} 上方 {} 或 {} 下方 {}，即使它们在 {} 房间编辑器 {}。如果您想保证某些内容绘制在其他所有内容之上或之下，则应始终显式设置深度 (或图层)。另请注意，存在最小 ({}-16000{}) 和最大 ({}16000{}) 深度值，超出该深度值将不会绘制实例，但它们仍然存在并处理事件。",
    "{}{}IMPORTANT{}{}&nbsp;The minimum and maximum depth values are approximate. As a result, when you set the draw depth to a value close to these limits, what you\u0027re drawing might not be drawn.":"{}{} 重要提示{}{} 最小和最大深度值是近似值。因此，当您将绘制深度设置为接近这些限制的值时，您正在绘制的内容可能不会被绘制。",
    "{}{}IMPORTANT{}{}&nbsp;When you modify the&nbsp;{}{}depth{}{} {}{} {}{}variable and {}GameMaker{} manages the layers, the built in {}{}{}{}layer{}{}{}{} variable will return -1 and not the layer ID, since managed layers cannot be manipulated through code. ":"{}{} 重要事项{}{} 当您修改 {}{}depth{}{}{}{}{}{} 变量并且 {}GameMaker{} 管理图层时，内置 {}{}{}{}layer{}{}{}{} 变量将返回 -1 而不是图层 ID，因为无法通过代码操作托管图层。",
    "{}{}NOTE{} {}You {}cannot{} set the depth of an instance in its Draw event (all other events are fine).":"{}{}注意{}{}您{}不能{}在实例的绘制事件中设置实例的深度(所有其他事件都可以)。",
    "{}{}NOTE{}{}&nbsp;Depth values are approximate. If you try to draw things at depth values close to the maximum depth&nbsp;and minimum depth, they may not be drawn due to inaccuracies introduced by the calculations.":"{}{} 注意{}{} 深度值是近似值。如果您尝试以接近最大深度和最小深度的深度值绘制事物，则可能会由于计算引入的不准确性而无法绘制它们。",
    "{}{}NOTE{}{}&nbsp;You {}cannot{} set the depth of an instance in its Draw event (all other events are fine). You can, however, set the depth at which to draw things in the Draw event using&nbsp;{}{}gpu_set_depth{}{}.":"{}{} 注意{}{} 您 {} 无法 {} 在 Draw 事件中设置实例的深度 (所有其他事件都可以)。不过，您可以使用 {}{}gpu_set_depth{}{} 设置在 Draw 事件中绘制事物的深度。",
    "{}{}Real{}{} (single precision floating point value)":"{}{} Real {}{}( 单精度浮点值)"
}