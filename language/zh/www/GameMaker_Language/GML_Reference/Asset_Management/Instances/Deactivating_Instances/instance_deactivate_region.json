{
    "The above code activates all instances and then deactivates a region within the room.":"上面的代码激活所有实例，然后取消激活房间内的一个区域。",
    "The height of the region to deactivate.":"要停用的区域的高度。",
    "The width of the region to deactivate.":"要停用的区域的宽度。",
    "The x coordinate of the left of the rectangular region to deactivate.":"要停用的矩形区域左侧的X坐标。",
    "The y coordinate of the top of the rectangular region to deactivate.":"要取消激活的矩形区域顶部的Y坐标。",
    "Whether to deactivate instances on the inside of the region (true) or the outside (false).":"停用区域内部(true)或外部(false)的实例。",
    "Whether to exclude the calling instance from deactivation (true) or not (false).":"是否从停用(true)或不(false)中排除调用实例。",
    "With this function you can define a region within the room to deactivate instances that have previously been activated. This region can either be flagged as \"inside\" or \"outside\" as demonstrated in the following image:":"使用此函数，可以在房间中定义区域以停用先前已激活的实例。该区域可标记为\"内部\"或\"外部\"，如下图所示：",
    "{}NOTE{}: If you deactivate an instance on room start (ie:from the room creation code, or from an instance create event of an instance within the room) all instances that are placed within the room from the room editor {}will still run their create event{} before being deactivated.":"{}注意{}:如果在房间开始时停用某个实例(即从房间创建代码或从房间内某个实例的实例创建事件)，则从房间编辑器{}放置在房间内的所有实例在停用之前仍将运行其创建事件{}。",
    "{}WARNING{}: Deactivating instances that have physics enabled will {}NOT{} stop their fixtures from interacting within the physics simulation. For that you should set their {}{}{}phy_active{}{}{}&nbsp;variable to {}true{} or {}false{} as you activate/deactivate the instances.":"{}警告{}：取消激活已启用物理的实例将{}不会{}停止它们的设备在物理模拟中相互作用。为此，在激活/取消激活实例时，应将其{}{}{}phy_active{}{}{}变量设置为{}true{}或{}false{}。",
    "{}You can see in the image above that the \"apple\" instance is always inactive because, even if the sprite itself doesn\u0027t overlap the region, the bounding box does. So, instances are considered to be within the region specified when their {}bounding box{} overlaps with it, and the state of the collision mask (precise or not) is {}not{} taken into consideration. Note that deactivation is not instantaneous, and an instance that has been deactivated in this way will not be considered to be inactive until the end of the event in which the function was called.":"{}您可以在上图中看到，\"Apple\"实例始终处于非活动状态，因为即使sprite本身不与区域重叠，边界框也会重叠。因此，当实例的{}边界框{}与其重叠时，它们被认为在指定的区域内，并且未考虑碰撞掩码的状态(精确与否){}。请注意，取消激活不是即时的，在调用函数的事件结束之前，以这种方式取消激活的实例不会被视为非活动状态。"
}