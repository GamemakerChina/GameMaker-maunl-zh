{
    "The above code loops through all the points in the path indexed as \"path0\" and re-positions all the points to a random position within an area of 128x128&nbsp;pixels.":"上述代码循环通过索引为\"路径0\"的路径中的所有点，并将所有点重新定位到128x128像素区域内的随机位置。",
    "The defining point to change the attributes of.":"要更改属性的定义点。",
    "The index of the path to change a point of.":"要更改点的路径的索引。",
    "The new speed factor of the point.":"点的新速度因子。",
    "The new x coordinate (relative to the path) of the point.":"点的新X坐标(相对于路径)。",
    "The new y coordinate (relative to the path) of the point.":"点的新Y坐标(相对于路径)。",
    "With this function you can change the position and/or the speed factor of any point previously defined for a path (the path can have been created in the path editor or through code using {}{}path_add(){}{}). If used on a path from the Asset Browser, note that {}the function will change&nbsp;the actual asset{}, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like {}{}path_duplicate(){}{} to create a copy of the path first, then call this function on the duplicated asset (don\u0027t forget to call {}{}path_delete(){}{} on the asset when it is no longer required).":"使用此函数，可以更改先前为路径定义的任何点的位置和/或速度系数(路径可以在路径编辑器中创建或通过使用{}{}path_add(){}{}的代码创建)。 如果在资源浏览器的路径上使用，请注意，{}该函数将更改实际资源{}，因此将永久影响从函数被使用到游戏结束的所有实例使用路径的方式。如果这不是您需要的，那么您应该使用像{}{}path_duplicate(){}{}这样的函数来首先创建路径的副本，然后在复制的资源上调用该函数(不要忘记在不再需要资源时调用{}{}path_delete(){}{})。"
}