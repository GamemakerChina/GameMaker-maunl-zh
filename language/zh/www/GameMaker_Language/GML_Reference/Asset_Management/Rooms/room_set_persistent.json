{
    "The index of the room to set the persistence of.":"要设置持久性的房间的索引。",
    "This will create a new room and store its index in the variable \"global.myroom\". It will then set its width to 640 pixels, its height to 480 pixels, its caption to \u0027Game Room\u0027 and its persistence to \u0027true\u0027.":"这将创建一个新房间并将其索引存储在变量\"global.myroom\"中。然后，它将宽度设置为640像素，高度设置为480像素，标题设置为\"游戏室\"，持久性设置为\"真\"。",
    "Whether the room should be persistent ({}true{}) or not ({}false{}).":"房间是否应该持久({}true{})或不({}false{})。",
    "With this function you can change (or set) the persistence of any room in your game {}except the current one{}. A room with persistence flagged as {}true{} it will maintain the state of all instances within that room if the player leaves and then returns, whereas if persistence is flagged as {}false{} it will be reset to the initial state every time. You should note that a persistent room uses considerably more memory than a normal room and it is not recommended to have too many of them in your game.":"使用此函数，您可以更改(或设置)游戏中任何房间{}的持久性，当前空间{}除外。 持久性标记为{}true{}的房间，如果玩家离开然后返回，它将保持该房间内所有实例的状态，而如果持久性标记为{}false{}，则每次将重置为初始状态。您应该注意，一个持久的房间比一个普通房间占用的内存要多得多，建议不要在游戏中拥有太多的内存。",
    "{}NOTE{}: This function will {}NOT{} work to switch off persistence if the room has already been visited! A persistent room, once visited, is held in memory and to switch off persistence you should go to that room and set the {}{}{}room_persistent{}{}{} variable to {}false{} and then exit the room again.":"{}注意{}：如果已访问该房间，此函数将{}无法{}关闭持久性！访问持久性房间后，将保留在内存中，要关闭持久性，应转到该房间并将{}{}{}room_persistent{}{}{}变量设置为{}false{}，然后再次退出该房间。"
}