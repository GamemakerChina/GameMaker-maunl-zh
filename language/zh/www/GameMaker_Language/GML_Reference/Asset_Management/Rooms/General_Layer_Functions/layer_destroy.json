{
    "The above code will check to see if any instances of the object \"obj_Bullet_Parent\" exists, and if they don\u0027t it will destroy the layer with the ID stored in the global variable.":"上面的代码将检查是否存在对象\" obj_bullet_parent \"的任何实例，如果不存在，则将使用存储在全局变量中的ID破坏层。",
    "The unique ID value of the layer to destroy (or the layer name as a string)":"要销毁的层的唯一ID值(或字符串形式的层名)",
    "This function will destroy the given layer. You supply the layer ID (which you get when you create the layer using {}{}layer_create(){}{}) or the layer name (as a string - this will have a performance impact) and this will remove it from the current room. If the layer is one that has been designed in the room editor, then the next time you leave the room and then return, the layer will be recreated again with the original contents, however if the room is persistent, the layer will be removed unless room persistence is switched off again. When you destroy a layer in this way, all it\u0027s contents will be removed too, so any reference IDs for backgrounds or tile maps, etc... will no longer be valid and any instances assigned to the layer will be destroyed (performing their {}Destroy Event{} at the same time, if they have one, as well as the {}Clean Up Event{}).":"此函数将破坏给定层。提供层 ID(使用{}{}layer_create(){}{}创建层时获得的 ID)或层名称(作为字符串，这将对性能产生影响)，这将将其从当前房间中删除。如果层是在房间编辑器中设计的，那么下次离开房间然后返回时，层将用原始内容重新创建，但是如果房间是持久的，层将被移除，除非再次关闭房间持久性。以这种方式销毁图层时，也会删除其所有内容，因此背景或平铺贴图等的任何引用 ID... 将不再有效，并且将销毁分配给该层的任何实例(同时执行其{}销毁事件{}，如果它们有一个，以及{}清除事件{})。"
}