{
    "The above code gets the ID value of the background assigned to the layer \"Background_sky\" and then tints it to a colour.":"上述代码获取分配给层\"Background_sky\"的背景的ID值，然后将其着色为颜色。",
    "The colour to blend with the background sprite (default is {}c_white{})":"与背景精灵混合的颜色(默认值为{}c_white{})",
    "The unique ID value of the background element to change":"要更改的背景元素的唯一ID值",
    "This function controls the blending (or \"tinting\") of the background sprite and the default value is -1 (which represents the constant {}c_white{}, which can also be used). Any other value (including internal colour constants like {}c_red{}, or {}c_aqua{}) will blend the specified colour with the original sprite. You give the background element ID (which you get when you create a background element using {}{}layer_background_create(){}{} or when you use the function {}{}layer_background_get_id(){}{}), and then set the blending colour to use. Below you can see an example of a sprite that has been blended with different colours:":"此函数控制背景精灵的混合(或\"着色\")，默认值为-1(代表常数{}c_white{}，也可以使用)。任何其他值(包括内部颜色常量，如{}c_red{})，或{}c_aqua{})将指定颜色与原始精灵混合。指定背景元素 ID(使用{}{}layer_background_create(){}{}创建背景元素时或使用函数{}{}layer_background_get_id(){}{}时获得)，然后设置要使用的混合颜色。下面，您可以看到与不同颜色混合的精灵的示例：",
    "{}Please note that you should try to limit blending on the {}HTML5{} platform (unless using WebGL), as each blended sprite has to be cached separately and so having many blended sprites may adversely affect performance (you can also set the cache size using the function {}{}sprite_set_cache_size(){}{}).":"{}请注意，您应该尝试在{}HTML5{}平台上限制混合(除非使用WebGL)，因为每个混合的精灵必须单独缓存，因此拥有多个混合sprite可能会对性能产生不利影响(您也可以使用函数{}{}sprite_set_cache_size(){}{}设置高速缓存大小)。"
}