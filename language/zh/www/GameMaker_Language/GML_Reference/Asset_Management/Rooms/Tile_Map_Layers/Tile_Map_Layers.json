{
    "A \"blob\" of tile data is stored as a 32 bit value. It is made up of&nbsp;{}19{}&nbsp;bits that store the tile index in the tile set (bits 0 to 18) plus a few extra bits to indicate how the tile data should be drawn:&nbsp;bit 28 stores the mirror bit, bit 29 stores the flip bit, bit 30 stores the rotate bit and bit 31 is unused. Bits 19 to 27 are also unused. You can also use these unused bits to store your own data.":"瓦片数据的 \"blob\" 存储为 32 位值。它由 {}19{} 位组成，用于存储图块集中的图块索引 (位 0 到 18)，加上一些额外的位来指示应如何绘制图块数据：位 28 存储镜像位，位 29 位存储翻转位，位 30 存储旋转位，位 31 未使用。位 19 至 27 也未使用。您还可以使用这些未使用的位来存储您自己的数据。",
    "A special constant that is for \"and\"-ing with the tile data blob to extract the&nbsp;{}19{}&nbsp;bits of the tile index.":"一个特殊常量，用于与图块数据 blob 进行 \" 与 \" 运算以提取图块索引的 {}19{} 位。",
    "A tile map is a collection of tile set tiles that are all considered to be at the same depth within the room.":"图块地图是图块集图块的集合，这些图块都被认为位于房间内的相同深度。",
    "Apart from the functions listed above to set tile maps, you also have a number of functions that can be used to manipulate the data of individual tiles. A \"blob\" of tile data is made up of the tile index plus a few extra bits to show whether the tile has been rotated, flipped or mirrored. You also have the possibility of adding your own bit-mask to the tile data, although this is for advanced users only as you will be masking off bits that are reserved for the tile index - essentially there are 19 bits reserved for your tile indices, but if you only use 8 of them, then you have eleven bits left over that can be used to create a custom mask. This mask can then be used and checked in code to create custom tile collisions or whatever. However, you would normally not need to create your own tile data blobs, and would instead use the function&nbsp;{}{}tilemap_get(){}{}&nbsp;to get the tile data, then you would manipulate it using the functions below, and then you would set it again using&nbsp;{}{}tilemap_set(){}{}.":"除了上面列出的用于设置图块图的函数外，您还有许多可用于操作单个图块图的数据的函数。图块数据的\"斑点\"由图块索引加上一些额外的位组成，以显示图块是否已经旋转、翻转或镜像。您还可以将自己的位掩码添加到图块数据中，虽然这仅适用于高级用户，因为您将屏蔽为图块索引保留的位实际上有 19 位保留给图块索引，但如果仅使用其中的 8 位，则剩余 11 位可用于创建自定义掩码。然后可以使用此掩码并检入代码来创建自定义图块冲突等。然而，您通常不需要创建自己的图块数据块，而是使用函数{}{}tilemap_get(){}{}来获取图块数据，然后使用下面的函数操作该图块数据，然后使用{}{}tilemap_set(){}{}再次设置。",
    "Below is a list of all the functions that can be used for editing individual {}tiles{}:":"以下是可用于编辑单个{}图块{}的所有函数的列表：",
    "Below is a list of all the functions that can be used for editing {}tile map layers{}:":"以下是可用于编辑{}tile map layers{}的所有函数列表：",
    "Calculating the Mask Bits":"计算掩码位",
    "Each tile map has its own unique element ID and properties.":"每个图块地图都有自己唯一的元素 ID 和属性。",
    "Editing Individual Tiles":"编辑单个图块",
    "Editing&nbsp;{}Tile Map Elements{}":"编辑 {} 平铺地图元素 {}",
    "For more convenient access to certain bits you can use the values of the tile mask constant:&nbsp;":"为了更方便地访问某些位，您可以使用平铺掩码常量的值：",
    "Function Reference":"功能参考",
    "However, you would normally not need to create your own tile data blobs, and would instead use the function&nbsp;{}{}tilemap_get{}{} to get the tile data, then you would manipulate it using the functions for {}Editing Individual Tiles{}, and then you would set it again using {}{}tilemap_set{}{}.":"不过，您通常不需要创建自己的图块数据 blob，而是使用函数 {}{}tilemap_get{}{} 获取图块数据，然后使用用于 {} 编辑单个图块{}的函数来操作它 ，然后您可以使用 {}{}tilemap_set{}{} 再次设置它。",
    "It can be visualised as a grid where each cell stores some tile data: the index of the tile that should be drawn at that cell, along with how it should be drawn (rotated, flipped and/or mirrored).":"它可以可视化为一个网格，其中每个单元格存储一些图块数据：应在该单元格绘制的图块的索引，以及应如何绘制它 (旋转、翻转和 / 或镜像)。",
    "The bit mask is \"and\"-ed {}&amp;{} against the tile data when the tile map is {}drawn{} (so it doesn\u0027t affect any of the other functionality), meaning that bits which aren\u0027t in the mask are ignored, but can still be read and written to by the user for their own purposes.":"当 {} 绘制{} 图块地图时，位掩码是针对图块数据的 \"and\"-ed{0}&amp;{1}\n\n(因此它不会影响任何其他功能)，这意味着不在掩码中的位将被忽略，但用户仍然可以出于自己的目的读取和写入。",
    "The {}GameMaker{} {}Room Editor{} permits you to add tiles into any given room using {}layers{}. As the name implies, a tile map layer is simply a collection of tile set tiles that are all considered to be at the same depth within the room, and by stacking layers you can make some things draw over or under others. You can also control certain aspects of layers from code, adding or removing things, or changing certain properties of the layer or what it contains at run time. Note that in the room editor you are limited to one tile map per layer (the {}{}Tile Layer{}{}), but when working with them in code, you can have multiple tile maps assigned to a single layer, with each map having its own unique ID and properties, so:":"{}GameMaker{} {}房间编辑器{}允许您使用{}层{}向任何给定房间添加图块。 顾名思义，图块贴图层只是图块集图块的集合，它们都被认为在房间内的同一深度，通过堆叠层，你可以使一些东西在其他东西上或下面画。您还可以从代码、添加或删除对象、或更改层的某些属性或运行时包含的内容中控制层的某些方面。请注意，在房间编辑器中，每个层({}{}图块层{}{})限制为一个图块贴图，但是在代码中使用它们时，可以将多个图块贴图指定给单个层，每个贴图都有自己的唯一 ID 和属性，因此：",
    "The {}tile layer{} is what you create in the Room Editor to add tile sets to":"{}tile layer{}是您在\"房间编辑器\"中创建的，用于将图块集添加到",
    "The {}tile layer{} is what you create in&nbsp;{}The Room Editor{} to add tile sets to. Note that layers are only of a certain type in the Room Editor, not in code.":"{} 图块层 {} 是您在 {} 房间编辑器 {} 中创建的用于添加图块集的层。请注意，图层仅在房间编辑器中属于某种类型，在代码中则不然。",
    "The {}tile map{} is what you call the collection of tiles that are added to a layer, either in the Room Editor or through code, as a single element on that layer.":"{} 图块地图 {} 是您所说的图块集合，这些图块可以在房间编辑器中或通过代码添加到层中，作为该层上的单个元素。",
    "The {}tile map{} is what you call the collection of tiles that are added to a layer, either in the room editor or through code, as a single element on that layer":"{}tile map{}是您称为添加到层的图块集合，无论是在房间编辑器中还是通过代码，作为该层上的单个元素",
    "The {}tile set{} is the asset that you use to create tile layers and tile maps.":"{} 图块集 {} 是用于创建图块图层和图块地图的资源。",
    "The {}tile set{} is the resource that you use to create tile layers and tile maps":"{}tile set{}是用于创建图块图层和图块贴图的资源",
    "Tile Data \"Blob\"":"平铺数据 \"Blob\"",
    "Tile Map Bit Mask":"平铺地图位掩码",
    "Tile Map Layers":"贴图层",
    "To get an initial index mask value you take the number of tiles in the tile set and subtract 1, so a 16x16 tile set has 256 tiles and a mask value of 255 (or $ff in hexadecimal). If the tile set has a number of tiles that\u0027s not a power of two, then round up to the nearest power of two to get the mask, for example a tile set that is 20x20 has 400 tiles, which you would round up to 512, and so get a mask index value of 511 ($1ff in hexadecimal). Apart from the index mask, normally you would want to preserve the flip, rotate and mirror values that are assigned to a tile too, to help with that there are the constants under&nbsp;{}Tile Mask Constant{} that can be used. These can be bitwise \"or\"-ed {}|{} together with the index mask value to preserve those bits of data.":"要获得初始索引掩码值，您需要获取图块集中的图块数量并减去 1，因此 16x16 图块集有 256 个图块，掩码值为 255( 或十六进制的 $ff)。如果图块集的图块数量不是 2 的幂，则向上舍入到最接近的 2 的幂以获得掩码，例如 20x20 的图块集有 400 个图块，您可以将其向上舍入到 512，因此得到掩码索引值 511( 十六进制 $1ff)。除了索引掩码之外，通常您还希望保留分配给图块的翻转、旋转和镜像值，为了帮助实现这一点，可以使用 {}Tile Mask Constant{} 下的常量。这些可以与索引掩码值一起按位 \" 或 \" 组合 {}|{} 以保留这些数据位。",
    "Used to set/get the flip bit of a tile data blob.":"用于设置 / 获取图块数据 blob 的翻转位。",
    "Used to set/get the mirror bit of a tile data blob.":"用于设置 / 获取切片数据 blob 的镜像位。",
    "Used to set/get the rotate bit of a tile data blob.":"用于设置 / 获取切片数据 blob 的旋转位。",
    "When working with tiles, you use a few things that are related to one another as follows:&nbsp;":"使用图块时，您会使用一些彼此相关的东西，如下所示：",
    "You can get tile data at a specific map cell using&nbsp;{}{}tilemap_get{}{}&nbsp;or&nbsp;{}{}tilemap_get_at_pixel{}{}&nbsp;and set it using&nbsp;{}{}tilemap_set{}{}&nbsp;or&nbsp;{}{}tilemap_set_at_pixel{}{}.":"您可以使用 {}{}tilemap_get{}{} 或 {}{}tilemap_get_at_pixel{}{} 获取特定地图单元格的图块数据，并使用 {}{}tilemap_set{}{} 或 {}{}tilemap_set_at_pixel{}{}设置数据。",
    "You have the possibility of adding your own bit mask to a tile map in order to use bits of the tile data \"blob\" for your own use, although this is for advanced users only as you will be masking off bits that are reserved for the tile index. There are&nbsp;{}19{} bits reserved for your tile indices, but if you only use 8 of them, then you have eleven bits left over that can be used to create a custom mask. This mask can then be used and checked in code to create custom tile collisions or whatever.":"您可以将自己的位掩码添加到图块地图中，以便将图块数据 \"blob\" 的位供您自己使用，尽管这仅适用于高级用户，因为您将屏蔽为图块地图保留的位。瓷砖索引。为您的图块索引保留了 {}19{} 位，但如果您只使用其中的 8 个，那么您还剩下 11 位可用于创建自定义掩码。然后可以使用该遮罩并在代码中检查以创建自定义图块碰撞或其他内容。",
    "{}Tile Map Elements{}":"{} 平铺地图元素 {}",
    "{}{}NOTE{}{}&nbsp;Aside from a mask per tile map, there is also a {}global{} one. The two are bitwise \"and\"-ed {}&amp;{} together internally by {}GameMaker{} before being used for drawing.":"{}{} 注意{}{} 除了每个图块地图的遮罩之外，还有一个 {} 全局 {} 遮罩。在用于绘图之前，{}GameMaker{} 在内部将两者按位 \" 与 \"{}&amp;{} 组合在一起。",
    "{}{}NOTE{}{}&nbsp;In the Room Editor you are limited to a single tile map per layer,&nbsp;which is created when you add a {}Tile Layer{}, but when working with them in code, you can have multiple tile maps assigned to a layer.":"{}{} 注意{}{} 在房间编辑器中，每层只能使用一个图块地图，该地图是在您添加 {} 图块层 {} 时创建的，但在代码中使用它们时，您可以拥有多个分配给图层的平铺地图。",
    "{}{}NOTE{}{}&nbsp;See&nbsp;{}Bitwise Operators{}&nbsp;for more information on how to work with binary and bit masks.":"{}{} 注意{}{} 有关如何使用二进制和位掩码的详细信息，请参阅 {} 位运算符 {}。"
}