{
    "Apart from the functions listed above to set tile maps, you also have a number of functions that can be used to manipulate the data of individual tiles. A \"blob\" of tile data is made up of the tile index plus a few extra bits to show whether the tile has been rotated, flipped or mirrored. You also have the possibility of adding your own bit-mask to the tile data, although this is for advanced users only as you will be masking off bits that are reserved for the tile index - essentially there are 19 bits reserved for your tile indices, but if you only use 8 of them, then you have eleven bits left over that can be used to create a custom mask. This mask can then be used and checked in code to create custom tile collisions or whatever. However, you would normally not need to create your own tile data blobs, and would instead use the function&nbsp;{}{}tilemap_get(){}{}&nbsp;to get the tile data, then you would manipulate it using the functions below, and then you would set it again using&nbsp;{}{}tilemap_set(){}{}.":"除了上面列出的用于设置磁贴图的函数外，您还有许多可用于操作单个磁贴图的数据的函数。平铺数据的\"斑点\"由瓦片索引加上一些额外的位组成，以显示瓦片是否已经旋转、翻转或镜像。您还可以将自己的位掩码添加到平铺数据中，虽然这仅适用于高级用户，因为您将屏蔽为平铺索引保留的位实际上有 19 位保留给平铺索引，但如果仅使用其中的 8 位，则剩余 11 位可用于创建自定义掩码。然后可以使用此掩码并检入代码来创建自定义平铺冲突等。然而，您通常不需要创建自己的平铺数据块，而是使用函数{}{}tilemap_get(){}{}来获取平铺数据，然后使用下面的函数操作该平铺数据，然后使用{}{}tilemap_set(){}{}再次设置。",
    "Below is a list of all the functions that can be used for editing individual {}tiles{}:":"以下是可用于编辑单个{}平铺{}的所有函数的列表：",
    "Below is a list of all the functions that can be used for editing {}tile map layers{}:":"以下是可用于编辑{}tile map layers{}的所有函数列表：",
    "The {}GameMaker{} {}Room Editor{} permits you to add tiles into any given room using {}layers{}. As the name implies, a tile map layer is simply a collection of tile set tiles that are all considered to be at the same depth within the room, and by stacking layers you can make some things draw over or under others. You can also control certain aspects of layers from code, adding or removing things, or changing certain properties of the layer or what it contains at run time. Note that in the room editor you are limited to one tile map per layer (the {}{}Tile Layer{}{}), but when working with them in code, you can have multiple tile maps assigned to a single layer, with each map having its own unique ID and properties, so:":"{}GameMaker{}{}Room Editor{}允许您使用{}层{}向任何给定房间添加平铺。 顾名思义，平铺贴图层只是瓦片集瓦片的集合，它们都被认为在房间内的同一深度，通过堆叠层，你可以使一些东西在其他东西上或下面画。您还可以从代码、添加或删除对象、或更改层的某些属性或运行时包含的内容中控制层的某些方面。请注意，在房间编辑器中，每个层({}{}平铺层{}{})限制为一个平铺贴图，但是在代码中使用它们时，可以将多个瓦片贴图指定给单个层，每个贴图都有自己的唯一 ID 和属性，因此：",
    "The {}tile layer{} is what you create in the Room Editor to add tile sets to":"{}tile layer{}是您在\"房间编辑器\"中创建的，用于将平铺集添加到",
    "The {}tile map{} is what you call the collection of tiles that are added to a layer, either in the room editor or through code, as a single element on that layer":"{}tile map{}是您称为添加到层的平铺集合，无论是在房间编辑器中还是通过代码，作为该层上的单个元素",
    "The {}tile set{} is the resource that you use to create tile layers and tile maps":"{}tile set{}是用于创建平铺图层和平铺贴图的资源",
    "Tile Map Layers":"贴图层"
}