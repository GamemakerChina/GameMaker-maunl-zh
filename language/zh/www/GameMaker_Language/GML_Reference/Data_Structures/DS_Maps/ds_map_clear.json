{
    "The above function will check a global variable to see if it is true and, if it is, then the DS map&nbsp;indexed in the instance variable \"inventory\" will be cleared of all key/value pairs (but it is {}not{} destroyed).":"上述函数将检查全局变量以查看其是否为真，如果为真，则实例变量\"inventory\"中索引的Ds映射将清除所有密钥/值对(但它未{}销毁)。",
    "The id of the data structure to clear.":"要清除的数据结构的ID。",
    "This function will clear the (previously created) DS map&nbsp;of all key/value pairs, but it will not delete the DS map&nbsp;itself from memory. For that you should use the function {}{}ds_map_destroy(){}{}. Note that clearing a map will de-reference any data structures stored in the map giving a memory leak, so you would need to go through it and destroy all data structure items manually before clearing the map to prevent this. The only time this is not required is when you have flagged any items in the map as a {}DS list{} or as another {}DS map{}, in which case these items will be destroyed (not cleared!) and their memory cleaned up automatically when the parent map is cleared.":"此功能将清除(以前创建的)所有键/值对的D映射，但不会从内存中删除D映射本身。为此，您应该使用函数{}{}ds_map_destroy(){}{}。请注意，清除映射将取消引用映射中存储的任何数据结构，从而导致内存泄漏，因此您需要在清除映射之前通过该函数并手动销毁所有数据结构项，以防止出现这种情况。唯一不需要这样做的情况是，当您将映射中的任何项目标记为{}个D列表{}或另一个{}个D映射{}时，在这种情况下，这些项目将被销毁(未清除！)，并在清除父映射时自动清除其内存。"
}