{
    "Floats can also be used but the upper value after the point will be excluded, so {}irandom(9.7){} will return a value from 0 to 9 only. The function has an upper bound of $7fffffffffffffffLL, so care should be taken if using very large numbers.":"也可以使用浮点数，但点后的上限值将被排除，因此 {}irandom(9.7){} 将仅返回 0 到 9 之间的值。 该函数的上限为 $7ffffffffffffffffLL，因此在使用非常大的数字时应格外小心。",
    "The upper range from which the random number will be selected.":"将从中选择随机数的上范围。",
    "This function returns a random value as an integer (whole number). So, for example, to get a random number from 0 to 9 you can use {}irandom(9){} and it will return a number from 0 to 9 {}inclusive{}.":"这个函数以整数(integer 整数)的形式返回一个随机值。例如，要获得0到9的随机数，可以使用{}random(9){}，它将返回0到9的随机数{}包含{}。",
    "This will produce a one in ten (since 0 is included) chance of adding 100 to the score.":"这将产生1 / 10的机会(因为包含0)添加到分数100。",
    "{}{}NOTE{}{} This function will return the same value every time the game is run afresh due to the fact that {}GameMaker{} generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use {}{}{}randomise(){}{}{} at the start of your game.":"{}{}注意{}{} 由于 {}GameMaker{} 每次都会生成相同的初始随机种子以使调试代码更容易，因此每次重新运行游戏时此函数都会返回相同的值 任务。 为避免这种行为，请在游戏开始时使用 {}{}{}randomise(){}{}{}。",
    "{}{}NOTE{}{}&nbsp;This function will return the same value every time the game is run afresh due to the fact that {}GameMaker{} generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use {}{}randomise{}{}&nbsp;at the start of your game.":"{}{}注意{}{} 此函数将在每次重新运行游戏时返回相同的值，因为 {}GameMaker{} 每次都会生成相同的初始随机种子，从而使调试代码变得容易得多。要避免这种行为，请在游戏开始时使用 {}{}randomise{}{}。"
}