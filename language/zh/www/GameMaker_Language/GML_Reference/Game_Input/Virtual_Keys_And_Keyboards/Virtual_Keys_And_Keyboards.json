{
    "\"{}event_type{}\" - the type of system event received, which will be \"{}virtual keyboard status{}\" for virtual keyboards.":"“{}event_type{}”-接收到的系统事件的类型，对于虚拟键盘，该事件将为 “{}虚拟键盘状态{}”。",
    "\"{}keyboard_status{}\" - the current status of the keyboard, returned as one of the following strings: {} {}\"hiding\"{} {}\"hidden\"{} {}\"showing\"{} {}\"visible\"{} {} ":"\"{}keyboard_status{}\" -键盘的当前状态，作为以下字符串之一返回： {} {}\"hiding\"{} {}\"hidden\"{} {}\"showing\"{} {}\"visible\"{} {} ",
    "\"{}screen_height{}\" - the height of the virtual keyboard (in pixels). This will be 0 if the keyboard is invisible.":"\"{}screen_height{}\"-虚拟键盘的高度 (以像素为单位)。如果键盘是不可见的，这将是0。",
    "Create your own on-screen {}virtual keys{} to get input":"创建你自己的屏幕上{}虚拟密钥{}以获取输入",
    "If you require text or numeric input in your game on a touchscreen device, then you can use the {}virtual keyboard{} functions provided to use the device OS keyboard. These functions will call up or hide the OS keyboard and accept input from it, however it will {}not{} trigger the regular keyboard events, but rather update the {}{}keyboard_string{}{} variable with the user input (this is due to the fact that the virtual keyboard can input whole words and not just single characters).":"如果您需要在触摸屏设备上的游戏中输入文本或数字，则可以使用提供的{}虚拟键盘{}函数来使用设备操作系统键盘。这些函数将调用或隐藏操作系统键盘并接受来自它的输入，但是它将{}不{}触发常规键盘事件，而是使用用户输入更新{}{}keyboard_string{}{}变量(这是因为虚拟键盘可以输入整个单词，而不仅仅是单个字符)。",
    "In order for your games to work properly on mobile devices with a touch screen, you may need to be able to assign areas of the screen to respond to certain things when they are touched by the user. This is done by assigning a \"virtual Key\" to an internally mapped standard keyboard key and then using the keyboard events that they generate to control your application. It is worth noting that these \"virtual keys\" are mapped to the&nbsp;{}screen{}&nbsp;position rather than room position and so the x/y values are absolute, based on the display size. This means that you don\u0027t need to worry about the use of views or the relative room coordinates, and can simply define the keys in the Create Event of an object (you only need to define a virtual key once per-room), then draw your key sprites in the&nbsp;{}Draw GUI Event{}, sizing the GUI layer to be the same as the screen.":"为了让游戏在带有触摸屏的移动设备上正常运行，您可能需要分配屏幕区域，以便在用户触摸某些内容时做出响应。这是通过为内部映射的标准键盘按键分配 “虚拟按键”，然后使用它们生成的键盘事件来控制您的应用程序来完成的。值得注意的是，这些 “虚拟按键” 映射到{}屏幕{}位置而不是房间位置，因此 x/ y 值是基于显示屏大小的绝对值。这意味着您无需担心视图或相对房间坐标的使用，只需在对象的 Create Event 中定义按键(每个房间只需要定义一次虚拟密钥)，然后在{}Draw GUI 事件{}中绘制关键精灵，将 GUI 层调整为与屏幕相同。",
    "Opening or closing the virtual keyboard will generate&nbsp;{}System Asynchronous Events{}, in which the&nbsp;{}{}async_load{}{}&nbsp;DS map will be populated with the following key/value pairs:":"打开或关闭虚拟键盘将生成{}系统异步事件{}，其中{}{}async_load{}{}DS映射将填充以下键/值对：",
    "Pop up the OS {}virtual keyboard{} and get input from that":"弹出 OS{}虚拟键盘{}然后从中获取输入",
    "The available virtual key functions are:":"可用的虚拟按键函数有：",
    "The available virtual keyboard functions are:":"可用的虚拟键盘函数包括：",
    "Virtual Keys And Virtual Keyboards":"虚拟按键和虚拟键盘",
    "What you use will depend very much on the game and what you need, but in general you would use virtual keys when you want to have onscreen buttons for player control or for menus, while you\u0027d use the virtual keyboard when you need player input, like getting a name or setting a value.":"你使用什么在很大程度上取决于游戏和你需要什么，但总的来说，当你想让屏幕上的按钮用于玩家控制或菜单时，你会使用虚拟键盘，而当你需要玩家输入时，比如获取名字或设置值，你会使用虚拟键盘。",
    "{}{}NOTE{} {}These functions are only valid for the {}Android{} (including {}AndroidTV{}), and&nbsp;{}iOS {}(including {}tvOS{}) target platforms.":"{}{}注意{}{}这些函数仅对{}Android{}(包括{}AndroidTV{})和{}iOS{}(包括{}tvOS{})目标平台有效。",
    "{}{}NOTE{}&nbsp;{}These functions will not work on the Windows, Ubuntu (Linux), nor the MacOS, target platforms using a touch screen, although they will receive mouse clicks as \"touches\".":"{}{}注意{}{}这些函数在 Windows、Ubuntu (Linux) 或 macOS 上不起作用，它们使用触摸屏的目标平台尽管会以 “触摸” 的形式收到鼠标点击。",
    "{}{}NOTE{}{}&nbsp;These functions are supported in the HTML5 and GX.games targets.":"{}{}注意{}{}HTML5和GX.games目标支持这些函数。",
    "{}{}When developing games for touchscreen devices, it\u0027s often important to get keyboard input from the user. When using {}GameMaker{} this can be done in one of two ways:":"{}{}在为触摸屏设备开发游戏时，从用户那里获取键盘输入通常很重要。使用{}GameMaker{}时，可以通过以下两种方式之一完成:"
}