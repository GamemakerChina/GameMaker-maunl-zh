{
["space key"]={new="空格键";old="space key"};
["When dealing with the keyboard in {}GameMaker{} you have a variety of functions that can be used to recognise different keyboard states like pressed or released. There are also some that store all the key-presses as a string or that can tell you what the last key pressed was, as well as others that allow you to clear the keyboard state completely."]={old="When dealing with the keyboard in {}GameMaker{} you have a variety of functions that can be used to recognise different keyboard states like pressed or released. There are also some that store all the key-presses as a string or that can tell you what the last key pressed was, as well as others that allow you to clear the keyboard state completely.";new="在{}GameMaker{}中处理键盘时，您可以使用多种功能来识别不同的键盘状态，例如按下或释放。还有一些将所有按键存储为字符串，或者可以告诉您最后按下的按键是什么，以及其他允许您完全清除键盘状态的按键。"};
["pageup key"]={old="pageup key";new="pageup键"};
["keycode representing that any key is pressed"]={old="keycode representing that any key is pressed";new="表示按下任何键的键码"};
["subtract key on the numeric keypad"]={new="数字键盘上的减法键";old="subtract key on the numeric keypad"};
["keycode for the left arrow key"]={new="左箭头键的键码";old="keycode for the left arrow key"};
["delete key"]={old="delete key";new="delete键"};
["The following functions are available for use when working with a keyboard:"]={old="The following functions are available for use when working with a keyboard:";new="使用键盘时可以使用以下功能:"};
["escape key"]={old="escape key";new="escape键"};
["right shift key"]={new="右shift键";old="right shift key"};
["right control key"]={old="right control key";new="右控制键"};
["Finally, the following variables are built-in to {}GameMaker{} and can be accessed to get information about the keyboard state and input:"]={new="最后，{}GameMaker{}内置了以下变量，可以访问以获取有关键盘状态和输入的信息:";old="Finally, the following variables are built-in to {}GameMaker{} and can be accessed to get information about the keyboard state and input:"};
["pause/break key"]={old="pause/break key";new="pause/break 键"};
["{}{}NOTE{}{} These functions are designed for Windows/Mac/Ubuntu desktop platforms only. You may find some of the built-in variables and constants aren't valid on other platforms and many of the functions won't work on mobiles."]={new="{}{}注意{}{}这些功能仅适用于Windows/Mac/Ubuntu桌面平台。您可能会发现一些内置的变量和常量在其他平台上无效，并且许多功能在手机上不起作用。";old="{}{}NOTE{}{} These functions are designed for Windows/Mac/Ubuntu desktop platforms only. You may find some of the built-in variables and constants aren't valid on other platforms and many of the functions won't work on mobiles."};
["keycode representing that no key is pressed"]={new="表示未按下键的键码";old="keycode representing that no key is pressed"};
["add key on the numeric keypad"]={new="在数字键盘上加法键";old="add key on the numeric keypad"};
["backspace key"]={old="backspace key";new="退格键"};
["home key"]={old="home key";new="home键"};
["The following constants can only be used with {}keyboard_check_direct(){}:"]={new="以下常量只能与{}keyboard_check_direct(){}一起使用:";old="The following constants can only be used with {}keyboard_check_direct(){}:"};
["multiply key on the numeric keypad"]={old="multiply key on the numeric keypad";new="数字键盘上的乘法键"};
["left control key"]={new="左控制键";old="left control key"};
["tab key"]={new="tab键";old="tab key"};
["number keys on the numeric keypad"]={new="数字键盘上的数字键";old="number keys on the numeric keypad"};
["either of the shift keys"]={new="任意shift键";old="either of the shift keys"};
["insert key"]={new="insert键";old="insert key"};
["enter key"]={new="enter键";old="enter key"};
["{}NOTE{}: These functions will {}not{} work when using an on-screen {}Virtual Keyboard{}."]={new="{}注意{}: 使用屏幕上的{}{}{}虚拟键盘{}时，这些功能不会起作用。";old="{}NOTE{}: These functions will {}not{} work when using an on-screen {}Virtual Keyboard{}."};
["pagedown key"]={new="pagedown键";old="pagedown key"};
["left alt key"]={old="left alt key";new="左alt键"};
["If you need to check for a key character that is not 0 - 9, A - Z or one of the VK constants, then you should be checking one of the {}keyboard_*{} variables, like {}keyboard_lastchar{} for example:"]={new="如果您需要检查不是0- 9，a-Z或VK常量之一的关键字符，那么您应该检查{}keyboard_*{}变量之一，例如{}keyboard_lastchar{}例如:";old="If you need to check for a key character that is not 0 - 9, A - Z or one of the VK constants, then you should be checking one of the {}keyboard_*{} variables, like {}keyboard_lastchar{} for example:"};
["Virtual Key Constant (vk_*)"]={new="虚拟键常数（vk_*）";old="Virtual Key Constant (vk_*)"};
["printscreen/sysrq key"]={new="printscreen/sysrq 键";old="printscreen/sysrq key"};
["keycode for the right arrow key"]={old="keycode for the right arrow key";new="右箭头键的键码"};
["keycode for the down arrow key"]={old="keycode for the down arrow key";new="向下箭头键的键码"};
["right alt key"]={new="右alt键";old="right alt key"};
["end key"]={new="end键";old="end key"};
["Keyboard Input"]={new="键盘输入";old="Keyboard Input"};
["either of the control keys"]={old="either of the control keys";new="任意控制键"};
["left shift key"]={old="left shift key";new="左shift键"};
["alt key"]={new="alt键";old="alt key"};
["There are also some functions that can be used to simulate keypresses:"]={old="There are also some functions that can be used to simulate keypresses:";new="还有一些功能可以用来模拟按键:"};
["divide key on the numeric keypad"]={new="数字键盘上的除法键";old="divide key on the numeric keypad"};
['So, the above will check the "A" key and if it\'s being pressed then it\'ll set the horizontal speed of the object to -5. Note, that using {}ord(){} in this way will only function correctly if the input string is only one character in length and is a number from 0 to 9 or a {}capitalised{} Roman character from A to Z. The function {}ord(){} will return a full UTF8 value, but the {}keyboard_check*(){} functions will {}only detect A - Z and 0 - 9{}. But what if you want to use the arrow keys? Or if you want to modify an action using the "shift" key? Well, for that {}GameMaker{} has a series of {}vk_{} constants ({}vk_{} stands for {}virtual key{}) that you can use in place of {}ord(){}:']={old='So, the above will check the "A" key and if it\'s being pressed then it\'ll set the horizontal speed of the object to -5. Note, that using {}ord(){} in this way will only function correctly if the input string is only one character in length and is a number from 0 to 9 or a {}capitalised{} Roman character from A to Z. The function {}ord(){} will return a full UTF8 value, but the {}keyboard_check*(){} functions will {}only detect A - Z and 0 - 9{}. But what if you want to use the arrow keys? Or if you want to modify an action using the "shift" key? Well, for that {}GameMaker{} has a series of {}vk_{} constants ({}vk_{} stands for {}virtual key{}) that you can use in place of {}ord(){}:';new="因此，以上内容将检查 “A” 键，如果按下该键，则将对象的水平速度设置为-5。请注意，以这种方式使用{}ord(){}只有当输入字符串的长度只有一个字符并且是从0到9的数字或从a到Z的{}大写{}罗马字符时，才会正常工作。函数{}ord(){}将返回完整的UTF8值，但{}keyboard_check*(){}函数将{}仅检测a-Z和0- 9{}。但是，如果您想使用箭头键怎么办？或者如果你想使用 “shift” 键修改一个动作？好吧，对于{}GameMaker{}具有一系列{}vk_{}常量 ({}vk_{}代表{}虚拟按键{})，您可以使用它们代替{}ord(){}:"};
["keycode for the function keys F1 to F12"]={old="keycode for the function keys F1 to F12";new="功能键F1至F12的键码"};
["decimal dot keys on the numeric keypad"]={old="decimal dot keys on the numeric keypad";new="数字键盘上的小数点键"};
["{}The following is a small example of how to use the{}{}&nbsp;{}{}vk_{}{}&nbsp;{}{}constants:{}"]={new="{}以下是如何使用{}{}{}{}vk_{}{}{}{}常量{}的小例子 :";old="{}The following is a small example of how to use the{}{}&nbsp;{}{}vk_{}{}&nbsp;{}{}constants:{}"};
["Each input character from a key (or multiple keys) is defined by its {}UTF8{} code, which is a numerical value. This value can be retrieved for any character using the {}{}ord(){}{} function but, {}GameMaker{} also has a series of {}constants{} for the most used keyboard special keys and a special functions. Typically you'd use a combination of {}ord(){} with the {}keyboard_check*(){} functions, something like this:"]={old="Each input character from a key (or multiple keys) is defined by its {}UTF8{} code, which is a numerical value. This value can be retrieved for any character using the {}{}ord(){}{} function but, {}GameMaker{} also has a series of {}constants{} for the most used keyboard special keys and a special functions. Typically you'd use a combination of {}ord(){} with the {}keyboard_check*(){} functions, something like this:";new="来自一个键 (或多个键) 的每个输入字符都由其{}UTF8{}代码定义，该代码是一个数值。可以使用{}{}ord(){}{}函数为任何字符检索此值，但是 ，{}GameMaker{}还具有一系列{}常量{}用于最常用的键盘特殊键和特殊功能。通常，您会使用{}ord(){}与{}keyboard_check*(){}函数的组合，如下:"};
["keycode for the up arrow key"]={new="向上箭头键的键码";old="keycode for the up arrow key"};
['The above code will detect if the "Tab" key is {}pressed{} and create an instance of object "obj_Menu" if it is.']={old='The above code will detect if the "Tab" key is {}pressed{} and create an instance of object "obj_Menu" if it is.';new="上面的代码将检测 “Tab” 键是否被{}按下，如果是，则创建对象 “obj_Menu” 的实例。"};
["{}NOTE{}: When using the {}Virtual Keyboard{}, {}only{} the {}{}keyboard_string{}{} variable will be updated with the keyboard input."]={new="{}注意{}: 使用{}虚拟键盘{}{}时仅{}{}{}keyboard_string{}{}变量会随键盘输入而更新。";old="{}NOTE{}: When using the {}Virtual Keyboard{}, {}only{} the {}{}keyboard_string{}{} variable will be updated with the keyboard input."}
}