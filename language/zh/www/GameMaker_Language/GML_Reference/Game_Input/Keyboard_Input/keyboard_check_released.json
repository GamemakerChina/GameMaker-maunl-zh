{
    "The above code will check to see if the \"P\" key has been released and if so, create an instance of \"obj_Pause\".":"上面的代码将检查 “P” 键是否已释放，如果是，则创建 “obj_Pause” 的实例。",
    "The above code will check to see if the \"P\" key has been released and if so, create an instance of {}obj_Pause{}.":"上面的代码将检查 \"P\" 键是否已释放，如果是，则创建 {}obj_Pause{} 的实例。",
    "The function will take a keycode value as returned by the function&nbsp;{}{}ord{}{} (only {}capital{} letters from A-Z or numbers from 0-9), or any of the {}vk_*{} constants listed on the main&nbsp;{}Keyboard Input{} page.":"该函数将采用函数 {}{}ord{}{} 返回的 keycode 值 (仅 {}a-Z 的大写字母 {} 或 0-9 的数字)，或主{}键盘输入{}页面上列出的 {}vk_*{} 常量中的任何一个。",
    "The key to check the released state of.":"检查的释放状态的键。",
    "Unlike the&nbsp;{}{}keyboard_check{}{} function, this function will only return {}true{} once in the step the key is lifted,&nbsp;i.e. when it switches from held down in the previous step to no longer held down in the current step.&nbsp;So for it to return {}true{} again, the key must be first pressed and then released again.&nbsp;In all other steps, the function returns {}false{}.":"与 {}{}keyboard_check{}{} 函数不同，此函数仅在按键抬起的步骤中返回 {}true{}，即当其从前一步骤中保持向下切换到当前步骤中不再保持向下时。因此，要再次返回 {}true{}，必须先按下该键，然后再次释放。在所有其他步骤中，函数返回 {}false{}。",
    "With this function you can check to see if a key has been released or not.":"使用此函数，您可以检查是否已释放键。",
    "With this function you can check to see if a key has been released or not. Unlike the {}{}keyboard_check(){}{} function, this function will only run once for every time the key is lifted, so for it to trigger again, the key must be first pressed and then released again. The function will take a keycode value as returned by the function {}{}ord(){}{} (only {}capital{} letters from A-Z or numbers from 0-9), or any of the {}vk_*{} constants listed on the main {}Keyboard Input{} page.":"使用此函数，您可以检查是否已释放密钥。与 {}{}keyboard_check(){}{} 函数不同，该函数每次提起键时只会运行一次，因此要使其再次触发，必须先按下该键，然后再释放。该函数将采用函数 {}{}ord(){}{} 返回的 keycode 值 (仅 {}a-Z 的大写字母 {} 或 0-9 的数字)，或主{}键盘输入{}页面上列出的 {10}vk_*{11} 常量中的任何一个。"
}