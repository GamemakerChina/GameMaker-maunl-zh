{
    "The above code checks to see if the device mouse is being pressed and if so it then polls the device x position on the GUI layer to see if it is within the parameters. If it is it sets the variable \"pressed\" to {}true{}, other wise it sets it to {}false{}.":"上面的代码检查设备鼠标是否被按下，如果是这样，然后轮询设备x在GUI层上的位置，看看它是否在参数内。如果是，它将变量 “按下” 设置为{}true{}, 否则，它将其设置为{}false{}。",
    "This function returns the y position of the touch on the device in relation to the GUI layer. Since the GUI layer can be set to be a different size independently of the screen resolution {}and{} the room size, it can sometimes be complicated to get the exact point on the GUI layer that a user has touched the screen. With this function you can get that position based on the actual GUI size, making GUI buttons and HUD elements easier to create and interact with. If you are running this on a the HTML5 or PC and Mac modules then this value is updated constantly, as long as the device (usually a mouse) is plugged in, however for mobile devices, this will only be updated while the screen is being touched, and note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs.":"此函数返回设备上触摸相对于GUI层的y位置。由于可以将GUI层设置为与屏幕分辨率{}和{}房间大小无关的不同大小，因此有时在GUI层上获取用户已触摸屏幕的确切点可能会很复杂。使用此函数，您可以根据实际的GUI大小获得该位置，从而使GUI按钮和HUD元素更易于创建和交互。如果您在HTML5或PC和Mac模块上运行此值会不断更新，只要设备 (通常是鼠标) 已插入，但是对于移动设备，这只会在屏幕被触摸时更新，请注意，可以检测到的最大触摸数量将在很大程度上取决于所使用的设备及其运行的操作系统。"
}