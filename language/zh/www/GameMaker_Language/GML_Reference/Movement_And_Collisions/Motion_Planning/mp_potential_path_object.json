{
    "The above code creates a new path resource and stores its index in the variable \"path\". It then generates a path using {}mp_potential_path{} between the object with this code and the object \"obj_Player\", checking for collisions with the object \"obj_Wall\". Finally it starts the object along that path, even if the function has failed to return a complete route to the \"obj_Player\".":"上述代码创建新的路径资源并将其索引存储在变量\"路径\"中。然后在具有此代码的对象和对象\"obj_Player\"之间使用{}mp_potential_path{}生成路径，检查冲突使用对象\"obj_Wall\"。最后，它沿着该路径启动对象，即使函数未能返回到\"obj_Player\"的完整路由。",
    "The object that is to block the path. Can be an object index, an instance id or the special keyword ,{}all{}":"要阻止路径的对象。可以是对象索引、实例ID或特殊关键字，{}全部{}",
    "The speed the instance moves in pixels per step.":"实例每步移动的速度(以像素为单位)。",
    "The target x position.":"目标x位置。",
    "The target y position.":"目标y位置。",
    "This function computes a path for the instance from its current position {}and orientation{} to the position specified by the xgoal, ygoal arguments. It uses the indicated step size while trying to avoid collision with instances of the object specified by the \"obj\" argument. Like in the function {}{}mp_potential_step(){}{} it uses potential field steps to accomplish this and the manner in which it does this can be modified through the function {}{}mp_potential_settings(){}{}. The indicated path must already exist and it will be overwritten by the new path. The function will return whether a path was found (true) or not (false).":"此函数计算实例从其当前位置{}和方向{}到xgoal ygoal参数指定的位置的路径。在尝试避免与指定对象的实例发生冲突时，它使用指定的步长通过\"obj\"论证。与函数{}{}mp_potential_step(){}{}一样，它使用潜在的字段步骤来完成此操作，并且可以通过函数{}{}mp_potential_settings(){}{}修改执行此操作的方式。指示的路径必须已存在，并且将被新路径覆盖。该函数将返回是否找到路径(true)或否(false)。",
    "This number is used to prevent an infinite loop. It should be larger than 1. See the function description for more information.":"此数字用于防止无限循环。应大于1。有关详细信息，请参阅功能说明。",
    "To avoid the function continuing to compute forever you need to provide a factor of larger than 1 - the function will stop and report failure if it cannot find a path shorter than this factor times the distance between start and goal. A factor of 4 is normally good enough but if you expect long detours you might make it longer. If it fails a path is still created that runs in the approximate direction of the goal but it will not reach it.":"为了避免函数永远继续计算，您需要提供大于1的系数-如果无法找到短于此系数乘以开始和目标之间距离的路径，则函数将停止并报告失败。系数为4通常已经足够好了，但是如果你期望长时间的绕道，你可能会让它更长。如果失败，仍会创建一条路径，该路径沿目标的近似方向运行，但不会到达目标。",
    "index of the path that is to be used by the function":"函数要使用的路径的索引",
    "{}NOTE{}: This function does not move the instance. It sets a path only, and you must use the {}Path{} functions for movement.":"{}注意{}:此函数不会移动实例。它只设置路径，您必须使用{}Path{}函数进行移动。"
}