{
    "Note that instead of an object index you can supply the {}instance keyword{}&nbsp;{}all{}, to check for all instances in the current room, which may include the instance running the code (depending on the {}notme{} argument).":"请注意，您可以不提供对象索引，而是提供{}实例关键字{}{}all{}，以检查当前房间中的所有实例，其中可能包括运行代码的实例(取决于{}notme{}参数)。",
    "The DS list to use to store the IDs of colliding instances.":"用于存储冲突实例ID的D列表。",
    "The code above will check an elliptical area 100 pixels around the calling instance position for collisions with instances of \"obj_Enemy\". If there are any collisions, then the pre-created list is looped through and each instance that was in the collision is destroyed.":"上面的代码将检查调用实例位置周围100像素的椭圆区域，以确定是否与\"obj_Enemy\"实例发生冲突。如果存在任何冲突，则会循环显示预先创建的列表，并销毁冲突中的每个实例。",
    "The object to check for instance collisions.":"检查实例冲突的对象。",
    "The x coordinate of the left side of the ellipse to check.":"要检查的椭圆左侧的x坐标。",
    "The x coordinate of the right side of the ellipse to check.":"要检查的椭圆右侧的x坐标。",
    "The y coordinate of the bottom side of the ellipse to check.":"要检查的椭圆底侧的y坐标。",
    "The y coordinate of the top side of the ellipse to check.":"要检查的椭圆顶侧的y坐标。",
    "This function is the same as the {}{}collision_ellipse(){}{} function, only instead of just detecting one instance in collision at a time, it will detect multiple instances. You supply the x/y positions of the top left and bottom right of the elliptical area to check along with the object to check for, and you can set the check to be precise (in which case all instances being checked will need to have {}precise{} collision masks) and whether the check should include the calling instance or not.":"此函数与{}{}Collision_ellipse(){}{}函数相同，只是不是一次只检测一个冲突实例，而是检测多个实例。提供要检查的椭圆区域左上角和右下角的x/ y位置以及要检查的对象，并且可以将检查设置为精确(在这种情况下，所有要检查的实例都需要具有{}精确{}碰撞掩码)，以及检查是否应包括调用实例。",
    "Whether the calling instance, if relevant, should be excluded ({}true{}) or not ({}false{}).":"是否应排除调用实例(如果相关)({}true{})或({}false{})。",
    "Whether the check is based on precise collisions ({}true{}, which is slower) or its bounding box in general ({}false{}, faster).":"检查是基于精确碰撞({}true{}，速度较慢)还是基于其边界框({}false{}，速度较快)。",
    "Whether the list should be ordered by distance ({}true{}) or not ({}false{}).":"列表是否应按距离({}true{})或不按距离({}false{})排序。",
    "You supply a {}DS list{} too, so the&nbsp;{}{}id{}{} values of any instances that are colliding with the calling instance will be added to the end of the given list. You can {}clear{} the list before calling this function so that it only contains results from this function call. You also have the option to order the instances based on their distances from the origin of the elliptic&nbsp;area to their origins. The function returns the number of instances found, or 0 if none are found.":"您还提供了{}个Ds列表{}，因此任何与调用实例冲突的实例的{}{}个id{}{}值都将添加到给定列表的末尾。您可以在调用此函数之前{}清除{}列表，以便它只包含此函数调用的结果。还可以选择根据实例从椭圆区域原点到其原点的距离对实例进行排序。函数返回找到的实例数，如果找不到实例，则返回0。"
}