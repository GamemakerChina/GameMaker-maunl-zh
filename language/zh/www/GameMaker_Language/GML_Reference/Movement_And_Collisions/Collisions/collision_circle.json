{
    "Note that instead of an object index you can supply an instance {}{}id{}{} to check for a specific instance, or the {}instance keywords{} {}all{}, or {}other{} (depending on the event and current code scope).":"请注意，您可以不提供对象索引，而提供实例{}{}id{}{}来检查特定实例，或{}实例关键字{}{}all{}或{}other{}(取决于事件和当前代码范围)。",
    "The code above will check a circular are with a 20pixel radius for a collision with \"obj_Cursor\" and if there is one it will set the image_index of the object running the code to 1, but if there is not it will set the image_index of the object to 0.":"上面的代码将检查具有20像素半径的圆形是否与\"obj_Cursor\"发生碰撞，如果存在碰撞，则会将运行代码的对象的image_index设置为1，但如果不存在，则会将对象的image_index设置为0。",
    "The object to check for instance collisions.":"检查实例冲突的对象。",
    "The radius (distance in pixels from its center to its edge).":"半径(从中心到边缘的像素距离)。",
    "The x coordinate of the center of the circle to check.":"要检查的圆心的x坐标。",
    "The y coordinate of the center of the circle to check.":"要检查的圆心的y坐标。",
    "Whether the calling instance, if relevant, should be excluded ({}true{}) or not ({}false{}).":"是否应排除调用实例(如果相关)({}true{})或({}false{})。",
    "Whether the check is based on pixel-perfect collisions (true = slow) or its bounding box in general (false = fast).":"该复选框是基于像素完美碰撞(true=slow)还是基于其边界框(一般情况下为False=fast)。",
    "{}Collision_circle{} creates a circular zone of the radius given by the user around the points x1,y1 and then checks that zone for a collision with {}any{} instance of the object specified by the argument \"obj\". This check can be either precise or not, but for precise collisions to be enabled, the object or instance that you are checking for {}must{} also have precise collisions enabled for their sprite. If not, the default check is based on bounding boxes. The following image illustrates how this works:":"{}Collision_circle{}在点x 1、y 1周围创建用户给定半径的圆形区域，然后检查该区域是否与参数\"obj\"指定的对象的{}任何{}实例发生碰撞。此检查可以精确也可以不精确，但要启用精确碰撞，您要检查的对象或实例{}必须{}也为其精确碰撞启用了精确碰撞。如果不是，则默认检查基于边界框。下图说明了此操作的工作原理：",
    "{}Here, the instance in the middle is using a collision circle to check for ball objects. Now, the blue ones do {}not{} have a precise bounding box and as you can see, even if the sprite is not actually touching the circle, the collision can still happen (even if you set the precise option in the function to true) as the bounding box of that sprite over-laps the circular area defined by collision_circle. On the other hand, the green balls will only be considered in collision if the actual sprite over-laps with the defined circle. Remember, for precise collisions to be considered {}both{} the object sprite and the collision function must have precise marked as on. It should also be noted that the return value of the function can be the id of {}any one{} of the instances considered to be in collision.":"{}在这里，中间的实例使用碰撞圆来检查球对象。现在，蓝色的{}没有精确的边界框，如您所见，即使子画面没有实际接触到圆，碰撞仍然可能发生(即使您将函数中的精确选项设置为true)，因为该子画面的边界框与Collision_circle定义的圆形区域重叠。另一方面，只有当实际的子画面与定义的圆重叠时，才会考虑碰撞中的绿色球。请记住，要同时考虑{}对象sprite和碰撞函数的精确碰撞，必须将其精确标记为on。还应注意，函数的返回值可以是被认为处于冲突中的任何一个{}实例的ID。"
}