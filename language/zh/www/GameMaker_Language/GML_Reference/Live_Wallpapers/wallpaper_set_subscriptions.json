{
    "An array containing strings, which are the metrics you want to subscribe to":"包含字符串的数组，这些字符串是您要订阅的指标",
    "Arguments":"论点",
    "If some information could not be retrieved from the system, its corresponding variable will not be present in this structure. That may cause a crash if you try to access a variable that doesn\u0027t exist. To prevent that, use&nbsp;{}{}struct_exists{}{}&nbsp;to check that a variable exists in a struct, before accessing it.":"如果无法从系统检索某些信息，则其相应的变量将不会出现在该结构中。如果您尝试访问不存在的变量，可能会导致崩溃。为了防止这种情况发生，请在访问变量之前使用 {}{}struct_exists{}{} 检查结构中是否存在变量。",
    "In that file, it writes the current datetime, CPU device count (which is the length of the array), and then proceeds to write the load percentage of each CPU device in the array.":"在该文件中，它写入当前日期时间、CPU 设备计数 (即数组的长度)，然后继续写入数组中每个 CPU 设备的负载百分比。",
    "In the Wallpaper Subscription Data event, it gets the devices array for the CPU, and opens a text file to write metrics to.":"在壁纸订阅数据事件中，它获取 CPU 的设备数组，并打开一个文本文件以写入指标。",
    "Receiving Metrics":"接收指标",
    "The event will contain a {}wallpaper_subscription_data{} variable which is a {}struct{}, containing the following members:":"该事件将包含一个 {}wallpaper_subscription_data{} 变量，该变量是一个 {} 结构体 {}，包含以下成员：",
    "The first line, run in the Create event, enables mouse input and subscribes to CPU metrics.":"第一行在 Create 事件中运行，启用鼠标输入并订阅 CPU 指标。",
    "This code generates the following text in the {}sysinfo.txt{} file, found in the {}working directory{}:":"此代码在 {2} 工作目录 {3} 中的 {}sysinfo.txt{} 文件中生成以下文本：",
    "This function subscribes to the given metric(s) from the Companion app. This is used to get real-time system information, and enable mouse input, which is disabled for Live Wallpapers by default.":"此函数从 Companion 应用程序订阅给定的指标。用于获取实时系统信息，并启用鼠标输入，动态壁纸默认禁用鼠标输入。",
    "Within the&nbsp;{}Wallpaper Subscription Data{}&nbsp;event you will receive updates for subscribed metrics, around once every second, except for audio which is ten times a second.":"在 {} 壁纸订阅数据 {} 事件中，您将收到订阅指标的更新，大约每秒一次，音频除外，每秒十次。",
    "You pass an array into this function, containing one or more of the following strings: {}\"desktop_mouse\"{}, {}\"cpu\"{}, {}\"gpu\"{}, {}\"battery\"{}, {}\"ram\"{}, {}\"disk\"{}, {}\"network\"{}, {}\"audio\"{}.":"您向该函数传递一个数组，其中包含以下一个或多个字符串：{}\"desktop_mouse\"{}、{}\"cpu\"{}、{}\"gpu\"{}、{}\"battery\"{}、{}\" 内存 \"{}、{}\" 磁盘 \"{}、{}\" 网络 \"{}、{}\" 音频 \"{}。",
    "{}\"desktop_mouse\"{}&nbsp;enables mouse input for your Live Wallpaper. The other options allow the&nbsp;{}Wallpaper Subscription Data{} event to be triggered, where you receive data on the metrics you chose to subscribe to.":"{}\"desktop_mouse\"{} 为您的动态壁纸启用鼠标输入。其他选项允许触发 {} 壁纸订阅数据 {} 事件，您可以在其中接收有关您选择订阅的指标的数据。",
    "{}audio{} ({}{}Array{}{}&nbsp;of {}{}Real{}{}s):&nbsp;Represents a spectrum analysis of measured sound amplitudes on the system. The frequency will span from 0 Hz up to the Nyquist frequency, i.e half that of the system\u0027s sampling rate. If it is, for example, 44.1 kHz (the most common), the frequencies will range from 0 Hz to 22050 Hz. Each bin will always represent a range of 10 Hz. Thus, this array will consist of 2205 data points if the sampling rate is 44.1 kHz, and 2400 if it is 48 kHz (also common). {} {} ":"{} audio {}({}{} 实数 {}{} 的 {}{} 数组 {}{})：表示系统上测得的声音振幅的频谱分析。频率范围从 0 Hz 到奈奎斯特频率，即系统采样率的一半。例如，如果是 44.1 kHz(最常见)，则频率范围为 0 Hz 到 22050 Hz。每个 bin 始终代表 10 Hz 的范围。因此，如果采样率为 44.1 kHz，则该阵列将包含 2205 个数据点 ; 如果采样率为 48 kHz(也很常见)，则该阵列将包含 2400 个数据点。{}{}",
    "{}battery {}({}{}Array{}{}): Array of battery devices.&nbsp;Each entry in this array is a struct, containing the following members: {} {}{}name{} ({}{}String{}{}): The name of the battery.{} {}{}is_charging {}({}{}Boolean{}{}): Indicates if the battery is charging.{} {}{}remaining_charge_pct {}(Integer {}{}Real{}{}): Percentage of the charge left in the battery.{} {}{}remaining_time_min {}(Integer {}{}Real{}{}): The estimated time left of the battery in minutes.{} {} ":"{} battery {}({}{} 数组 {}{})：电池设备数组。该数组中的每个条目都是一个结构体，包含以下成员：{}{}{}name{}({}{}String{}{})：电池的名称。{}{}{}is_charging{}({}{}Boolean{}{})：指示电池是否正在充电。{}{}{}remaining_charge_pct{}(Integer{}{}Real{}{})：电池中剩余电量的百分比。{}{}{}remaining_time_min{}( 整数 {}{} 实数 {}{})：估计电池剩余时间 (以分钟为单位)。{}{}",
    "{}cpu{} ({}{}Array{}{}): Array of CPU devices. Each entry in this array is a struct, containing the following members: {} {}{}name{} ({}{}String{}{}): The name of the CPU.{} {}{}num_logical_cores{} (Integer {}{}Real{}{}): Number of logical cores.{} {}{}num_physical_cores{} (Integer {}{}Real{}{}): Number of physical cores.{} {}{}usage_pct{} (Integer {}{}Real{}{}): The load percentage of the CPU.{} {}{}current_clock_speed_MHz{} (Integer {}{}Real{}{}): The current clock speed of the CPU in MHz.{} {}{}max_clock_speed_MHz{} (Integer {}{}Real{}{}): The maximum clock speed of the CPU in MHz.{} {}{}voltage_V{} (Integer&nbsp;{}{}Real{}{}): The current voltage of the CPU in volts.{} {} ":"{}cpu{}({}{} 数组 {}{})：CPU 设备数组。该数组中的每个条目都是一个结构体，包含以下成员：{}{}{}name{}({}{}String{}{})：CPU 的名称。{}{}{}num_logic_cores{}( 整数 {}{}Real{}{})：逻辑核心数量。{}{}{}num_physical_cores{}( 整数 {}{}Real{}{})：物理核心数量。{}{}{}usage_pct{}( 整数 {}{}Real{}{})：CPU 的负载百分比。{}{}{}current_clock_speed_MHz{}( 整数 {}{}Real{}{})：当前时钟速度 CPU 的最大时钟速度，以 MHz 为单位。{}{}{}max_clock_speed_MHz{}( 整数 {}{}Real{}{})：CPU 的最大时钟速度，以 MHz 为单位。{}{}{} 电压 _V{}( 整数 {}{} 实数 {}{})：CPU 的当前电压 (以伏特为单位)。{}{}",
    "{}disk {}({}{}Array{}{}): Array of disks.&nbsp;Each entry in this array is a struct, containing the following members: {} {}{}name{} ({}{}String{}{}): The name of the disk.{} {}{}available_bytes{} (Integer {}{}Real{}{}): How much of the disk memory is available in bytes.{} {}{}total_bytes{} (Integer {}{}Real{}{}): The total disk memory in bytes.{} {}{}used_bytes{} (Integer {}{}Real{}{}): How much of the GPU memory is used up in bytes.{} {} ":"{} disk {}({}{} 阵列 {}{})：磁盘阵列。该数组中的每个条目都是一个结构体，包含以下成员：{}{}{}name{}({}{}String{}{})：磁盘的名称。{}{}{}available_bytes{}(Integer{}{}Real{}{})：可用磁盘内存量 (以字节为单位)。{}{}{}total_bytes{}(Integer{}{}Real{}{})：总磁盘内存以字节为单位。{}{}{}used_bytes{}( 整数 {}{}Real{}{})：已使用的 GPU 内存量以字节为单位。{}{}",
    "{}gpu {}({}{}Array{}{}): Array of GPU devices. Each entry in this array is a struct, containing the following members: {} {}{}name{} ({}{}String{}{}): The name of the GPU.{} {}{}usage_pct{} (Integer {}{}Real{}{}): The load percentage of the GPU.{} {}{}clock_speed_MHz{} (Integer {}{}Real{}{}): The current clock speed of the GPU in MHz.{} {}{}fan_speed_pct{} or {}fan_speed_rpm{} (Integer {}{}Real{}{}): The target speed of the GPU fan. Expressed as a percentage of the maximum speed on NVIDIA GPUs and in RPM on AMD GPUs.{} {}{}power_usage_W{} (Integer {}{}Real{}{}): The power usage of the GPU in Watt.{} {}{}temperature_C{} (Integer {}{}Real{}{}): The temperature of the GPU in Celsius.{} {}{}memory_used_bytes{} (Integer {}{}Real{}{}): How much of the GPU memory is used up in bytes.{} {}{}memory_available_bytes{} (Integer {}{}Real{}{}): How much of the GPU memory is available in bytes.{} {}{}memory_total_bytes{} (Integer {}{}Real{}{}): The total GPU memory in bytes.{} {} ":"{}gpu{}({}{}Array{}{})：GPU 设备数组。该数组中的每个条目都是一个结构体，包含以下成员：{}{}{}name{}({}{}String{}{})：GPU 的名称。{}{}{}usage_pct{}( 整数 {}{}Real{}{})：GPU 的负载百分比。{}{}{}clock_speed_MHz{}( 整数 {}{}Real{}{})：GPU 的当前时钟速度 MHz。{}{}{}fan_speed_pct{} 或 {}fan_speed_rpm{}( 整数 {}{} 实数 {}{})：GPU 风扇的目标速度。以 NVIDIA GPU 上最大速度的百分比表示，以 AMD GPU 上 RPM 为单位。{}{}{}power_usage_W{}( 整数 {}{} 实数 {}{})：GPU 的功耗 (以瓦特为单位)。{}{}{}Temperature_C{}( 整数 {}{}Real{}{})：GPU 的温度 (以摄氏度为单位)。{}{}{}memory_used_bytes{}( 整数 {}{}Real{}{})：已使用的 GPU 内存量 (以字节为单位)。{}{}{}memory_available_bytes{}( 整数 {}{} 实数 {}{})：可用的 GPU 内存量 (以字节为单位)。{}{}{}memory_total_bytes{}( 整数 {}{}Real{}{})：总 GPU 内存 (以字节为单位)。{}{}",
    "{}network{} ({}{}Array{}{}): Array of network devices.&nbsp;Each entry in this array is a struct, containing the following members: {} {}{}bandwidth_bps{} (Integer {}{}Real{}{}): The bandwidth of the network in bits per second.{} {}{}send_bps{} (Integer {}{}Real{}{}): The current bytes sent per second on the network.{} {}{}received_bps{} (Integer {}{}Real{}{}): The current bytes received per second on the network.{} {} ":"{} network {}({}{} 数组 {}{})：网络设备数组。该数组中的每个条目都是一个结构体，包含以下成员：{}{}{}bandwidth_bps{}( 整数 {}{}Real{}{})：网络带宽 (以每秒位数为单位)。{}{}{}send_bps{}( 整数 {}{}Real{}{})：当前网络上每秒发送的字节数。{}{}{}received_bps{}( 整数 {}{}Real{}{})：当前网络上每秒接收的字节数。{}{}",
    "{}ram {}({}{}Array{}{}): Array of RAM devices.&nbsp;Each entry in this array is a struct, containing the following members: {} {}{}name{} ({}{}String{}{}): The name of the RAM.{} {}{}available_bytes{} (Integer {}{}Real{}{}): How much of the RAM memory is available in bytes.{} {}{}total_bytes{} (Integer {}{}Real{}{}): The total RAM memory in bytes.{} {}{}used_bytes{} (Integer {}{}Real{}{}): How much of the GPU memory is used up in bytes.{} {} ":"{}ram{}({}{}Array{}{})：RAM 设备的数组。该数组中的每个条目都是一个结构体，包含以下成员：{}{}{}name{}({}{}String{}{})：RAM 的名称。{}{}{}available_bytes{}(Integer{}{}Real{}{})：可用 RAM 内存量 (以字节为单位)。{}{}{}total_bytes{}(Integer{}{}Real{}{})：总 RAM 内存以字节为单位。{}{}{}used_bytes{}( 整数 {}{}Real{}{})：已使用的 GPU 内存量以字节为单位。{}{}",
    "{}wallpaper_subscription_data Struct{}{}wallpaper_subscription_data Struct{}":"{}wallpaper_subscription_data 结构 {}{}wallpaper_subscription_data 结构 {}",
    "{}{}IMPORTANT{}{}&nbsp;The user must have the Companion app installed on Windows for metrics to work. {}See this guide{} for setting up the Companion app.":"{}{} 重要提示{}{} 用户必须在 Windows 上安装配套应用才能使指标发挥作用。{} 请参阅本指南 {} 以设置伴侣应用。",
    "{}{}NOTE{}{}&nbsp;Each call to this function cancels any previously active subscriptions, so only those included in the last call remain active.":"{}{} 注意{}{} 每次调用此函数都会取消之前所有活动的订阅，因此只有上次调用中包含的订阅仍保持活动状态。",
    "{}{}NOTE{}{}&nbsp;Graphics drivers must be up-to-date on the target computer for GPU metrics to work correctly.":"{}{} 注意{}{} 目标计算机上的图形驱动程序必须是最新的，GPU 指标才能正常工作。"
}