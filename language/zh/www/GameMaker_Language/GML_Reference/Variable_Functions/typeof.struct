{
["The variable holds an instance reference"]={new="变量保存一个实例引用";old="The variable holds an instance reference"};
["This function returns the data type of any given variable as a string. The possible return values are listed in the table below:"]={old="This function returns the data type of any given variable as a string. The possible return values are listed in the table below:";new="此函数以字符串形式返回任何给定变量的数据类型。下表列出了可能的返回值:"};
["The variable holds a real (floating point) number - this can include {}NaN{} and {}infinity{}"]={new="变量保存一个实数 (浮点数)-这可以包括{}NaN{}和{}infinity{}";old="The variable holds a real (floating point) number - this can include {}NaN{} and {}infinity{}"};
["The variable holds a pointer"]={new="变量保存一个指针";old="The variable holds a pointer"};
["The variable holds a 4 value vector"]={old="The variable holds a 4 value vector";new="4维向量"};
["The variable holds a 64 bit integer"]={old="The variable holds a 64 bit integer";new="变量保存一个64位整数"};
["The variable holds a string"]={old="The variable holds a string";new="变量保存一个字符串"};
["The variable holds a function reference"]={new="变量保存一个函数引用";old="The variable holds a function reference"};
["Please note that there are cases when this function may not return the correct value for a {}method{}. Consider the following two function definitions:"]={old="Please note that there are cases when this function may not return the correct value for a {}method{}. Consider the following two function definitions:";new="请注意，在某些情况下，此函数可能无法为{}方法{}返回正确的值。考虑以下两个函数定义:"};
["The variable is undefined"]={old="The variable is undefined";new="变量未定义"};
["The variable holds a boolean ({}true{} / {}false{})"]={old="The variable holds a boolean ({}true{} / {}false{})";new="变量保存一个布尔值 ({}true{}/{}false{})"};
["The above code gets the data type held by the given global variable and returns the string to a local variable which is then used to output a message to the console."]={new="上面的代码获取给定全局变量持有的数据类型，并将字符串返回给本地变量，然后将其用于向控制台输出消息。";old="The above code gets the data type held by the given global variable and returns the string to a local variable which is then used to output a message to the console."};
["The variable holds a struct reference"]={old="The variable holds a struct reference";new="变量持有struct引用"};
["The variable holds a 32bit integer"]={new="变量保存一个32位整数";old="The variable holds a 32bit integer"};
["The variable references an array"]={new="变量引用数组";old="The variable references an array"};
['Technically, these are both considered methods as they are binding a function to an instance scope variable, however calling {}typeof(){} on function {}b{} will return "number" and {}not {}"method", while calling it on {}a{} will return "method". This is due to the fact that methods created like the one for {}b{}&nbsp;are assigned script indices (which are integer values), since this is the way that the compiler recognises script&nbsp;functions, even if the function was not defined in a script.']={new="从技术上讲，这两个都被认为是方法，因为它们将函数绑定到实例范围变量，但是在函数{}b{}上调用{}typeof(){}将返回 “number”，而{}不是{}“方法”，在{}上调用它时，一个{}将返回 “方法”。这是由于这样的事实，即为{}b{}创建的方法被分配脚本索引 (它们是整数值)，因为这是编译器识别脚本函数的方式，即使该函数不是在脚本中定义的。";old='Technically, these are both considered methods as they are binding a function to an instance scope variable, however calling {}typeof(){} on function {}b{} will return "number" and {}not {}"method", while calling it on {}a{} will return "method". This is due to the fact that methods created like the one for {}b{}&nbsp;are assigned script indices (which are integer values), since this is the way that the compiler recognises script&nbsp;functions, even if the function was not defined in a script.'};
["The variable holds a null value (this should not be seen normally)"]={new="变量持有空值 (这不应该正常看到)";old="The variable holds a null value (this should not be seen normally)"};
["The variable holds a 3 value vector"]={new="三维向量";old="The variable holds a 3 value vector"};
["Value is unknown. This should {}never{} be seen and signifies that something has gone wrong at the most basic level like a memory overwrite"]={new="值未知。这应该{}永远不会被看到，并表示在最基本的级别上出现了问题，例如内存覆盖";old="Value is unknown. This should {}never{} be seen and signifies that something has gone wrong at the most basic level like a memory overwrite"};
["The variable to get the data type of."]={old="The variable to get the data type of.";new="获取的数据类型的变量。"}
}