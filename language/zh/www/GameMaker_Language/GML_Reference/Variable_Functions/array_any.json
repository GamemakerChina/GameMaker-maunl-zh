{
    "Boolean&nbsp;(whether the condition checked in the {}function{} is {}true{} {}or{} {}false{})":"布尔值({}函数{}中检查的条件是{} true {}{} 还是 {}{} false {} )",
    "See information and examples on&nbsp;{}Predicate Function{}.":"请参阅有关{}判断函数{}的信息和示例。",
    "The above code first creates an array {}instance_data{}. Every array element is a&nbsp;{}struct{}&nbsp;that stores a 2D position (\"x\" and \"y\") and a \"blend\" colour. It then creates a predicate function {}f_check_blend{}&nbsp;that returns {}true{} when the element\u0027s \"blend\" is set to {}c_red{}&nbsp;and {}false{} if it\u0027s not. The code then executes&nbsp;{}{}array_any{}{}&nbsp;on the array, using the {}f_check_blend{} function, and shows a debug message with the result.":"上面的代码首先创建了一个数组{}instance_data{}。 每个数组元素都是一个&nbsp;{}结构{}&nbsp;，存储一个二维位置（\"x\" 和 \"y\"）和一个 \"混合\" 颜色。 然后，它创建了一个判断函数{}f_check_blend{}&nbsp;，当元素的 \"混合 \"被设置为{}c_red{}时，返回{}true{}。 &nbsp;{}false{}则不是。 然后代码在数组上执行&nbsp;{}{}array_any{}{}&nbsp;，使用{}f_check_blend{}函数，并将结果显示为调试信息。",
    "The array to use":"要使用的数组",
    "The current array element":"当前数组元素",
    "The current array element\u0027s value":"当前数组元素的值",
    "The current array index":"当前数组索引",
    "The function to use for each element":"用于遍历每个元素的函数",
    "The predicate function should return a&nbsp;{}{}Boolean{}{}{}, which affects how the original function modifies or reads the array{}{}.{}":"判断函数应返回{}{}布尔值{}{}{}，这会影响原始函数修改或读取数组的方式{}{}。{}",
    "The predicate function&nbsp;{}_contains_apple{} checks if {}_val == \"apple\"{}&nbsp;and returns the result. When this is {}true{} for any one of the array\u0027s elements, {}array_any{} returns {}true{}.":"判断函数 {}_contains_apple{} 检查 {}_val == \"apple\"{} 并返回结果。当数组的任何一个元素为 {}true{} 时，{}array_any{} 将返回 {}true{}。",
    "The&nbsp;{}Predicate Function{}&nbsp;to run on each element":"对每个元素运行的{}判断函数{}",
    "This creates an array containing strings of fruit names. We want to check if the array contains {}\"apple\"{} anywhere.":"这将创建一个包含水果名称字符串的数组。我们希望检查该数组是否在任何位置包含 {}\"apple\"{}。",
    "This function is used to check if any one element in the given array matches a condition. You check that by passing a&nbsp;{}Predicate Function{}&nbsp;that runs on each element of the given array, and returns {}true{} or {}false{}.":"此函数用于检查给定数组中是否有任何元素与条件匹配。您可以通过传递在给定数组的每个元素上运行的{}判断函数{}来检查这一点，并返回 {}true{} 或 {}false{}。",
    "This function returns {}true{}&nbsp;if the predicate function&nbsp;returns {}true{} for at least one of the&nbsp;elements in the given array range.":"如果判断函数对于给定数组范围中的至少一个元素返回 {}true{}，则此函数返回 {}true{}。",
    "This function returns {}true{}&nbsp;if the predicate function&nbsp;returns {}true{} for&nbsp;{}any{} of the elements in the array&nbsp;or in a range of it.":"如果判断函数&nbsp;对数组中的任何元素&nbsp;或其范围内的任何元素返回{}true{}&nbsp;，该函数就会返回{}true{}。",
    "This function takes a&nbsp;{}Predicate Function{}&nbsp;that operates on the given array. The predicate function is passed the following arguments:":"此函数接受在给定数组上操作的{}判断函数{}。向判断函数传递以下参数：",
    "{}Predicate Function{}{}Predicate Function{}":"{}判断函数{}{}判断函数{}",
    "{}{}Boolean{}{}&nbsp;({}true{} if there is any element in the array for which the function returns {}true{}, {}false{} if there isn\u0027t any)":"{}{}布尔值{}({} true {}如果数组中有任何元素，函数将返回{} true {} ，如果没有任何元素返回{} false {})",
    "{}{}Boolean{}{}&nbsp;({}true{} if there is any element in the array for which the predicate returns {}true{}, {}false{} if there isn\u0027t any)":"{}{}Boolean{}{} (如果数组中有任何元素的判断返回{}true{}，则为{}true{}，如果没有元素，则返回{}false{})",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}要遍历的元素数。负值将反向遍历数组（即按索引的降序排列，例如2 &gt; 1 &gt; 0而不是0 &gt; 1 &gt; 2）。",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要遍历的元素数。负值将向后遍历数组(即以索引的降序，例如 2、1、0 而不是 2、3、4)。请参阅：{}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将是 {}array_length(array) + offset{}。请参阅：{}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}数组中的偏移量或起始索引。设置负值将从数组末尾开始计数。开始索引将为{}array_length(array)+偏移量{}。"
}