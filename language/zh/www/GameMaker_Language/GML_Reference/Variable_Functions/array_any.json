{
    "Boolean&nbsp;(whether the condition checked in the {}function{} is {}true{} {}or{} {}false{})":"布尔值({}函数{}中检查的条件是{} true {}{} 还是 {}{} false {} )",
    "The above code first creates an array {}instance_data{}. Every array element is a&nbsp;{}struct{}&nbsp;that stores a 2D position (\"x\" and \"y\") and a \"blend\" colour. It then creates a predicate function {}f_check_blend{}&nbsp;that returns {}true{} when the element\u0027s \"blend\" is set to {}c_red{}&nbsp;and {}false{} if it\u0027s not. The code then executes&nbsp;{}{}array_any{}{}&nbsp;on the array, using the {}f_check_blend{} function, and shows a debug message with the result.":"上面的代码首先创建了一个数组{}instance_data{}。 每个数组元素都是一个&nbsp;{}结构{}&nbsp;，存储一个二维位置（\"x\" 和 \"y\"）和一个 \"混合\" 颜色。 然后，它创建了一个谓词函数{}f_check_blend{}&nbsp;，当元素的 \"混合 \"被设置为{}c_red{}时，返回{}true{}。 &nbsp;{}false{}则不是。 然后代码在数组上执行&nbsp;{}{}array_any{}{}&nbsp;，使用{}f_check_blend{}函数，并将结果显示为调试信息。",
    "The array to use":"要使用的数组",
    "The current array element":"当前数组元素",
    "The current array index":"当前数组索引",
    "The function to use for each element":"用于遍历每个元素的函数",
    "This function returns {}true{}&nbsp;if the predicate function&nbsp;returns {}true{} for&nbsp;{}any{} of the elements in the array&nbsp;or in a range of it.":"如果谓词函数&nbsp;对数组中的任何元素&nbsp;或其范围内的任何元素返回{}true{}&nbsp;，该函数就会返回{}true{}。",
    "{}{}Boolean{}{}&nbsp;({}true{} if there is any element in the array for which the function returns {}true{}, {}false{} if there isn\u0027t any)":"{}{}布尔值{}({} true {}如果数组中有任何元素，函数将返回{} true {} ，如果没有任何元素返回{} false {})",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}要遍历的元素数。负值将向后遍历数组(即按索引的降序排列，例如2 > 1 > 0而不是0 > 1 > 2)。",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}&nbsp;数组中的偏移量，或起始索引。<br>设置一个负值将从数组的末端开始计算。那么，起始索引将是{}array_length(array) + offset{}。"
}