{
    "Any&nbsp;(the final {}return{} value)":"任意(最终{}返回{}值)",
    "The above piece of code first creates a temporary array {}array{} and fills it with a couple of numbers. It then creates a new function {}min_value{} that returns the minimum of its {}previous{} and {}current{} arguments. Finally it calls&nbsp;{}{}array_reduce{}{}&nbsp;on the array and stores the result in a temporary variable {}value{}. This variable will contain -1 as that is the smallest value in the array.":"上面这段代码首先创建了一个临时数组{}array{}，并将几个数字填入其中。 然后，它创建了一个新函数{}min_value{}，返回其{}previous{}和{}current{}参数的最小值。 最后，它对数组调用&nbsp;{}{}array_reduce{}{}&nbsp;，并将结果存储在一个临时变量{}value{}中。 这个变量将包含-1，因为那是数组中最小的值。",
    "The array to use":"要使用的数组",
    "The current element of the iteration":"迭代的当前元素",
    "The current index of the iteration":"迭代的当前索引",
    "The function to use for each element":"用于每个元素的函数",
    "The initial value to use as the first carried value. If none is provided this defaults to&nbsp;{}array[offset]{}.":"用来作为第一个携带的初始值。 如果没有提供，则默认为&nbsp;{}array[offset]{}。",
    "The value returned by the previous iteration":"前一次迭代返回的值",
    "{}This function {}reduces{} the elements of the array (or a range of it) to a single value.{}":"{}这个函数{}将{}数组（或数组的某个范围）中的元素变为一个单一的值。{}",
    "{}To do this, the function executes the predicate function for all elements of the array and carries the return value into the next execution. It returns the return value of the last execution of the predicate function.{}":"{}为此，该函数对数组的所有元素执行谓词函数，并将返回值带入下一次执行。 它返回谓词函数最后一次执行的返回值。{}。",
    "{}{}IMPORTANT{}{}&nbsp;The {}carry{} is the result of the previous call to the predicate function (for the previous array index). For the first call to the predicate function this depends on the value of {}init{}. If you don\u0027t provide a value for {}init{}&nbsp;it will default to {}array[offset]{}&nbsp;and the first iteration will be skipped. If you do provide a value for {}init{}&nbsp;it will be used as the carry value in the first iteration.":"{}{}重要{}{}&nbsp;{}carry{}是之前调用谓词函数的结果（针对前一个数组索引）。对于第一次调用谓词函数，这取决于{}init{}的值。如果你没有为{}init{}提供一个值，它将默认为{}array[offset]{}&nbsp;并且第一次迭代将被跳过。如果你提供了{}init{}&nbsp;的值，它将被用作第一次迭代的携带值。",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}&nbsp;要遍历的元素数量。负值将反向遍历数组（即按索引降序排列，例如，2 &gt; 1 &gt; 0而不是0 &gt; 1 &gt; 2）",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}&nbsp;数组中的偏移量，或起始索引。<br>设置一个负值将从数组的末端开始计算。 然后，起始索引将是{}array_length(array) + offset{}。"
}