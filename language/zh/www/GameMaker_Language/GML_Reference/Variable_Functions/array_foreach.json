{
    "It expects the&nbsp;{}element{}&nbsp;parameter to be a struct. Finally {}{}array_foreach{}{}&nbsp;is called with the array and the function as the arguments. After the code has executed all structs will have their {}x{} value set to their array index.":"它要求 {}element{} 参数为结构。最后，使用数组和函数作为参数来调用 {}{}array_foreach{}{}。代码执行后，所有结构的 {}x{} 值都将设置为其数组索引。",
    "It then defines a temporary function {}x_to_index{}&nbsp;that takes in an element and an index, and sets the element\u0027s {}x{} to that index.":"然后，它定义一个临时函数 {}x_to_index{} ，该函数接受一个元素和一个索引，并将元素的 {}x{} 设置为该索引。",
    "See information and examples on&nbsp;{}Predicate Function{}.":"请参阅有关{}判断函数{}的信息和示例。",
    "The above code first creates a temporary array of structs {}array{} where each struct stores and \"x\" and \"y\" value. It then defines a temporary function {}x_to_index{}&nbsp;that takes in an element and index and sets the element\u0027s \"x\" to that index. It expects the&nbsp;{}element{}&nbsp;parameter to be a struct. Finally {}{}array_foreach{}{}&nbsp;is called with the array and the function as the arguments. After the code has executed all structs will have their \"x\" value set to their array index.":"上面的代码首先创建一个临时数组的结构{}array{}，其中每个结构存储和 “x” 和 “y” 值。然后，它定义一个临时函数{}x_to_index{}，该函数包含一个元素和索引，并将元素的 “x” 设置为该索引。它期望{}element{}参数是一个结构。最后{}{}array_foreach{}{}以数组和函数为参数调用。代码执行后，所有结构都将其 “x” 值设置为数组索引。",
    "The above code first creates a temporary array of structs {}array{} where each struct stores and {}x{} and {}y{} value.":"上面的代码首先创建一个结构的临时数组 {}array{}，每个结构存储 {}x{} 和 {}y{} 值。",
    "The array to use":"要使用的数组",
    "The callback function you pass into this function should take the following arguments:":"传递到此函数的回调函数应采用以下参数：",
    "The callback function&nbsp;to run on each element":"要在每个元素上运行的回调函数",
    "The current array element":"当前数组元素",
    "The current array element\u0027s value":"当前数组元素的值",
    "The current array index":"当前数组索引",
    "The function to use for each element":"用于每个元素的函数",
    "The predicate function should return a&nbsp;{}{}Boolean{}{}{}, which affects how the original function modifies or reads the array{}{}.{}":"判断函数应返回{}{}布尔值{}{}{}，这会影响原始函数修改或读取数组的方式{}{}。{}",
    "The&nbsp;{}Predicate Function{}&nbsp;to run on each element":"对每个元素运行的{}判断函数{}",
    "This callback function should not return a value. It simply executes the function on all elements in the given range.":"此回调函数不应返回值。它只是对给定范围内的所有元素执行该函数。",
    "This function loops through an array (or a range of it) and executes the callback function {}for each{} element.":"此函数循环访问数组(或数组的一个范围)，并为{}每个{}元素执行回调函数。",
    "This function loops through an array (or a range of it) and executes the&nbsp;{}Callback Method{}&nbsp;{}for each{} element.":"此函数循环访问数组(或数组的一个范围)，并为{2}每个{3}元素执行{}回调方法{}。",
    "This function loops through an array or a range of it and executes the predicate function {}for each{} element.":"此函数循环通过数组或其范围，并为{}每个{}元素执行判断函数。",
    "This function takes a&nbsp;{}Predicate Function{}&nbsp;that operates on the given array. The predicate function is passed the following arguments:":"此函数接受在给定数组上操作的{}判断函数{}。向判断函数传递以下参数：",
    "{}Callback Function{}{}Callback Function{}":"{}回调函数{}{}回调函数{}",
    "{}Predicate Function{}{}Predicate Function{}":"{}判断函数{}{}判断函数{}",
    "{}{}IMPORTANT{}{}&nbsp;You {}cannot{} use this function&nbsp;to change array elements directly, i.e. by writing&nbsp;{} {}{}element = value;{}{} {}&nbsp;in the function. You {}can{} make changes if the array element {}references{}&nbsp;something else (e.g. when the array element itself is an {}array{} or {}struct{}).":"{}{}IMPORTANT{}{} 您{}不能{}使用此函数直接更改数组元素，即通过写入函数中的{}{}{}element = value;{}{}{}。如果数组元素{}引用{}其他内容(例如，当数组元素本身是{}数组{}或{}结构{}时)，则{}可以{}进行更改。",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}要遍历的元素数量。负值将向后遍历数组(即按索引的降序顺序，例如 2&gt; 1&gt; 0 而不是 0&gt; 1&gt; 2)。",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要遍历的元素数。负值将向后遍历数组(即以索引的降序，例如 2、1、0 而不是 2、3、4)。请参阅：{}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将是 {}array_length(array) + offset{}。请参阅：{}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将为{}array_length(array) + offset{}."
}