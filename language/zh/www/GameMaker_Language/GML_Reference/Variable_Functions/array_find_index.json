{
    "As soon as the predicate function returns {}true{} for an element, the function stops and returns the index of that element.":"只要判断函数为元素返回 {}true{}，该函数就会停止并返回该元素的索引。",
    "Boolean&nbsp;(whether the condition checked in the {}function{} is {}true{} {}or{} {}false{})":"布尔值(在 {} 函数 {} 中检查的条件是 {} true {} {} 还是 {} {} false {})",
    "Finally an index is found using&nbsp;{}array_find_index{}&nbsp;and stored in a temporary variable {}index{}. This variable will contain the value 5, as the first positive value in the array, 3, is at array index 5.":"最后，使用 {}array_find_index{} 查找索引，并将其存储在临时变量 {}index{} 中。该变量将包含值 5，因为数组中的第一个正值 3 位于数组索引 5 处。",
    "If the predicate doesn\u0027t return {}true{} on any element, the function returns {}-1{}.":"如果判断在任何元素上都没有返回 {}true{}，则函数返回 {}-1{}。",
    "Once a value is found the function stops execution so array elements that come after that will not be checked using the predicate function.":"一旦找到值，函数将停止执行，因此之后的数组元素将不会使用判断函数进行检查。",
    "See information and examples on&nbsp;{}Predicate Function{}.":"请参阅有关{}判断函数{}的信息和示例。",
    "See information and examples on&nbsp;{}Predicate Method{}.":"请参阅有关{}判断方法{}的信息和示例。",
    "The above code first creates a function that takes an array element and its index as the input. The function returns {}true{} if the element is greater than 0 and {}false{} if not. An array with values is then created, some negative, others zero or positive.{} Finally an index is found using&nbsp;{}array_find_index{}&nbsp;and stored in a temporary variable {}index{}. This variable will contain the value 5, as the first positive value in the array, 3, is at array index 5.":"上面的代码首先创建了一个以数组元素及其索引作为输入的函数。如果元素大于 0，则函数返回 {}true{}；如果不是，则返回 {}false{}。然后创建一个包含值的数组，一些为负值，另一些为零或正值。{}最后，使用 {} array_find_index{} 找到一个索引，并存储在临时变量 {}index{} 中。此变量将包含值 5，因为数组中的第一个正值 3 位于数组索引 5 处。",
    "The above code first creates a function that takes an array element and its index as the input. The function returns {}true{} if the element is greater than 0 and {}false{} if not. An array with values is then created.":"上面的代码首先创建一个函数，该函数接受数组元素及其索引作为输入。如果元素大于 0，则该函数返回 {}true{}，否则返回 {}false{}。然后创建一个带有值的数组。",
    "The array to use":"要使用的数组",
    "The current array element":"当前数组元素",
    "The current array element\u0027s value":"当前数组元素的值",
    "The current array index":"当前数组索引",
    "The function to use for each element":"用于每个元素的函数",
    "The predicate function should return a&nbsp;{}{}Boolean{}{}{}, which affects how the original function modifies or reads the array{}{}.{}":"判断函数应返回{}{}布尔值{}{}{}，这会影响原始函数修改或读取数组的方式{}{}。{}",
    "The&nbsp;{}Predicate Function{}&nbsp;to run on each element":"对每个元素运行的{}判断函数{}",
    "The&nbsp;{}Predicate Method{}&nbsp;to run on each element":"对每个元素运行的{}判断方法{}",
    "This function is used to find the index of the first array element that satisfies a condition.":"此函数用于查找满足条件的第一个数组元素的索引。",
    "This function takes a&nbsp;{}Predicate Function{}&nbsp;that operates on the given array. The predicate function is passed the following arguments:":"此函数接受在给定数组上操作的{}判断函数{}。向判断函数传递以下参数：",
    "This function takes a&nbsp;{}Predicate Method{}&nbsp;that operates on the given array. The predicate function is passed the following arguments:":"此函数接受在给定数组上操作的{}判断方法{}。向判断函数传递以下参数：",
    "{}Predicate Function{}{}Predicate Function{}":"{}判断函数{}{}判断函数{}",
    "{}This function returns the index of the {}first{} element {}in the input array or in a range of it&nbsp;{}for which the predicate function returns {}true{} or -1{}&nbsp;{}if no such element is found.{}":"{}此函数返回输入数组中或其范围{}中第一个{}元素{}的索引，如果找不到此类元素，则判断函数返回{} true {}或-1 {}{}。{}",
    "{}You supply a&nbsp;{}Predicate Function{}&nbsp;which runs for all elements in the array. It should return either&nbsp;{}true{} or {}false{}&nbsp;based on a condition.{}":"{}您提供了一个对数组中的所有元素运行的{}判断函数{}。它应根据条件返回 {}true{} 或 {}false{}。{}",
    "{}You supply a&nbsp;{}Predicate Method{}&nbsp;which runs for all elements in the array. It should return either&nbsp;{}true{} or {}false{}&nbsp;based on a condition.{}":"{}您提供了一个对数组中的所有元素运行的{}判断方法{}。它应根据条件返回 {}true{} 或 {}false{}。{}",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}要遍历的元素数。负值将反向遍历数组(即按索引的降序排列，例如2 &gt; 1 &gt; 0而不是0 &gt; 1 &gt; 2)。",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要遍历的元素数。负值将向后遍历数组(即以索引的降序，例如 2、1、0 而不是 2、3、4)。请参阅：{}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将是 {}array_length(array) + offset{}。请参阅：{}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}数组中的偏移量或起始索引。设置负值将从数组末尾开始计数。开始索引将为{}array_length(array)+偏移量{}。",
    "{}{}Real{}{}&nbsp;(the index of the first element found or -1 if nothing was found)":"{}{} Real{}{}(找到的第一个元素的索引，如果没有找到，则为-1 )",
    "{}{}TIP{}{}&nbsp;If you use an offset of {}-1{} and a negative length ({}-infinity{}), then this function will search backwards from the end of the array, essentially letting you find the last element in the array that satisfies the predicate condition.":"{}{}提示{}{} 如果您使用偏移量 {}-1{} 和负长度 ({}-infinity{})，则此函数将从数组的末尾向后搜索，实质上是让您找到数组中满足判断条件的最后一个元素。"
}