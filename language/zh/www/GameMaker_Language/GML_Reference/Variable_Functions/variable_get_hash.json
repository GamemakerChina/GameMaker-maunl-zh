{
    "Accessing a variable through a hash allows for faster access when using a string, compared to using the {}struct[$ \"string\"]{} syntax.":"与使用{}struct[$ \"string\"]{}语法相比，通过散列访问变量可以在使用字符串时更快地访问。",
    "Accessing a variable through a hash allows for faster access when using a string, compared to using the {}struct[? \"string\"]{} syntax.":"与使用 {}struct[? \"string\"]{} 相比，通过散列访问变量可以在使用字符串时更快地访问。",
    "The above code creates a temporary&nbsp;struct {}_the_struct{} with three member variables: {}a{}, {}b{} and {}c{}. It then calls&nbsp;{}{}choose{}{}&nbsp;to pick one of these variable names at random and uses the returned name in {}{}variable_get_hash{}{}&nbsp;to get that variable name\u0027s hash. This hash is stored in a temporary variable {}_hash{} and then used in&nbsp;{}{}struct_get_from_hash{}{}&nbsp;to retrieve the value&nbsp;of the struct member with the corresponding name. The returned value is assigned to another temporary variable {}_value{}.":"上述代码创建了一个临时结构体 {}_the_struct{}，它包含三个成员变量：{}a{}、{}b{} 和 {}c{}。然后，它调用 {}{}choose{}{} 随机选择这些变量名称中的一个，并使用返回的名称在 {}{}variable_get_hash{}{} 中获取该变量名称的哈希值。这个哈希值存储在临时变量 {}_hash{} 中，然后用于 {}{}struct_get_from_hash{}{} 以检索具有对应名称的结构体成员的值。返回的值被赋值给另一个临时变量 {}_value{}。",
    "The above code creates a temporary&nbsp;struct {}_the_struct{} with three member variables: {}a{}, {}b{} and {}c{}. It then gets the hash&nbsp;of a variable {}a{}. This hash is then used in&nbsp;{}{}struct_get_from_hash{}{}&nbsp;to retrieve the value&nbsp;of the struct member with the corresponding name. The returned value is assigned to another temporary variable {}_value{}.":"上面的代码创建了一个具有三个成员变量的临时结构 {}_the_struct{}：{}a{}、{}b{} 和 {}c{}。然后，它获得变量 {}a{} 的散列。然后在 {}{}struct_get_from_hash{}{} 中使用此散列来检索具有相应名称的结构成员的值。返回值被赋给另一个临时变量 {}_value{}。",
    "The name&nbsp;of the variable to get the hash from":"从中获取哈希的变量的名称",
    "This function returns a hash for the given string. This hash can be used with the&nbsp;{}{}struct_get_from_hash{}{} and {}{}struct_set_from_hash{}{} functions.":"此函数返回给定字符串的哈希值。这个哈希值可以与 {}{}struct_get_from_hash{}{} 和 {}{}struct_set_from_hash{}{} 函数一起使用。",
    "This function returns a hash for the given variable name. This hash can be used with the&nbsp;{}{}struct_get_from_hash{}{} and {}{}struct_set_from_hash{}{} functions.":"此函数返回给定变量名的哈希。此哈希可与 {}{}struct_get_from_hash{}{} 和 {}{}struct_set_from_hash{}{} 函数一起使用。",
    "{}{}NOTE{}{}&nbsp;The compiler automatically replaces variable names that it detects cannot ever change while your game is running (i.e. they are {}constant at compile time{}) with their hash value. It can be useful to get the hash yourself if you only know the name of the variable that\u0027s accessed while your game is running (i.e. {}at runtime{}).&nbsp;See&nbsp;{}Compiler Optimisations{}.":"{}{}注意{}{}：编译器会自动将其检测到在游戏运行期间不会发生变化的变量名称（即，它们在编译时是 {}常量{}）替换为它们的哈希值。如果你只知道游戏运行时访问的变量名称（即 {}运行时{}），获取哈希值可能会很有用。请参见 {}编译器优化{}。"
}