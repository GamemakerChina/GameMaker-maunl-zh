{
    "A custom function to define the sort order":"定义排序顺序的自定义函数",
    "Here is an extended example:":"下面是一个扩展的例子:",
    "If the array contains a set of strings, then the strings will be sorted alphabetically based on the English alphabet when using the default ascending/descending sort type. All other data types will be sorted based on their numerical value, the exact values of which will depend on the data type itself (for example, an array of buffers would be sorted based on the numerical value of their indices).":"如果数组包含一组字符串，则在使用默认升序/降序排序类型时，将根据英文字母表按字母顺序对字符串进行排序。所有其他数据类型将根据其数值进行排序，其确切值将取决于数据类型本身(例如，缓冲区数组将根据其索引的数值进行排序)。",
    "If the array contains a set of strings, then the strings will be sorted alphabetically based on the English alphabet when using the default ascending/descending sort type. All other data types will be sorted based on their numerical value, the exact values of which will depend on the data type itself (for example, an array of buffers would be sorted based on the numerical value of their memory addresses).":"如果数组包含一组字符串，则在使用默认的升序/降序排序类型时，字符串将根据英文字母按字母顺序排序。所有其他数据类型将根据其数值进行排序，其确切值将取决于数据类型本身(例如，缓冲区数组将根据其内存地址的数值进行排序)。",
    "If you use a custom function for sorting, it must take 2 arguments&nbsp;which will receive the values of the&nbsp;current element and the next element respectively. The function should return any of the following values to affect the sort order (where&nbsp;{}elm1{}&nbsp;is the current element and {}elm2{}&nbsp;is the next element):":"如果使用自定义函数进行排序，则它必须接受2个参数，这2个参数将分别接收当前元素和下一个元素的值。该函数应返回以下任何值以影响排序顺序(其中{}elm1{}是当前元素，{}elm2{}是下一个元素)：",
    "The above code uses a custom sorting function to sort the array in an ascending order. The sorting function takes the two array elements as {}elm1{} and {}elm2{}&nbsp;and performs a subtraction on them.&nbsp;If {}elm1{} is greater than {}elm2{}, the subtraction results in a positive number which pushes {}elm1{} to be after {}elm2{}, hence putting them in an&nbsp;ascending order.":"上面的代码使用自定义排序函数对数组进行升序排序。排序函数将两个数组元素作为 {} elm1 {} 和 {} elm2 {}，然后对它们进行减法。如果 {} elm1 {} 大于 {} elm2 {}，则减法得出一个正数，将 {} elm1 {} 推至 {} elm2 {} 之后，因此按升序排列。",
    "The above code will create an array of 10 instances placed at random positions within the room. The debug message will show something like the&nbsp;following:":"上面的代码将创建一个由10个实例组成的数组，这些实例放置在房间内的随机位置。调试消息将显示如下内容:",
    "The code then creates a method to be used in the {}array_sort(){} function that returns the difference between each of the X positions of the instances in the room. Then the&nbsp;{}array_sort(){} function is run using that method, sorting the instances by X from lowest to highest. The output for the array would then look something like this:":"然后，代码创建一个方法，用于 {} array_sort(){} 函数，该函数返回房间中实例的每个X位置之间的差异。然后使用该方法运行 {} array_sort(){} 函数，将实例从最低到最高按X排序。数组的输出将看起来像这样:",
    "The constant&nbsp;{}true{} or {}false{} to indicate an&nbsp;ascending ({}true{}) or descending ({}false{}) sort order, or":"常量{}true{}或{}false{}，指示升序({}true{}) 或降序({}false{}) 排序顺序，或者",
    "The constant&nbsp;{}true{} or {}false{} to indicate an&nbsp;{}ascending ({}true{}) or descending ({}false{}) sort order, or{}":"常量 {}true{} 或 {}false{} 指示 {} 升序 ({}true{}) 或降序 ({}false{}) 排序顺序 {}",
    "The constants {}true{} or {}false{} to indicate an&nbsp;{}ascending ({}true{}) or descending ({}false{}) sort order{}":"常量{}TRUE{}或{}FALSE{}指示{}升序({}TRUE{})或降序({}FALSE{})排序顺序{}",
    "The sort type ({}{}true{} for ascending or {}false{} for descending) or a function reference to use for sorting.{}":"排序类型({} {} true {} 表示升序或 {} false {} 表示降序)或用于排序的函数引用。{}",
    "The variable that holds the array.":"保存数组的变量。",
    "This function will modify the contents of the original array that was supplied. To create a sorted copy, use {}{}array_copy(){}{} to duplicate the array first, and then pass that into this function.":"此函数将修改提供的原始数组的内容。要创建排序副本，请使用 {}{} array_copy(){}{} 先复制数组，然后将其传递到此函数中。",
    "Using a custom function":"使用自定义函数",
    "With this function you can sort an array in ascending order or descending order or using a custom function to define the sort order. The function requires you to provide the array to sort, and then either of the following:":"使用此函数，您可以按升序或降序对数组进行排序，或者使用自定义函数定义排序顺序。该函数要求您提供要排序的数组，然后执行以下操作之一：",
    "{}&gt;= 1{} (positive integer): if {}elm1{} goes after {}elm2{}":"{}&gt;=1{} (正整数): 如果 {} elm1{} 在 {} elm2{} 之后",
    "{}&lt;= -1{} (negative integer): if {}elm1{} goes before {}elm2{}":"{}&lt;=-1{}(负整数)：如果{}elm1{}在{}elm2{}之前",
    "{}0{}: if {}elm1{} and {}elm2{} are equal":"{}0{}: 如果 {} elm1{} 和 {} elm2{} 相等",
    "{}NOTE 1{}&nbsp;The value returned by your custom function must be an integer. Floating point values less than 1 will be read as 0, so you must use {}{}sign(){}{} or {}{}round(){}{}&nbsp;if your function works with floating point values.{} {} {}NOTE 2{}&nbsp;When your custom function returns 0 for a pair of elements (or the pair is equal when using ascending/descending order), the order of that pair may not be preserved as the sorting algorithm used ({}qsort{}) is not stable. ":"{}注意 1{} 您的自定义函数返回的值必须是整数。小于 1 的浮点值将被读取为 0，因此，如果您的函数使用浮点值，则必须使用 {}{}sign(){}{} 或 {}{}round(){}{}。{}{}{}注意 2{} 当您的自定义函数为一对元素返回 0 (或使用升序 / 降序时该对相等) 时，可能不会保留该对的顺序，因为所使用的排序算法 ({}qsor{}) 不稳定。",
    "{}NOTE{} The value returned by your custom function must be an integer. Floating point values less than 1 will be read as 0, so you must use {}{}sign(){}{} or {}{}round(){}{}&nbsp;if your function works with floating point values.":"{}注意{} 您的自定义函数返回的值必须是整数。小于1的浮点值将被读取为0，因此如果您的函数使用浮点值，则必须使用 {}{} sign(){}{} 或 {}{} round(){}{}。"
}