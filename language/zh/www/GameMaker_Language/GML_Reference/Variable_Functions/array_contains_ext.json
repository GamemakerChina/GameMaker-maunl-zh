{
    "An array containing the values to look for. Add a value multiple times with the {}matchAll{} argument set to {}true{} to require that a value occurs multiple times (see Example 2). Order isn\u0027t taken into account, i.e. the values don\u0027t have to occur in the array in the order they\u0027re listed here.":"包含要查找的值的数组。在将 {}matchAll{} 参数设置为 {}true{} 的情况下多次添加一个值，以要求某个值多次出现 (请参见示例 2)。不考虑顺序，也就是说，值不必按此处列出的顺序出现在数组中。",
    "The above code creates an array containing a sequence of inputs. Then it creates another array which contains the inputs that make the sequence valid (i.e. having&nbsp;{}only{} three occurrences of \"left\"). It then calls&nbsp;{}{}array_contains_ext{}{}&nbsp;to validate the inputs array, stores the result in a variable and prints it to the output log.":"上面的代码创建一个包含输入序列的数组。然后，它创建另一个数组，其中包含使序列有效的输入(即，{}仅{}出现 3 次\"left\")。然后，它调用{}{}array_contains_ext{}{}来验证输入数组，将结果存储在变量中并将其打印到输出日志。",
    "The above code first creates an array that stores a basic inventory of items. The items are stored as strings. It then defines a temporary array {}_required_items{}&nbsp;that contains the items required to make a \"potion\". Next&nbsp;{}{}array_contains_ext{}{}&nbsp;is called to check if {}all{} values in {}_required_items{} are present in {}inventory{}. This is done by setting the {}matchAll{} argument to {}true{}. The result is stored in the variable {}_can_make_potion{}. Finally a debug message is shown saying if a \"potion\" can be made or not from the inventory\u0027s current contents.":"上面的代码首先创建一个存储商品基本库存的数组。这些项目以字符串的形式存储。然后，它定义一个临时数组 {}_required_items{}，该数组包含制作 \"potion\" 所需的物品。下一步 {}{}array_contains_ext{}{} 被调用以检查 {}_required_items{} 中的 {}all{} 值是否都存在于 {}inventory{} 中。这是通过将 {}matchAll{} 参数设置为 {}true{} 来实现的。结果存储在变量 {}_can_make_potion{} 中。最后，会显示一条调试消息，说明是否可以根据库存的当前内容制作 \"potion\"。",
    "The above code first creates an array {}hand{}&nbsp;with 13 values. It then defines another array {}_high_cards{} that defines which are considered \"high\" cards. Next the {}hand{} array is checked for any of these using&nbsp;{}{}array_contains_ext{}{}&nbsp;and the result is stored in a temporary variable {}_any_high_cards{}. Finally a debug message shows the value of the variable {}_any_high_cards{}.":"上面的代码首先创建一个具有 13 个值的数组{}hand{} 。然后，它定义另一个数组 {}_high_cards{}，该数组定义哪些牌被视为\"high\"卡片。接下来，检查使用 {6}{7}array_contains_ext{8}{9} 和 {}hand{} 数组中的任何一个，结果存储在临时变量{}_any_high_cards{}中。最后，调试消息显示变量 {}_any_high_cards{} 的值。",
    "The array in which to look for the values":"要在其中查找值的数组",
    "The array of values may contain duplicates. This way you can check if there are multiple (or {}enough{}) occurrences of a value in an array. To avoid this, you can run&nbsp;{}{}array_unique{}{}&nbsp;on your array first to guarantee only single occurrences.":"值的数组可能包含重复项。通过这种方式，您可以检查一个数组中是否有多次 (或 {} 足够 {}) 出现某个值。要避免这种情况，您可以先在阵列上运行 {}{}array_unique{}{} ，以保证只出现一次。",
    "The {}matchAll{}&nbsp;argument determines&nbsp;if {}all{} values should be present in the array ({}true{}) or if&nbsp;{}any one{} of the values will do ({}false{}).":"参数 {}matchall{} 确定数组中是否应存在{}所有{}值 ({}true{})，或者确定{}任何一个{}值是否都可以 ({}false{})。",
    "The {}values{} array may contain duplicates. When {}matchAll{} is enabled, this allows you to check exactly how many occurrences of a value exist in the original array.":"{}values{}数组可能包含重复项。启用{}matchAll{}后，您可以准确检查原始数组中某个值出现的次数。",
    "This function checks if the given array (or a part of it) contains any or all of the given values.":"此函数用于检查给定数组(或其中的一部分)是否包含任何或所有给定值。",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要遍历的元素数。负值将向后遍历数组(即以索引的降序，例如 2、1、0 而不是 2、3、4)。请参阅： {}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. The default is {}array_length()&nbsp;- 1{}.&nbsp;A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}{} {}":"{}{} 可选{}{} 要遍历的元素数量。默认值为 {}array_length() - 1{}。负值将向后遍历数组 (即按索引降序排列，例如 2、1、0 而不是 2、3、4)。请参阅：{} 偏移和长度 {}{}{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array. Defaults to 0. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}{} {}":"{}{} 可选{}{} 数组中的偏移量或起始索引。默认为 0。设置负值将从数组末尾开始计数。起始索引将为 {}array_length(array) + offset{}。请参阅：{} 偏移和长度 {}{}{}",
    "{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将是 {}array_length(array)+offset{}。请参阅：{}偏移量和长度{}",
    "{}{}OPTIONAL{}{}&nbsp;Whether all values should be present in the array ({}true{}) or any of the values will do ({}false{}).":"{}{}可选{}{} 是否所有值都应该出现在数组中({}true{})，或者任何值都可以({}false{})。",
    "{}{}OPTIONAL{}{}&nbsp;Whether all values should be present in the array ({}true{}) or any of the values will do ({}false{}). The default is {}false{}.":"{}{} 可选{}{} 是所有值都应出现在数组中 ({}true{})，还是任何值都应出现在数组中 ({}false{})。默认值为 {}false{}。",
    "{}{}TIP{}{}&nbsp;To check if an array not just {}contains{} a value but rather contains a value {}that satisfies a certain condition{}, use&nbsp;{}{}array_any{}{}.":"{}{}提示{}{} 要检查数组是否不仅{}包含{}值，而且还{}包含满足特定条件的值{}，请使用 {}{}array_any{}{}。"
}