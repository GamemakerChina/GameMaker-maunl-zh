{
["You can bind built-in functions as well as user defined&nbsp;functions/methods, and you can also supply {}undefined{} as the instance/struct argument meaning that the current {}{}self{}{} scope will be used for the binding."]={old="You can bind built-in functions as well as user defined&nbsp;functions/methods, and you can also supply {}undefined{} as the instance/struct argument meaning that the current {}{}self{}{} scope will be used for the binding.";new="您可以绑定内置函数以及用户定义的函数/方法，也可以提供{}undefined{}作为instance/ struct参数，这意味着当前的{}{}self{}{}作用域将用于绑定。"};
["You supply the instance ID to use (an instance that is active in the room, and not an object index) or a struct reference, as well as the function ID (or method reference) that you want to bind. The function will return a new&nbsp;{}method{} which can be called from the variable it is assigned to (see the code example below)."]={old="You supply the instance ID to use (an instance that is active in the room, and not an object index) or a struct reference, as well as the function ID (or method reference) that you want to bind. The function will return a new&nbsp;{}method{} which can be called from the variable it is assigned to (see the code example below).";new="您提供要使用的实例ID (在房间中处于活动状态的实例，而不是对象索引) 或struct引用，以及要绑定的函数ID (或方法引用)。该函数将返回一个新的{}方法{}，该方法可以从分配给它的变量中调用 (请参见下面的代码示例)。"};
['The returned method will be "bound" to the given instance or struct, meaning it will always execute in the scope of that instance/struct.']={new="返回的方法将被 “绑定” 到给定的实例或结构，这意味着它将始终在该实例/结构的范围内执行。";old='The returned method will be "bound" to the given instance or struct, meaning it will always execute in the scope of that instance/struct.'};
['The above code will check if an enemy instance exists at the mouse\'s position. If it does then the {}enemy_ai{} method is bound to the enemy instance and returned as a new method variable {}"enemy_func"{}.']={new="上面的代码将检查鼠标位置是否存在敌人实例。如果这样做，则{}enemy_ai{}方法将绑定到敌人实例，并作为新方法变量{}“enemy_func”{}返回。";old='The above code will check if an enemy instance exists at the mouse\'s position. If it does then the {}enemy_ai{} method is bound to the enemy instance and returned as a new method variable {}"enemy_func"{}.'};
["The unique reference or ID value of the struct or instance to use (can be {}self{} or {}undefined{})"]={new="要使用的结构或实例的唯一引用或ID值 (可以是{}self{}或{}undefined{})";old="The unique reference or ID value of the struct or instance to use (can be {}self{} or {}undefined{})"};
["With this function you can bind an existing function (or method) to the given instance or struct, creating a new&nbsp;{}method variable{} that can be used later."]={new="使用此函数，您可以将现有函数 (或方法) 绑定到给定的实例或结构，从而创建一个新的{}方法变量{}，以后可以使用。";old="With this function you can bind an existing function (or method) to the given instance or struct, creating a new&nbsp;{}method variable{} that can be used later."};
["The ID of the function (or method reference) to use"]={old="The ID of the function (or method reference) to use";new="要使用的函数 (或方法引用) 的ID"}
}