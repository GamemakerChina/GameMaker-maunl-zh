{
    "A callback {}method{} is passed into an array function, such as&nbsp;{}array_foreach{}, along with an array.":"回调{}方法{}与数组一起传递给数组函数，如 {}array_foreach{}。",
    "A predicate function is passed into an array function, such as&nbsp;{}array_any{}, along with an array.":"判断函数与数组一起传递给数组函数，如 {}array_any{}。",
    "Advanced {}array functions{}":"高级 {} 数组函数 {}",
    "Advanced&nbsp;{}Array Functions{}":"高级{}数组函数{}",
    "Based on what your callback method returns for each element, either a result value or a modified copy of the array is returned. However if you\u0027re using one of the {}_ext{} functions, the original array is modified instead of being copied.":"根据回调方法为每个元素返回的内容，将返回结果值或数组的修改副本。但是，如果您使用的是 {}_ext{} 函数之一，则会修改原始数组，而不是复制。",
    "Based on what your predicate function returns for each element, either a result value or a modified version of the array is returned. However if you\u0027re using one of the {}_ext{} functions, the array passed into the function is modified.":"根据判断函数为每个元素返回的内容，将返回结果值或数组的修改版本。但是，如果您使用的是 {}_ext{} 函数之一，则传递给该函数的数组将被修改。",
    "Basic {}Array Functions{}":"基本{}数组函数{}",
    "Basic {}array functions{}":"基本 {} 数组函数 {}",
    "By default, a predicate function runs on all elements inside the array, however most advanced array functions also take two extra parameters:&nbsp;{}offset{} and {}length{}.":"默认情况下，判断函数在数组内的所有元素上运行，但是大多数高级数组函数还带有两个额外的参数：{}offset{} 和 {}length{}。",
    "By default, a predicate method runs on all elements inside the array, however most advanced array functions also take two extra parameters:&nbsp;{}offset{} and {}length{}.":"默认情况下，判断方法在数组内的所有元素上运行，但是大多数高级数组函数还带有两个额外的参数：{}offset{} 和 {}length{}。",
    "Callback Method":"回调方法",
    "Example":"示例",
    "Example: Predicate":"示例：判断",
    "Extended {}array functions{}":"扩展 {} 数组函数 {}",
    "Extended&nbsp;{}Array Functions{}":"扩展{}数组函数{}",
    "For this, we would use the {}array_any{} function:":"为此，我们将使用 {}array_any{} 函数：",
    "GameMaker runs your callback method on each element of the given array. For each element in the array, it passes two arguments into your callback method:":"GameMaker 在给定数组的每个元素上运行回调方法。对于数组中的每个元素，它将两个参数传递给您的回调方法：",
    "GameMaker runs your predicate function on each element of the given array. For each element in the array, it passes two arguments into your predicate function:":"GameMaker 在给定数组的每个元素上运行判断函数。对于数组中的每个元素，它将两个参数传递给判断函数：",
    "If the function returns a modified version of the array, only the elements that were operated on will be returned, in the order they were operated in. For example, with an offset of {}3{} and length of {}3{}, elements {}3, 4, 5{} will be operated on and returned as a new array, and the rest of the elements (e.g. {}0, 1, 2, 6, 7, etc.{}) will be scrapped.":"如果该函数返回数组的修改版本，则只返回被操作的元素，并按其操作顺序返回。例如，当偏移量为 {}3{}，长度为 {}3{} 时，元素 {}3, 4, 5{} 将被操作并作为新数组返回，其余元素 (如 {}0, 1, 2, 6, 7, 等等......{}) 将被销毁。",
    "If the function returns a modified version of the array, only the elements that were operated on will be returned, in the order they were operated in. For example, with an offset of {}3{} and length of {}3{}, elements {}3, 4, 5{} will be operated on and returned as a new array, and the rest of the elements (e.g. {}0, 1, 2{}) will be scrapped.":"如果该函数返回数组的修改版本，则只返回被操作的元素，并按其操作顺序返回。例如，当偏移量为 {}3{}，长度为 {}3{} 时，元素 {}3、4、5{} 将被操作并作为新数组返回，其余元素 (如 {}0、1、2{}) 将被销毁。",
    "In your callback method, you can use these arguments to calculate a return value, if the array function requires it (such as {}array_map{}).":"在回调方法中，如果数组函数需要返回值 (如 {}array_map{})，则可以使用这些参数来计算返回值。",
    "In your predicate function, you can use these arguments to calculate a return value. It should return a&nbsp;{}{}Boolean{}{}, to tell whether the element \"qualifies\".":"在判断函数中，您可以使用这些参数来计算返回值。它应该返回一个 {}{}boolean{}{}，以告知该元素是否 \"合格\"。",
    "Let\u0027s create a predicate function to check if an array contains the string {}\"apple\"{} inside it.":"让我们创建一个判断函数来检查数组中是否包含字符串 {}\"apple\"{}。",
    "Let\u0027s create a predicate method to check if an array contains the string {}\"apple\"{} inside it.":"让我们创建一个谓词方法来检查数组中是否包含字符串 {}\"apple\"{}。",
    "Offset And Length":"偏移量和长度",
    "Our predicate function checks if {}_val == \"apple\"{}&nbsp;and returns the result. When this is {}true{} for any one of the array\u0027s elements, {}array_any{} returns {}true{}.":"我们的判断函数检查 {}_val == \"apple\"{} 并返回结果。当数组的任何一个元素为 {}true{} 时，{}array_any{} 将返回 {}true{}。",
    "Our predicate method checks if {}_val == \"apple\"{}&nbsp;and returns the result. When this is {}true{} for any one of the array\u0027s elements, {}array_any{} returns {}true{}.":"我们的判断方法检查 {}_val==\"apple\"{} 并返回结果。当数组的任何一个元素为 {}true{} 时，{}array_any{} 将返回 {}true{}。",
    "Predicate Function":"判定函数",
    "Predicate Method":"判断方法",
    "Predicate functions":"判断函数",
    "The output is most often a&nbsp;{}{}Boolean{}{}, as this kind of function usually checks whether an element \"qualifies\". Sometimes it can return a&nbsp;{}{}Any{}{}&nbsp;value as well, in cases where the function does a mapping (e.g.&nbsp;{}array_map{}).":"输出通常是{}{}Boolean{}{}，因为这种函数通常检查元素是否“符合条件”。有时，在函数执行映射的情况下，它也可以返回{}{}任何{}{}值。（例如，{}array_map{}）",
    "The output is most often a&nbsp;{}{}Boolean{}{}, as this kind of function usually checks whether an element \"qualifies\". Sometimes it can return a&nbsp;{}{}Boolean{}{}&nbsp;value as well, in cases where the function does a mapping (e.g.&nbsp;{}array_map{}).":"输出通常为{}{}布尔值{}{}，因为此类函数通常检查元素是否“合格”。有时，在函数执行映射的情况下，它也可以返回{}{}布尔值{}{}。（例如{}array_map{}）",
    "The {}length{} can also be negative, in which case the function will operate backwards. For example, if you start with an offset of {}3{} and a length of {}3{}, then elements {}3, 4, 5{} will be covered. However with a length of {}-3{}, elements {}3, 2, 1{} will be covered.":"{}length{} 也可以是负数，在这种情况下，函数将向后操作。例如，如果从偏移量 {}3{} 开始，长度为 {}3{}，则元素 {}3、4、5{} 将被覆盖。但是，长度为 {}-3{} 的元素 {}3、2、1{} 将被覆盖。",
    "The {}length{} is the number of elements that are checked in the array, starting at the {}offset{}.":"{}length{} 是数组中检查的元素数，从 {}offset{} 开始。",
    "The {}length{} is the number of elements that are checked in the array, starting at the {}offset{}. {} {}The {}length{} can also be negative, in which case the function will operate backwards. For example, if you start with an offset of {}3{} and a length of {}3{}, then elements {}3, 4, 5{} will be covered. With a length of {}-3{}, elements {}3, 2, 1{} will be covered.{} {}You can use {}infinity{} or&nbsp;{}-infinity{}&nbsp;as the length to traverse an array to its end or its beginning, respectively.{} {} ":"{}length{} 是数组中检查的元素数，从 {}offset{} 开始。 {} {}{}length{} 也可以是负数，在这种情况下，函数将向后操作。例如，如果从偏移量 {}3{} 开始，长度为 {}3{}，则元素 {}3, 4, 5{} 将被覆盖。但是，长度为 {}-3{} 的元素 {}3, 2, 1{} 将被覆盖。{} {}您可以使用 {}infinity{} 或 {}-infinity{} 分别作为遍历数组到其结尾或开头的长度。{} {} ",
    "The {}offset{} and {}length{} parameters let you decide which part of the array you want the function to look through, and which direction you want it to go (forwards or backwards).":"使用 {}offset{} 和 {}length{} 参数，您可以决定希望函数查看数组的哪个部分，以及希望它朝哪个方向前进 (向前或向后)。",
    "The {}offset{} can be a negative number, in which case it will start from the end of the array. For example, an offset of {}-1{} refers to the last element of the array, {}-2{} refers to the second-last element, and so on.":"{}offset{} 可以是负数，在这种情况下，它将从数组的末尾开始。例如，偏移量 {}-1{} 表示数组的最后一个元素，{}-2{} 表示倒数第二个元素，依此类推。",
    "The {}offset{} is the 0-based index where the function starts operating on the array.":"{}offset{}是函数开始在数组上操作的从0开始的索引。",
    "The {}offset{} is the 0-based index where the function starts operating on the array. {} {}The {}offset{} can be a negative number, in which case it will start from the end of the array. For example, an offset of {}-1{} refers to the last element of the array, {}-2{} refers to the second-last element, and so on.{} {} ":"{}offset{}是函数开始在数组上操作的从0开始的索引。{} {}{}offset{} 可以是负数，在这种情况下，它将从数组的末尾开始。例如，偏移量 {}-1{} 表示数组的最后一个元素，{}-2{} 表示倒数第二个元素，依此类推。{} {} ",
    "There are a few functions associated with the use of&nbsp;{}Arrays{} too. These are designed to give you flexibility in your code, and will permit you to create more functional and dynamic arrays when making your games.":"还有一些与使用 {} 数组 {} 相关的函数。这些旨在为您提供代码的灵活性，并允许您在制作游戏时创建更多函数和动态的数组。",
    "These are functions that you define in&nbsp;{}GameMaker{}&nbsp;and pass as an argument to one of the functions below. You don\u0027t execute this function yourself directly,&nbsp;{}GameMaker{}&nbsp;executes it for every array element in the range that you provide using the {}offset{} and {}length{} arguments.":"这些是您在 {} GameMaker{} 中定义的函数，并作为参数传递给以下函数之一。您不会直接自己执行此函数 ，{} GameMaker{} 使用 {} offset{} 和 {} length{} 参数为您提供的范围内的每个数组元素执行它。",
    "When a callback method is required to only return {}true{} or {}false{}, it\u0027s called a {}predicate method{}. A predicate is used to tell whether an element in the array qualifies a condition.":"当回调方法只需要返回 {}true{} 或 {}false{} 时，它被称为{}谓词方法{}。谓词用于告知数组中的元素是否符合条件。",
    "You can use {}infinity{} or&nbsp;{}-infinity{}&nbsp;as the length to traverse an array to its end or its beginning, respectively.":"您可以使用 {}infinity{} 或 {}-infinity{} 分别作为遍历数组到其结尾或开头的长度。",
    "{}Array Functions{}":"数组函数",
    "{}Index{} of the array element":"数组元素的{}索引{}",
    "{}Value{} of the array element":"数组元素的{}值{}",
    "{}array_height_2d{}&nbsp;{}(deprecated){}":"{}array_height_2d {}{} (已弃用){}",
    "{}array_length_1d{} {}(deprecated){}":"{}array_length_1d {}{} (已弃用){}",
    "{}array_length_2d{}&nbsp;{}(deprecated){}":"{}array_length_2d {}{} (已弃用){}"
}