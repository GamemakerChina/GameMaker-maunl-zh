{
    "A callback {}method{} is passed into an array function, such as&nbsp;{}array_foreach{}, along with an array.":"一个回调 {0} 方法 {1} 被传入数组函数，例如 {2}array_foreach{3}，以及一个数组。",
    "Advanced&nbsp;{}Array Functions{}":"高级 {0} 数组函数 {1}",
    "Based on what your callback method returns for each element, either a result value or a modified copy of the array is returned. However if you\u0027re using one of the {}_ext{} functions, the original array is modified instead of being copied.":"根据回调方法为每个元素返回的内容，返回结果值或修改后的数组副本。但是，如果您使用某个 {}_ext{} 函数，则会修改原始数组，而不是复制。",
    "Basic {}Array Functions{}":"基本 {0} 数组函数 {1}",
    "By default, a predicate method runs on all elements inside the array, however most advanced array functions also take two extra parameters:&nbsp;{}offset{} and {}length{}.":"默认情况下，谓词方法对数组内的所有元素运行，但大多数高级数组函数还需要两个额外的参数：{}offset{} 和 {}length{}。",
    "Callback Method":"回调方法",
    "Example: Predicate":"示例：谓词",
    "Extended&nbsp;{}Array Functions{}":"扩展 {0} 数组函数 {1}",
    "For this, we would use the {}array_any{} function:":"为此，我们将使用 {0}array_any{1} 函数：",
    "GameMaker runs your callback method on each element of the given array. For each element in the array, it passes two arguments into your callback method:":"GameMaker 会在给定数组的每个元素上运行您的回调方法。对于数组中的每个元素，它会向您的回调方法传递两个参数：",
    "If the function returns a modified version of the array, only the elements that were operated on will be returned, in the order they were operated in. For example, with an offset of {}3{} and length of {}3{}, elements {}3, 4, 5{} will be operated on and returned as a new array, and the rest of the elements (e.g. {}0, 1, 2, 6, 7, etc.{}) will be scrapped.":"如果函数返回数组的修改版本，则仅返回已操作的元素，并按操作顺序返回。例如，偏移量为 {}3{}，长度为 {}3{}，元素 {}3, 4, 5{} 将进行操作并作为新数组返回，其余元素 (例如 {}0, 1, 2, 6, 7, etc.{}) 将被丢弃。",
    "In your callback method, you can use these arguments to calculate a return value, if the array function requires it (such as {}array_map{}).":"在您的回调方法中，如果数组函数需要，您可以使用这些参数来计算返回值 (例如 {}array_map{})。",
    "Let\u0027s create a predicate method to check if an array contains the string {}\"apple\"{} inside it.":"让我们创建一个谓词方法来检查数组中是否包含字符串{0}\"苹果\"{1}。",
    "Offset And Length":"偏移和长度",
    "Our predicate method checks if {}_val == \"apple\"{}&nbsp;and returns the result. When this is {}true{} for any one of the array\u0027s elements, {}array_any{} returns {}true{}.":"我们的谓词方法检查 {0}_val == \"apple\"{1} 并返回结果。当数组中任一元素满足该条件 {2}true{3} 时，{4}array_any{5} 将返回 {6}true{7}。",
    "Predicate Method":"谓词法",
    "The {}length{} is the number of elements that are checked in the array, starting at the {}offset{}. {} {}The {}length{} can also be negative, in which case the function will operate backwards. For example, if you start with an offset of {}3{} and a length of {}3{}, then elements {}3, 4, 5{} will be covered. With a length of {}-3{}, elements {}3, 2, 1{} will be covered.{} {}You can use {}infinity{} or&nbsp;{}-infinity{}&nbsp;as the length to traverse an array to its end or its beginning, respectively.{} {} ":"{0}length{1}指定从{2}offset{3}开始检查的数组元素数量。{4}{5}该{6}length{7}可为负值，此时函数将反向操作。例如，若偏移量为{8}3{9}且长度为{10}3{11}，则将涵盖元素{12}3、4、5{13}；若长度为{14}-3{15}，则将涵盖元素{16}3、2、1{17}。{18}{19}可使用{20}infinity{21}或{22}-infinity{23}作为长度值，分别表示遍历至数组末端或起始端。{24}{25}",
    "The {}offset{} and {}length{} parameters let you decide which part of the array you want the function to look through, and which direction you want it to go (forwards or backwards).":"通过 {}offset{} 和 {}length{} 参数，您可以决定希望函数查看数组的哪个部分，以及希望它前进的方向 (向前或向后)。",
    "The {}offset{} is the 0-based index where the function starts operating on the array. {} {}The {}offset{} can be a negative number, in which case it will start from the end of the array. For example, an offset of {}-1{} refers to the last element of the array, {}-2{} refers to the second-last element, and so on.{} {}The {}offset{}&nbsp;that you pass is clamped between 0 and the last element. For example, an offset of&nbsp;{}6{}&nbsp;used with an array of 4 elements will refer to the last element&nbsp;{}3{}, an offset of {}-infinity{}&nbsp;used with that same array will refer to the first element {}0{}.{} {} ":"{}offset{} 是从 0 开始的索引，函数从此处开始对数组进行操作。{}{}{}offset{} 可以是负数，在这种情况下，它将从数组末尾开始。例如，偏移量 {}-1{} 指的是数组的最后一个元素，{}-2{} 指的是倒数第二个元素，依此类推。{}{} 您传递的 {}offset{} 介于 0 和最后一个元素之间。例如，对于包含 4 个元素的数组，偏移量 {}6{} 将引用最后一个元素 {}3{}，对于同一数组，偏移量 {}-infinity{} 将引用第一个元素 {}0{}。{}{}",
    "There are a few functions associated with the use of&nbsp;{}Arrays{} too. These are designed to give you flexibility in your code, and will permit you to create more functional and dynamic arrays when making your games.":"还有一些与使用 {0} 数组 {1} 相关的函数。这些函数旨在为您的代码提供灵活性，并允许您在制作游戏时创建功能更丰富、更动态的数组。",
    "When a callback method is required to only return {}true{} or {}false{}, it\u0027s called a {}predicate method{}. A predicate is used to tell whether an element in the array qualifies a condition.":"当回调方法仅需要返回 {}true{} 或 {}false{} 时，它被称为 {} 谓词方法 {}。谓词用于判断数组中的元素是否符合某个条件。",
    "{}Array Functions{}":"{0} 数组函数 {1}",
    "{}Index{} of the array element":"数组元素的 {} 索引 {}",
    "{}Value{} of the array element":"数组元素的 {} 值 {}"
}