{
    "Because of this, all other elements are&nbsp;{}{}shifted{}&nbsp;to the left one place{}, i.e. the value at index 0 is removed, the value at index 1 moves to index 0, the value at index 2 moves to index 1, etc. The number of elements is reduced by 1, as there is no value to replace the last element with.":"因此，所有其他元素都{}{}左移{}了一位{}，即索引 0 处的值被移除，索引 1 处的值移至索引 0，索引 2 处的值移至索引 1，依此类推。元素的数量减少 1，因为没有值可用来替换最后一个元素。",
    "In the above example the array {}_array{} is \"rotated\" 10 times. \"Rotating\" an array means that elements are removed on one end and added back on the other end. The length of the array remains the same. Every iteration, the letters move left; the array is rotated {}left{}. A debug message is shown after each iteration to show the contents of the array at that point.":"在上面的例子中，数组 {}_array{} 被\"旋转\"了 10 次。\"旋转\"数组意味着元素的一端被移除，另一端被重新添加。数组的长度保持不变。每一次迭代，字母向左移动数组向左旋转{}。每次迭代后都会显示一条调试消息，以显示该点的数组内容。",
    "The above code calls&nbsp;{}{}array_shift{}{}&nbsp;on the array {}_array{} twice. After that, a debug message shows the contents of the array. As the first call to the function removes the value {}\"A\"{} and the second shift removes the value {}\"B\"{}, the array will only contain {}\"C\"{} at this point.":"上面的代码在数组 {4}_array{5} 上两次调用 {}{}array_shift{}{} 。之后，一条调试消息显示数组的内容。由于对该函数的第一次调用删除了值 {}\"A\"{}，第二次移位删除了值 {}\"B\"{}，此时数组将只包含 {}\"C\"{}。",
    "The above code creates a temporary array {}_queue{} that acts like a queue using&nbsp;{}{}array_shift{}{}&nbsp;and&nbsp;{}{}array_push{}{}. The characters in a second array {}_incoming{}&nbsp;are added to the queue array one by one, using a {}repeat{} loop. Whenever the length of the queue is greater than 4 (stored in the constant&nbsp;{}MAX_QUEUE_LENGTH{}), the first element is removed using&nbsp;{}{}array_shift{}{}.":"上面的代码创建了一个临时数组{}_queue{}，它的作用类似于使用 {}{}array_shift{}{} 和 {}{}array_push{}{} 的队列。第二个数组 {}_incoming{} 中的字符使用 {}repeat{} 循环逐个添加到队列数组中。每当队列长度大于4(存储在常量 {}MAX_QUEUE_LENGTH{} 中)时，使用 {}{}array_shift{}{} 删除第一个元素。",
    "The array to&nbsp;{}shift{}, i.e. to return and remove the first element from":"转到的数组{}移位{}，即返回并从中移除第一个元素",
    "The function works identically to&nbsp;{}{}array_pop{}{}, but removes and returns the {}first{} element instead of the {}last{} one.":"该函数的工作原理与 {}{}array_pop{}{} 相同，但会删除并返回{}第一个{}元素，而不是{}最后一个{}元素。",
    "This function removes the first element from the given array and returns it.":"此函数从给定数组中删除第一个元素并返回它。",
    "Using the functions&nbsp;{}{}array_pop{}{}&nbsp;and&nbsp;{}{}array_insert{}{}&nbsp;arrays can be rotated {}right{} instead.":"使用函数 {}{}array_pop{}{} 和 {}{}array_insert{}{} 数组可以改为向{}右{}旋转。",
    "{}{}Any{}{}&nbsp;(the type of the removed first array element)":"{}{}Any{}{}&nbsp;(移除的第一个数组元素的类型)",
    "{}{}NOTE{}{}&nbsp;Use&nbsp;{}{}array_first{}{}&nbsp;to get the first element without removing it from the array.":"{}{}注意{}{} 使用 {}{}array_first{}{} 以获得第一个元素而不将其从数组中移除。"
}