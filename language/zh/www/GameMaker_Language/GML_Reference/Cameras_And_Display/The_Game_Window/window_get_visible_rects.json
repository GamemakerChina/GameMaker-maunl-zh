{
    "The above code will generate a 1D array held in the variable {}display_data{} containing the information about the displays, as well as create the variable {}display_num{} to hold the number of active displays found.":"上述代码将生成包含显示信息的变量 {}display_data{} 中的 1D 数组，并创建变量 {}display_num{} 以保存找到的活动显示器数。",
    "The bottom edge of the rectangle to check.":"要检查的矩形的下边缘。",
    "The left edge of the rectangle to check":"要检查的矩形的左边缘",
    "The right edge of the rectangle to check":"要检查的矩形的右边缘",
    "The top edge of the rectangle to check.":"要检查的矩形的上边缘。",
    "With this function you can find the overlapping region of the rectangle defined by (x1,y1) to (x2,y2) on each of the attached displays. The function will return an array with 8 values per display (ie: if you have two displays, the array will have a\n    length of 16 indices), where the values [0 ... 3] correspond to the overlapx1, overlapy1, overlapx2, overlapy2 - defining the region of overlap on this display and will be set to 0,0,0,0 if no overlap - and the values [4 ... 7] corresponds to the\n    monitorx1, monitory1, monitorx2, monitory2 - the coordinates of the display in the virtual display space. This can be used to test whether a saved window position is going to be visible or not (the user may have disconnected an external monitor or\n    moved the window off screen which left the window position that was saved as not being valid), for example.":"使用此函数，您可以在每个附着的显示器上找到由 (x1,y1) 到 (x2,y2) 定义的矩形的重叠区域。该函数将返回一个数组，每个显示 8 个值(即：如果有两个显示器，该数组将具有 16 个索引的长度)，其中值 [ 0...3 ] 对应于重叠x1、重叠y1、重叠x2、重叠y2 - 定义此显示上的重叠区域，并且如果没有重叠，将被设置为 0、0、0、0 - 并且值 [ 4...7 ] 对应于监视器x1、监视器y1、监视器x2、监视器y2 - 虚拟显示空间中的显示坐标。例如，这可用于测试保存的窗口位置是否可见(用户可能已断开外部显示器的连接或将窗口从屏幕上移开，从而使保存为无效的窗口位置离开)。"
}