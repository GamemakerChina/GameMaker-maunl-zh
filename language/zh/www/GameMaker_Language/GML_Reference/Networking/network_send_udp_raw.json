{
    "The URL or IP to connect to (a string, can be IPv4 or IPv6).":"要连接的 URL 或 IP(字符串，可以是 IPv4 或 IPv6)。",
    "The above code will send a raw UDP packet to the server defined by the URL on the port 6510. The data is taken from the buffer in the variable {}buff{}.":"上述代码将在端口 6510 上向 URL 定义的服务器发送原始 UDP 数据包。数据取自变量 {}buff{} 中的缓冲区。",
    "The above code will send a raw UDP packet to the server defined by the URL on the port 6510. The data is taken from the buffer indexed in the variable \"buff\".":"上述代码将向由端口6510上的URL定义的服务器发送原始UDP分组。数据取自变量\"buff\"中索引的缓冲区。",
    "The buffer to get the data from.":"从中获取数据的缓冲区。",
    "The data sent is not formatted by {}GameMaker{} in any way and the receiving devices will get the data as a stream which means you will have to handle it yourself.":"发送的数据不会被 {}GameMaker{} 以任何方式格式化，接收设备将以流的形式获取数据，这意味着您必须自己处理它。",
    "The function takes the&nbsp;{}{}Network Socket ID{}{} to connect through, the URL to connect to and the port to use. You must then supply the&nbsp;{}{}Buffer{}{} which contains the data to be sent (for more information on buffers see {}Reference - Buffers{}) and finally the size (in bytes) of the data. The function returns the number of bytes of data sent, or a number less than 0 if the send has failed.":"该函数采用要连接的 {}{} 网络套接字 ID{}{}、要连接的 URL 以及要使用的端口。然后，您必须提供包含要发送的数据的 {}{}Buffer{}{}( 有关缓冲区的更多信息，请参阅 {} 参考 - 缓冲区 {})，最后提供数据的大小 (以字节为单位)。该函数返回已发送数据的字节数，如果发送失败，则返回小于 0 的数字。",
    "The id of the buffer to get the data from.":"缓冲区的ID。",
    "The id of the socket to use.":"要使用的套接字的ID。",
    "The port to connect to.":"要连接到的端口。",
    "The size (in bytes) of the data.":"数据的大小(以字节表示)。",
    "The url or IP to connect to (a string).":"连接到(字符串)的url或IP。",
    "This function sends data over the network using UDP to a server.":"此函数使用 UDP 通过网络将数据发送到服务器。",
    "UDP is \"connectionless\" in that you don\u0027t actually do a connect, you just send a packet directly to an IP, and the server gets incoming data from an IP address and has to deal with it \"as is\".":"UDP 是 \" 无连接 \" 的，因为您实际上并不进行连接，您只是直接将数据包发送到 IP，服务器从 IP 地址获取传入数据，并且必须 \" 按原样 \" 处理它。",
    "With this function you can send data over the network using UDP to a server. The function takes the {}socket id{} to connect through, the URL to connect to and the port to use. You must then supply the {}buffer id{} which contains the data to be sent (for more information on buffers see {}Reference - Buffers{}) and finally the size (in bytes) of the data. UDP is \"connectionless\" in that you don\u0027t actually do a connect, you just send a packet directly to an IP, and the server gets incoming data from an IP address and has to deal with it \"as is\". The data sent is not formatted by {}GameMaker{} in any way and the receiving devices will get the data as a stream which means you will have to handle it yourself. The function will return the number of bytes of data sent, or a number less than 0 if the send has failed.":"使用此函数，您可以使用UDP通过网络将数据发送到服务器。此函数使用{}套接字ID{}进行连接，使用要连接的URL和要使用的端口。然后必须提供包含要发送的数据的{}缓冲区ID{}(有关缓冲区的详细信息，请参阅{}参考-缓冲区{})，最后是数据的大小(以字节为单位)。UDP是\"无连接\"的，因为你实际上没有进行连接，你只是直接发送一个数据包到一个IP，服务器从一个IP地址获得传入的数据，并且必须按原样处理它。\"{}GameMaker{}不会以任何方式对发送的数据进行格式化，接收设备将以流的形式获取数据，这意味着您必须自行处理这些数据。该函数将返回发送的数据的字节数，如果发送失败，则返回小于0的数字。",
    "{}NOTE{}&nbsp;This function will not work when used in a project running on the HTML5 target, and neither will HTML5 projects be able to receive UDP.":"{}注意{}在HTML5目标上运行的项目中使用此函数时将不起作用，HTML5项目也无法接收UDP。",
    "{}{}NOTE{}{}&nbsp;This function uses a UDP-like socket (i.e. {}network_socket_udp{}). It may work with other socket types as well, but this isn\u0027t guaranteed.":"{}{} 注意{}{} 此函数使用类似 UDP 的套接字 (即 {}network_socket_udp{})。它也可能适用于其他套接字类型，但这不能保证。"
}