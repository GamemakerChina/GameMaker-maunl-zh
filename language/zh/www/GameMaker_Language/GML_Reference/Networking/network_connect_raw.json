{
    "The URL or IP to connect to (a string).":"连接到(字符串)的URL或IP。",
    "The above code will create a new TCP socket then attempt to create a \"raw\" connection through that to the given URL on port 6510.":"上述代码将创建一个新的TCP套接字，然后尝试通过该套接字创建到端口6510上给定URL的\"原始\"连接。",
    "The id of the socket to use.":"要使用的套接字的ID。",
    "The port to connect to.":"要连接到的端口。",
    "With this function you can send a request to connect to a server. The function takes the {}socket id{} to connect through (see {}{}network_create_socket(){}{}) and requires you to give the IP address to connect to (a string) as well as the port to connect through, and if the connection fails a value of less than 0 will be returned. The difference between this function and {}{}network_connect(){}{} is that this function can connect to any server and does nothing to the raw data, meaning that you have to implement the protocols yourself at the server end. Note that by default the function is synchronous, meaning that your game may appear to \"hang\" as the connection is made. You can set a timeout value for connection, or alternatively make the creation asynchronous, using the function {}{}network_set_config(){}{}, or alternatively use the function {}{}network_connect_async_raw(){}{} instead.":"使用此函数，您可以发送连接到服务器的请求。该函数使用{}套接字ID{}进行连接(请参阅{}{}network_create_socket(){}{})，并要求您提供要连接的IP地址(字符串)以及要连接的端口，如果连接失败，将返回小于0的值。此函数与{}{}network_connect(){}{}的区别在于，此函数可以连接到任何服务器，而不会对原始数据执行任何操作，这意味着您必须在服务器端自行实施协议。请注意，默认情况下该函数是同步的，这意味着您的游戏可能会在建立连接时显示为\"挂起\"。您可以设置连接的超时值，或者使用函数{}{}network_set_config(){}{}异步创建，或者改用函数{}{}network_connect_async_raw(){}{}。",
    "With this function you can send a request to connect to a server. The function takes the {}socket id{} to connect through (see {}{}network_create_socket(){}{}) and requires you to give the IP address to connect to (a string, can be IPv4 or IPv6) as well as the port to connect through, and if the connection fails a value of less than 0 will be returned. The difference between this function and {}{}network_connect(){}{} is that this function can connect to any server and does nothing to the raw data, meaning that you have to implement the protocols yourself at the server end. Note that by default the function is synchronous, meaning that your game may appear to \"hang\" as the connection is made. You can set a timeout value for connection, or alternatively make the creation asynchronous, using the function {}{}network_set_config(){}{}, or alternatively use the function {}{}network_connect_async_raw(){}{} instead.":"使用此函数，您可以发送连接到服务器的请求。该函数使用{}套接字ID{}进行连接(请参阅{}{}network_create_socket(){}{})，并要求您提供要连接的 IP 地址(字符串，可以是 IPv4 或 IPv6) 以及要连接的端口，如果连接失败，将返回小于0的值。此函数与{}{}network_connect(){}{}的区别在于，此函数可以连接到任何服务器，而不会对原始数据执行任何操作，这意味着您必须在服务器端自行实施协议。请注意，默认情况下该函数是同步的，这意味着您的游戏可能会在建立连接时显示为\\\"挂起\\\"。您可以设置连接的超时值，或者使用函数{}{}network_set_config(){}{}异步创建，或者改用函数{}{}network_connect_async_raw(){}{}。",
    "{}NOTE{} You cannot use this function on HTML5. For WebSockets, use the {}Async function{}.":"{}注意{}您不能在HTML5上使用此函数。对于网络套接字，请使用{}异步函数{}。"
}