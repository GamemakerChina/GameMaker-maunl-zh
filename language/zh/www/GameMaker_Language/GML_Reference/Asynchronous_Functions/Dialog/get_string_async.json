{
    "The above code checks the \"id\" key of the returned {}DS Map{} against the value stored in the variable \"msg\". If they are the same, it then checks to see if \"Okay\" was pressed (rather than the window being closed/cancelled) and if it returns {}true{} it then checks the \"result\" of a string to make sure that no empty strings were returned before setting a global variable.":"上述代码根据变量“msg”中存储的值检查返回的 {}DS Map{} 的“id”键。 如果它们相同，它会检查是否按下了“确定”(而不是关闭/取消窗口)，如果返回 {}true{}，它会检查字符串的“result”以确保 在设置全局变量之前没有返回空字符串。",
    "The above will show a message requesting that the user input a string and press \"Okay\". The function id is stored in the variable \"msg\" and will be used in the asynchronous Dialogs event as shown below:":"上面将显示一条消息，要求用户输入一个字符串并按“确定”。 函数 id 存储在变量“msg”中，并将在异步 对话框事件中使用，如下所示：",
    "The default string.":"默认字符串。",
    "The message to show in the dialog.":"要在对话框中显示的消息。",
    "The {}left mouse press event{} (for example) of the object that is showing the message would have the following code:":"显示消息的对象的{}左鼠标按事件{}(例如)将具有以下代码:",
    "This function opens a window and displays message as well as a space for the user to input a string (which will contain the supplied default string to start with). This is an asynchronous function, and as such {}GameMaker{} does {}not{} block the device it is being run on while waiting for an answer, but rather keeps on running events as normal. Once the user has typed out their string and pressed the \"Okay\" button, an {}asynchronous Dialog event {}is triggered which, for the duration of that event {}only{}, will have a DS&nbsp;map stored in the variable {}{}async_load{}{}.":"此函数打开一个窗口并显示消息以及一个空间供用户输入字符串(它将包含提供的默认字符串作为开头)。 这是一个异步函数，因此 {}GameMaker{} 在等待答案时{}不会{}阻止运行它的设备，而是继续正常运行事件。 一旦用户键入他们的字符串并按下“Okay”按钮，就会触发一个{}异步对话事件{}，在该事件持续期间{}仅{}，变量中将存储一个 DS&nbsp;映射 {}{}async_load{}{}。",
    "This map will contain the three keys, \"{}id{}\", \"{}status{}\", and \"{}result{}\". \"id\" is the value that was returned by the function when called, the \"status\" will be either {}true{} for the \"Okay\" button being pressed, or {}false{} if the message was cancelled (where applicable as not all target platforms permit the message to be cancelled). Finally \"result\" will return the string that the user input (or an empty string \"\" if none was supplied).":"该映射将包含三个键，“{}id{}”、“{}status{}”和“{}result{}”。 “id”是函数在调用时返回的值，“status”对于按下“Okay”按钮为 {}true{}，如果消息被取消(如果适用)则为 {}false{} 因为并非所有目标平台都允许取消消息)。 最后“result”将返回用户输入的字符串(如果没有提供，则返回一个空字符串“”)。",
    "{}{}{}NOTE{}{}{}{}&nbsp;This function is&nbsp;{}for {}debugging and testing&nbsp;use only{} and should not be used in released games. For that purpose you should create a custom user interface&nbsp;to receive input from players so that you have complete control over how the dialogs look and behave.{}{}":"{}{}{}注意{}{}{}{}&nbsp;此函数&nbsp;{}仅供{}调试和测试&nbsp;使用{}，不应在已发布的游戏中使用。 为此，您应该创建一个自定义用户界面&nbsp;以接收玩家的输入，以便您可以完全控制对话框的外观和行为。{}{}"
}