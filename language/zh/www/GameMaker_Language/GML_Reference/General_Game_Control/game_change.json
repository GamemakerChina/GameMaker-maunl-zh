{
    "All saves, achievements, etc. will be done under the title ID set by the launcher project.":"所有保存、成就等都将在启动器项目设置的标题 ID 下完成。",
    "As this function {}ends the current game before launching the new&nbsp;one{}, the {}Game End event{} is triggered for the current game and the {}Game Start event{} is triggered for the game that is being launched.":"由于此函数 {} 在启动新游戏之前结束当前游戏 {}，因此会为当前游戏触发 {}Game End 事件 {}，并为正在启动的游戏触发 {}Game Start 事件 {}。",
    "Each of the games to be launched by the main game should be included in a subdirectory of the&nbsp;{}Included Files{}: the game\u0027s&nbsp;{}data.win{} file and other external included files should go into this folder. This folder structure could look as follows (essentially a copy of the contents in the final game\u0027s directory, without the executable file):&nbsp; {} {}game1 {} {}game1.win{} {}bgm_groovy.ogg{} {}texgroup1_0.yytex{} {}options.ini{} {} {} {}game2 {} {}game2.win{} {}game_data.json{} {}options.ini{} {} {} {}...{} {} ":"由主游戏启动的每个游戏都应包含在 {} 包含文件 {} 的子目录中：游戏的 {}data.win{} 文件和其他外部包含文件应放入此文件夹中。此文件夹结构可能如下所示 (本质上是最终游戏目录中内容的副本，不含可执行文件)：{}{}game1{}{}game1.win{}{}bgm_groovy.ogg{}{}texgroup1_0 .yytex{}{}options.ini{}{}{}{}game2{}{}game2.win{}{}game_data.json{}{}options.ini{}{}{}{}...{}{}",
    "It allows you to have a main game from which you can launch other games that you keep in a different {}GameMaker{}&nbsp;project. The function can be called again in the launched game to return back to the main game.":"它允许您拥有一个主游戏，您可以从中启动您保留在不同 {}GameMaker{} 项目中的其他游戏。可以在已启动的游戏中再次调用该函数以返回主游戏。",
    "The above code runs from the launcher game and launches the \"Chapter 3\" game, which is stored in a subdirectory {}\"chapter3\"{}&nbsp; under {}Included Files{}.":"上述代码从启动器游戏运行并启动 \"Chapter 3\" 游戏，该游戏存储在 {} 包含文件 {} 下的子目录 {0} \"chapter3\"{1} 中。",
    "The code above runs from a game that was launched from the launcher game and returns to the main/launcher game. The double dots {}..{} indicate that the game\u0027s working directory is one above the current working directory.":"上面的代码从从启动器游戏启动的游戏运行并返回到主 / 启动器游戏。双点 {}..{} 表示游戏的工作目录是当前工作目录的上一级。",
    "The command-line parameters to pass to the game to be launched":"传递给要启动的游戏的命令行参数",
    "The function is supported&nbsp;on the Windows, macOS, PS4, PS5 and Switch&nbsp;platforms.":"该功能支持 Windows、macOS、PS4、PS5 和 Switch 平台。",
    "The working directory of the game to be launched":"要启动的游戏的工作目录",
    "This function ends the current game and launches another game that\u0027s included in the&nbsp;{}Included Files{}.":"此函数会结束当前游戏并启动 {} 包含文件 {} 中包含的另一个游戏。",
    "This function only works on certain platforms, and on some platforms it will only work in a packaged build.":"此功能仅适用于某些平台，并且在某些平台上它仅适用于打包版本。",
    "Usage Notes":"使用说明",
    "{}Argument Values Per Platform{}{}Argument Values Per Platform{}":"{} 每个平台的参数值 {}{} 每个平台的参数值 {}",
    "{}The table below provides an example of the working directory and launch parameters to be provided on each of the supported platforms:&nbsp;{}":"{} 下表提供了每个受支持平台上提供的工作目录和启动参数的示例：{}",
    "{}{}IMPORTANT{}{}&nbsp;This function only works in {}VM{} builds.":"{}{} 重要信息{}{} 此函数仅适用于 {}VM{} 版本。",
    "{}{}IMPORTANT{}{}&nbsp;{}GameMaker{}&nbsp;names the {}.win{} file differently depending on whether your game is running from the IDE&nbsp;or from the final executable (created using {}Create Executable{}&nbsp;in {}The Build Menu{}). When running from the IDE the name will be&nbsp;{}$\"{game_project_name}.win\"{}, if not it will be&nbsp;{}\"data.win\"{}. You should always make sure to refer to the right name,&nbsp;e.g. by setting up a different&nbsp;{}configuration{}.":"{}{} 重要信息{}{} {}GameMaker{} 对 {}.win{} 文件的命名有所不同，具体取决于您的游戏是从 IDE 运行还是从最终可执行文件 (使用中的 {} 创建可执行文件 {}  {} 创建) 运行} 构建菜单 {})。从 IDE 运行时，名称将为 {}$\"{game_project_name}.win\"{}，否则名称将为 {}\"data.win\"{}。您应该始终确保引用正确的名称，例如通过设置不同的 {} 配置 {}。",
    "{}{}NOTE{}{}&nbsp;Since the child games\u0027 external files are included in the main game\u0027s {}datafiles{}, they can be accessed from the main game as well.":"{}{} 注意{}{} 由于子游戏的外部文件包含在主游戏的 {} 数据文件 {} 中，因此也可以从主游戏访问它们。"
}