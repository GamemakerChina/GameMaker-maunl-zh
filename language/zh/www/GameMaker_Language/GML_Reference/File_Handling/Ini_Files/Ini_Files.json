{
    "INI files are small, lightweight files which are compatible with most platforms. They are ideal for storing {}small{} pieces of information, like interface preferences, local high scores, level data etc... and as such are a great and easy way for you to start saving information from your games. If you are looking for more advanced ways to save information to files, you may wish to look at some of the other file functions like {}Text Files{},&nbsp;{}Binary Files{}&nbsp;and&nbsp;{}Buffers{}.":"INI 文件是小型、轻量级的文件，与大多数平台兼容。它们非常适合存储{}小{}块的信息，如界面偏好、本地高分、关卡数据等。这是你开始保存游戏信息的一种有效且简单的方法。如果您正在寻找将信息保存到文件的更高级的方法，您可能希望看看其他一些文件函数，如{}文本文件{}，{}二进制文件{}和{}缓存{}。",
    "Please note that for games with localizations it is very important that accented letters can be read from external files. This means that you should create the ini file in {}UTF8{} format {}first{} and then add it into {}GameMaker{} as an included file so that it is exported on running the game and used instead of the default ANSI format ini file that is created by the ini functions when none has been previously supplied. In this way, you can read and write to it correctly with all accents and non-Roman letters being maintained.":"请注意，对于具有本地化的游戏，重音字母可以从外部文件读取是非常重要的。这意味着您应该以 {}UTF8{} 格式 {} 首先 {} 创建 ini 文件，然后将其作为一个包含文件添加到 {}GameMaker{} 中，以便在运行游戏时导出该文件，并使用该文件代替 ini 函数创建的默认 ANSI 格式 ini 文件。通过这种方式，您可以正确地读写它，同时保留所有重音符号和非罗马字母。",
    "The following functions exist for ini files:":"ini 文件有以下函数:",
    "{}IMPORTANT!{} All {}GameMaker{} projects have a file called \"{}{}options.ini{}{}\", so you {}cannot{} name any file with that name (you will get a uid failure when you try to compile your game project).":"{} 重要！{} 所有 {} GameMaker {} 项目都有一个名为 \"{}{}options.ini{}{}\" 的文件，因此您 {} 不能 {} 命名任何具有该名称的文件 (当您尝试编译游戏项目时，您将得到一个 uid 失败)。",
    "{}Ini Files{}":"{}ini 文件{}"
}