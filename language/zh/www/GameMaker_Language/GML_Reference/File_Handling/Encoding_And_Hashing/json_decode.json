{
    "A collection of name/value pairs, called a {}{}DS Map{}{} in {}GameMaker{} but also known as a \"dictionary\" or \"object\".":"名称/值对的集合，在{4} GameMaker {5}中称为{}{} DS Map {}{} ，但在其他编程语言中也称为“字典”或“对象”（\"dictionary\" or \"object\"）。",
    "An ordered list of values, called a {}{}DS List{}{} in {}GameMaker{} but this can also be called an \"array\" or \"sequence\".":"一个有序的值列表，在{6} GameMaker {7}中称为{}{} DS {}{} List {} {}，但在其他编程语言中也可以称为“数组”或“序列”（\"array\" or \"sequence\"）。",
    "JSON (JavaScript Object Notation) is a lightweight data-interchange format which is easy for to read and write, for both people and machines. It is built on two basic structures:":"JSON (JSON)是一种轻量级的数据交换格式，对于人和机器来说，都很容易读写。它建立在两个基本结构之上:",
    "Normally you would know what keys the JSON decodes to, but if not then you can use the {}{}ds_map_size(){}{}, {}{}ds_map_find_first(){}{} and {}{}ds_map_find_next(){}{} functions to parse the map and get the necessary information.":"通常情况下，您应该知道JSON解码到什么键，但如果不知道，则可以使用{}{}ds_map_size(){}{}， {}{}ds_map_find_first(){}{}和{}{}ds_map_find_next(){}{}函数来解析映射并获得必要的信息。",
    "The JSON format string that you are passing to the function for decoding":"要传递给函数进行解码的 JSON 格式字符串",
    "The above code will decode a JSON string and parse it to generate a global array.":"上面的代码将解码一个 JSON 字符串并解析它以生成一个全局数组。",
    "With this function, you can decode a piece of JSON and convert it into a {}DS Map{}, ready for use in {}GameMaker{}. If the JSON to be decoded requires a hierarchy of lists and maps within the central DS map, these are decoded too and also created for you, using the following rules (note that these rules apply to the top-level structure only):":"通过这个函数，你可以解码一段JSON并将其转换为{}DS Map{}，准备在{}GameMaker{}中使用。如果要解码的JSON需要在中央DS映射中有一个列表和映射的层次结构，这些也会被解码并创建，使用以下规则(注意这些规则只适用于顶层结构):",
    "{}IMPORTANT!{}&nbsp;This function -&nbsp;while still valid -&nbsp;has been superseded by the function {}{}json_parse(){}{}, and we recommend that you only use this function for legacy support.":"{}重要!{}这个函数- 虽然仍然有效- 已经被函数{}{}json_parse(){}{}所取代，我们建议您只在遗留支持中使用这个函数。",
    "{}IMPORTANT{}: You cannot have 64bit numbers in your JSON, as they will not work correctly due them not being handled by the JSON format.":"{}重要{}:你的JSON中不能有64位的数字，因为它们不能正常工作，因为它们没有被JSON格式处理。",
    "{}NOTE{}: If you wrote GameMaker arrays into the top level, or as the contents of a DS map or DS list, these will be decoded as DS lists,&nbsp;{}not{}&nbsp;arrays.":"{}注意{}:如果你将GameMaker数组写入顶层，或者作为DS映射或DS列表的内容，这些将被解码为DS列表{}而不是{}数组。",
    "{}NOTE{}: This function allows you to load JSON files with a maximum nesting limit of 128.":"{}注意{}:这个函数允许你加载最大嵌套限制为128的JSON文件。",
    "{}NOTE{}: When decoding JSON arrays, there is a map with the key \"default\" ONLY when an array is the top level structure, and ONLY for that top-level array. Internal lists decode directly to DS map without being enclosed in a DS map.":"{}注意{}：解码 JSON 数组时，只有当数组是顶级结构时，才会有键为“default”的映射，并且仅适用于该顶级数组。 内部列表直接解码为 DS 映射，而无需包含在 DS 映射中。",
    "{}NOTE{}: {}GameMaker{} creates the necessary DS&nbsp;maps and lists from the JSON, and for cleaning up you only need to delete the {}top level{} map or list and {}GameMaker{} will automatically delete from memory all the maps and lists underneath.":"{}注意{}:{}GameMaker{}从JSON中创建必要的DS&nbsp;映射和列表，为了清理，你只需要删除{}顶层的{}映射或列表，{}GameMaker{}将自动从内存中删除下面所有的映射和列表。",
    "{}{}JSON is an array of objects or values{}{} - returns a DS map with a single entry \"default\" that is a DS list of the objects or values":"{}{}JSON是一个对象或值的数组{}{}返回一个DS映射，其中只有一个条目“default”，即对象或值的DS列表",
    "{}{}JSON&nbsp;is a single value{}{} - returns a DS map with a single entry \"default\" that is the value":"{}{}JSON是单个值{}{} - 返回一个 DS 映射，其中单个条目“默认”是该值",
    "{}{}JSON&nbsp;is an object{}{} - returns a DS map that has the object entries in it":"{}{}JSON 是一个对象{}{}-返回一个DS映射，其中包含对象条目"
}