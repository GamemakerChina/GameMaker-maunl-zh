{
    "A collection of name/value pairs, called a {}{}DS Map{}{} in {}GameMaker{} but also known as a \"dictionary\" or \"object\" in other programming languages.":"名称/值对的集合，在{4} GameMaker {5}中称为{}{} DS Map {}{} ，但在其他编程语言中也称为“字典”或“对象”（\"dictionary\" or \"object\"）。",
    "An ordered list of values, called a {}{}DS {}{}List{}{} in {}GameMaker{} but this can also be called an \"array\" or \"sequence\" in other programming languages.":"一个有序的值列表，在{6} GameMaker {7}中称为{}{} DS {}{} List {} {}，但在其他编程语言中也可以称为“数组”或“序列”（\"array\" or \"sequence\"）。",
    "JSON (JavaScript Object Notation) is a lightweight data-interchange format which is easy for to read and write, for both people and machines. It is built on two basic structures:":"JSON (JSON)是一种轻量级的数据交换格式，对于人和机器来说，都很容易读写。它建立在两个基本结构之上:",
    "Note that care should be taken when writing JSON to an ini file, as the ini specifications can cause issues when using quotes and escape characters. See the function {}{}ini_write_string(){}{} for more information. Also note that if you encode an int64 to JSON it will write it as an {}int{} if it is in the valid range for an int32, as a {}double{} if it can do so without losing precision or (if neither of those cases is applicable) as a {}string{} with an identifier \"{}@i64@{}\" before it and \"{}$i64${}\" after it. When you come to decode the JSON to a map again {}GameMaker{} will pick these identifiers up and re-convert the value to an int64. This does mean that if the JSON is intended for a server or some other non-GameMaker target, these values will not be appropriate and so should be avoided.":"请注意，将 JSON 写入 ini 文件时应小心，因为 ini 规范在使用引号和转义字符时可能会导致问题。 有关详细信息，请参阅函数 {}{}ini_write_string(){}{}。 另请注意，如果您将 int64 编码为 JSON，如果它在 int32 的有效范围内，它会将其写为 {}int{}，如果它可以在不丢失精度的情况下写为 {}double{}，或者（如果 这些情况都不适用）作为{}字符串{}，其前面有标识符“{}@i64@{}”，后面有“{}$i64${}”。 当您再次将 JSON 解码为地图时，{}GameMaker{} 将选取这些标识符并将值重新转换为 int64。 这确实意味着如果 JSON 用于服务器或其他一些非 GameMaker 目标，则这些值将不合适，因此应避免使用。",
    "The above code creates a DS map and then loops through the name and score arrays, adding each key/value pair to the new map. Next, this map is encoded using {}json_encode(){} and stored as a string in the variable \"str\". This string is then sent to a web server using {}http_post_string(){} and the DS&nbsp;map is destroyed to prevent a memory leak as it is no-longer needed.":"上面的代码创建了一个 DS 映射，然后遍历 name 和 score 数组，将每个键/值对添加到新映射中。 接下来，使用 {}json_encode(){} 对该地图进行编码，并将其作为字符串存储在变量“str”中。 然后使用 {}http_post_string(){} 将此字符串发送到网络服务器，并销毁 DS&nbsp;map 以防止内存泄漏，因为不再需要它。",
    "{}IMPORTANT!{}&nbsp;JSON is agnostic about numbers. In any programming language, there can be a variety of number types of various capacities and complements, fixed or floating, binary or decimal. That can make interchange between different programming languages difficult. JSON instead offers only the representation of numbers that humans use: a sequence of digits. All programming languages know how to make sense of digit sequences even if they disagree on internal representations. For more information see the {}ECMA JSON Standard{}.":"{}重要提示！{}JSON 与数字无关。 在任何编程语言中，都可以有各种容量和补码的多种数字类型，固定的或浮动的，二进制的或十进制的。 这会使不同编程语言之间的交流变得困难。 相反，JSON 仅提供人类使用的数字表示：数字序列。 所有编程语言都知道如何理解数字序列，即使它们在内部表示上存在分歧。 如需了解详细信息，请参阅 {}ECMA JSON 标准{}。",
    "{}IMPORTANT!{}&nbsp;This function -&nbsp;while still valid -&nbsp;has been superseded by the function {}{}json_stringify(){}{}, and we recommend that you only use this function for legacy support.":"{}重要提示！{}此函数 -虽然仍然有效 -已被函数 {}{}json_stringify(){}{} 取代，我们仅建议您将此函数用于旧版支持。",
    "{}NOTE{}: The hierarchical functionality of JSON is available through special DS map&nbsp;and DS list functions (for example {}{}ds_map_add_list(){}{}&nbsp;or {}{}ds_list_mark_as_map(){}{}), so you are able to encode sub-lists and maps.":"{}注意{}：JSON 的分层功能可通过特殊的 DS 映射和 DS 列表函数（例如 {}{}ds_map_add_list(){}{}或 {}{}ds_list_mark_as_map(){}{} )，因此您可以对子列表和映射进行编码。",
    "{}json_encode(){}&nbsp;takes a DS map or array that you have previously created and encodes it as a JSON string which you can then use as (for example) part of an {}{}http_post_string(){}{} call, or - so it can be stored externally - it can be written to a file. If using an array as the top level structure, then the array can only contain valid values or other arrays, and&nbsp;{}not{}&nbsp;data structures. For that you should use the appropriate DS functions.":"{}json_encode(){}获取您之前创建的 DS 映射或数组并将其编码为 JSON 字符串，然后您可以将其用作（例如）{}{}http_post_string(){}{}的一部分 调用，或者 - 所以它可以存储在外部 - 它可以写入文件。 如果使用数组作为顶级结构，则该数组只能包含有效值或其他数组，并且{}不是{}数据结构。 为此，您应该使用适当的 DS 函数。"
}