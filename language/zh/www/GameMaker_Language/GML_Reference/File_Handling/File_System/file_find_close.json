{
    "The above code creates an empty array to store all the file names that were found, and starts looking for read only {}.doc{} files. If that file name is not an empty string, it pushes it into the {}files{} array, and then attempts to find the next file. The loop will keep repeating until an empty string is found (meaning there are no more matching files), which is when it ends the loop and closes the file finder at the end.":"上面的代码创建一个空数组来存储找到的所有文件名，并开始查找只读的.doc文件。<br>\n如果该文件名不是空字符串，则将其推入files数组，然后尝试查找下一个文件。<br>\n循环将继续重复，直到找到一个空字符串(意味着没有更多匹配的文件)，这时循环结束并在结束时关闭文件查找器。",
    "This code checks if the specified directory exists and&nbsp;if it does, goes there and returns the first \"read only\" {}.doc{} file found. It then looks for two more files and closes the file finder.":"这段代码检查指定的目录是否存在，如果存在 & nbsp; 则返回找到的第一个“只读”{}.doc{} 文件。然后查找另外两个文件并关闭文件查找器。",
    "This function must be called after handling files opened using {}{}file_find_first(){}{} and {}{}file_find_next(){}{} functions to free memory. The file find functions open handles into the file directory and these take up a minimal amount of memory, which (over time) adds up. Therefore you should always call this function after you have found the files you require to \"close\" these handles.":"该函数必须在处理使用 {}{}file_find_first(){}{} 和 {}{}file_find_next(){}{} 函数打开的文件后调用，以释放内存。<br>\n文件查找函数打开文件目录中的句柄，这些句柄只占用最小的内存量，随着时间的推移，这些句柄会增加。<br>\n因此，您应该总是在找到所需的文件后调用此函数来“关闭”这些句柄。",
    "You can look for any number of&nbsp;files using a {}while{}&nbsp;loop:":"你可以使用 {}while{}&nbsp; 循环查找任意数量的文件:"
}