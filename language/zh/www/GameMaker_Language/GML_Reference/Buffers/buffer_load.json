{
    "It returns a new buffer which is created by the function as a \"grow\" buffer (see {}here{}) with a byte alignment of 1. The buffer should be stored in a variable and used in all further function calls to this buffer. If the load fails for whatever reason, the function will return {}-1{} and a message will be shown in the compiler output window saying that the load has failed.":"它返回一个由函数创建的新缓冲区，作为字节对齐为 1 的 \" 增长 \" 缓冲区 (请参阅 {} 此处 {})。该缓冲区应存储在变量中，并在对此缓冲区的所有进一步函数调用中使用。如果由于某种原因加载失败，该函数将返回 {}-1{}，并且编译器输出窗口中将显示一条消息，指出加载失败。",
    "On HTML5, all Included Files are stored as UTF-8 encoded text, which may result in an increase in the size of the loaded buffer when compared to the original file, as the UTF-8 encoded version of the file may have a different size than your original one (due to the change in format).":"在HTML5上，所有包含的文件都存储为UTF-8编码文本，这可能导致与原始文件相比加载的缓冲区的大小增加，因为UTF-8编码版本的文件可能具有与原始文件不同的大小(由于格式改变)。",
    "On HTML5, any buffers loaded from the {}local storage{} will be decoded using base64 (since they are saved as base64 strings), however, using this function on Included Files or any external files will not use base64 decoding, as they are not expected to be in a base64 format.":"在 HTML5 上，从{}本地存储{}加载的任何缓冲区都将使用 base64 进行解码(因为它们被保存为 base64 字符串)，但是，在包含的文件或任何外部文件上使用此函数将不会使用 base64 解码，因为它们预期不会采用 base64 格式。",
    "Platform-specific notes":"平台专用注释",
    "The above code loads a previously saved buffer into memory, creating a new buffer. It is stored in a variable {}player_buffer{}.":"上面的代码将先前保存的缓冲区加载到内存中，创建一个新的缓冲区。它存储在变量 {}player_buffer{} 中。",
    "The above code will load a previously saved buffer into memory, creating a new buffer. The index of this new buffer is stored in the variable \"player_buffer\".":"上面的代码将把以前保存的缓冲区加载到内存中， 创建一个新的缓冲区。此新缓冲区的索引存储在变量\"player_buffer\"中。",
    "The name of the file to load from.":"要从中加载的文件名。",
    "This function is used to load a buffer that was previously saved using the {}{}buffer_save(){}{} functions, as well as any {}Included Files{} or files loaded externally. It will return a new buffer\u0027s ID which is created by the function as a \"grow\" buffer (see {}here{}) with a byte alignment of 1. This ID should be stored in a variable and used in all further function calls to this buffer. If the load fails for whatever reason, the function will return -1 and a message will be shown in the compiler output window saying that the load has failed.":"此函数用于加载以前使用{}{}buffer_save(){}{}函数保存的缓冲区，以及任何{}包含的文件{}或外部加载的文件。它将返回由函数创建的新缓冲区ID，作为字节对齐为1的\"grow\"缓冲区(请参见{}此处{})。此 ID 应存储在变量中，并用于对此缓冲区的所有进一步函数调用中。如果由于任何原因加载失败，函数将返回-1，编译器输出窗口中将显示一条消息，说明加载已失败。",
    "This function loads a buffer that was previously saved using the&nbsp;{}{}buffer_save{}{} functions, as well as any&nbsp;{}Included Files{} or other files stored externally.":"此函数加载之前使用 {}{}buffer_save{}{} 函数保存的缓冲区，以及任何 {} 包含文件 {} 或外部存储的其他文件。",
    "{}NOTE{}&nbsp;It\u0027s important that you remove any dynamically created resources like this from memory when you no longer need them to prevent memory leaks, so when you are finished with the buffer that you have created you should free it up again using {}{}buffer_delete(){}{}.":"{}注意{}当您不再需要任何动态创建的资源以防止内存泄漏时，从内存中删除这些资源是很重要的，因此当您完成创建的缓冲区后，应使用{}{}buffer_delete(){}{}再次释放这些资源。",
    "{}{}NOTE{}{}&nbsp;It\u0027s important that you remove any dynamically created resources like this from memory when you no longer need them to prevent memory leaks, so when you are finished with the buffer that you have created you should free it up again using {}{}buffer_delete{}{}.":"{}{} 注意{}{} 当您不再需要此类动态创建的资源时，请务必将其从内存中删除，以防止内存泄漏，因此当您使用完创建的缓冲区后，应将其释放再次使用 {}{}buffer_delete{}{}。"
}