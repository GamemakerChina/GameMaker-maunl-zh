{
    "A reference to a&nbsp;{}{}Function{}{}&nbsp;or&nbsp;{}{}Script Function{}{} created using&nbsp;{}{}ref_create{}{}&nbsp;or a function":"对使用{}{}ref_create{}{}创建的{}{}函数{}{}或{}{}脚本函数{}{}的引用或函数",
    "A {}{}Function{}{}&nbsp;or&nbsp;{}{}Script Function{}{}&nbsp;or a reference to one (created with&nbsp;{}{}ref_create{}{})":"{}{} 函数 {}{} 或 {}{} 脚本函数 {}{} 或对其中之一的引用 (使用 {}{}ref_create{}{} 创建)",
    "First, a script function is defined in a script asset as well as a method in an object\u0027s Create event. Then, also in the Create event, various references to the script function and to the method are created. Note that in case of {}ref_to_script_function{}, you can change the function to be executed by simply assigning a new value to the instance variable {}func{}. After that, two sections are added to the debug overlay. Several buttons are added to the first section, where each of them calls the script function or the method through a different path. One more button is added to the second section. Clicking this button executes the built-in function&nbsp;{}{}game_end{}{}, which can be called because it takes no (mandatory) arguments.":"首先，在脚本资源中定义脚本函数，并在对象的 Create 事件中定义方法。然后，也在 Create 事件中创建对脚本函数和方法的各种引用。请注意，对于 {}ref_to_script_function{}，您只需为实例变量 {}func{} 分配新值即可更改要执行的函数。之后，将两个部分添加到调试覆盖层中。第一部分添加了几个按钮，其中每个按钮都通过不同的路径调用脚本函数或方法。第二部分中又添加了一个按钮。单击此按钮将执行内置函数 {}{}game_end{}{}，该函数可以被调用，因为它不带 (强制) 参数。",
    "The above code creates a button control in an&nbsp;{}object{}\u0027s Create event using&nbsp;{}{}dbg_button{}{}. Since no calls are made to&nbsp;{}{}dbg_view{}{}&nbsp;or&nbsp;{}{}dbg_section{}{}, the button is added to a new debug section named&nbsp;{}\"Default\"{}&nbsp;in a new debug view named&nbsp;{}\"Default\"{}. Clicking the button calls a function that shows a debug message using&nbsp;{}{}show_debug_message{}{}.":"上面的代码使用{}{}dbg_button{}{}在{0}对象{1}的创建事件中创建按钮控件。由于没有调用&nbsp;{}{}dbg_view{}{}&nbsp;或&nbsp;{}{}dbg_section{}{}，按钮被添加到名为&nbsp;{}“Default”{}的新调试视图中名为&nbsp;{}“Default”{}的新调试部分中。单击该按钮将调用一个函数，该函数使用&nbsp;{}{}show_debug_message{}{}显示调试消息。",
    "The code example above shows a variety of ways to add button controls that execute functions to the debug overlay.":"上面的代码示例显示了向调试覆盖层添加执行功能的按钮控件的多种方法。",
    "The current debug section is the&nbsp;one last created using&nbsp;{}{}dbg_section{}{}.":"当前调试节是上次使用{}{}dbg_section{}{}创建的调试节。",
    "The text label to show next to the button":"按钮旁边显示的文本标签",
    "This function creates a button control within the current debug section. Clicking the button executes a {}{}Function{}{}.":"此函数在当前调试部分中创建一个按钮控件。单击按钮执行{}{}函数{}{}。",
    "When the code has executed,&nbsp;{}The Debug Overlay{}&nbsp;is shown as any call to&nbsp;the {}dbg_*{} functions will bring up the overlay.":"代码执行后，会显示 {} 调试叠加层 {}，因为对 {}dbg_*{} 函数的任何调用都会调出叠加层。",
    "{}{}NOTE{}{}&nbsp;This control takes up a single column and can be shown&nbsp;on the same line with another single-column control using&nbsp;{}{}dbg_same_line{}{}.":"{}{}注意{}{}此控件占用一列，可以使用{}{}dbg_same_line{}{}与另一个单列控件显示在同一行上。",
    "{}{}OPTIONAL{}{}&nbsp;The height&nbsp;of the button in pixels":"{}{}可选{}{}按钮的高度(像素)",
    "{}{}OPTIONAL{}{}&nbsp;The width&nbsp;of the button in pixels":"{}{}可选{}{}按钮的宽度(以像素为单位)"
}