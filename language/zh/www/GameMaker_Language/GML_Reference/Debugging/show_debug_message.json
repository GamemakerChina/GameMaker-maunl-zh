{
    "Debug messages shown with this function will be shown in the {}Compiler Output Window{} at the bottom of the IDE as well as in the {}Graph View{} of the debugger when running the game in Debug Mode. If you only want to see messages in Debug Mode then you should probably be using {}{}debug_event(){}{} instead.":"在调试模式下运行游戏时，使用此函数显示的调试消息将显示在IDE底部的{}编译器输出窗口{}以及调试器的{}图形视图{}中。如果您只想在调试模式下查看消息，那么您可能应该使用{}{}debug_event(){}{}。",
    "The above code checks to see if an instance exists and if it does not, a debug message is shown in the compile window and the game is ended.":"上面的代码检查实例是否存在，如果不存在，则在编译窗口中显示调试消息并结束游戏。",
    "The custom debug message to show.":"要显示的自定义调试消息。",
    "This function will create a custom debug message that is shown in the compiler window at runtime. Note that the message can be {}either{} a string or a real number, but if you need both then the number will have to be converted to string first using the {}{}string(){}{} function (see the example below) and that if the number has more than two decimal places then you should use {}{}string_format(){}{} to show them as by default decimals are rounded to the nearest two decimal places (so \"1.2468\" would show as \"1.25\" in the output window).":"此函数将创建自定义调试消息，该消息在运行时显示在编译器窗口中。请注意，消息可以是字符串{}或{}实数，但是如果你同时需要两者，则必须先使用{}{}string(){}{}函数将数字转换为字符串(参见下面的示例)，如果数字小数超过两位，则应使用{}{}string_format(){}{}来显示它们，因为默认情况下，小数四舍五入到最接近的小数点后两位(因此 \"1.2468\" 将在输出窗口中显示为 \"1.25\")。"
}