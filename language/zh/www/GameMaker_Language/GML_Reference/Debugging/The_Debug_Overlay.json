{
    "A custom{} {}debug view is created using&nbsp;{}{}dbg_view{}{}:":"创建自定义{}{}调试视图，使用{}{}dbg_view{}{}：",
    "A simple command looks like this:&nbsp;":"一个简单的命令看起来像这样：",
    "All debug messages that you show using {}{}show_debug_message{}{}&nbsp;and {}{}show_debug_message_ext{}{}&nbsp;are also shown here.":"使用{}{}show_debug_message{}{}和{}{}show_debug_message_ext{}{}显示的所有调试消息也显示在此处。",
    "All subsequent words following the first word are converted into values that are passed as arguments to the function, as follows:&nbsp;":"第一个单词之后的所有后续单词都将转换为作为参数传递给函数的值，如下所示：",
    "All windows of the Debug Overlay can be dragged by clicking and holding&nbsp;{}{}{}&nbsp;on the title bar or by performing the same action anywhere else on empty window space.":"通过在标题栏上单击并按住 {}{}{}，或在空白窗口空间的任何其他位置执行相同的操作，可以拖动 \" 窗口覆盖 \" 的所有窗口。",
    "Any text surrounded by double quotes {}\"\"{} is treated as a string":"任何用双引号{}\"\"{}括起来的文本都被视为字符串",
    "Anything else not following the above rule is treated as a string":"不遵循上述规则的任何其他内容都被视为字符串",
    "Clicking&nbsp;{}{}{}&nbsp;on the title bar and dragging the window allows you to \"dock\" the window to other windows in a variety of ways:&nbsp;":"单击标题栏上的 {}{}{} 并拖动窗口，您可以通过多种方式将窗口 \" 停靠 \" 到其他窗口：",
    "Controls":"控制 Controls",
    "Creating Debug Views":"创建调试视图",
    "DebugView":"调试视图",
    "Dock it as a tabbed window without splitting the other window.":"将其停靠为选项卡式窗口，而无需拆分其他窗口。",
    "Dock it while splitting the other window in half.":"将其停靠，同时将另一个窗口分成两半。",
    "Drag the {}Texture Index{} slider to select the texture. For every texture, the following information is shown:&nbsp;":"拖动 {} 纹理索引 {} 滑块以选择纹理。对于每个纹理，都会显示以下信息：",
    "Dragging and Docking Windows":"拖动和对接窗口",
    "Each menu item shows the name of the debug view with a check mark on the right if the view is set to be visible. Clicking the menu item toggles the visibility of this debug view.":"如果视图设置为可见，则每个菜单项都会显示调试视图的名称，并在右侧显示一个复选标记。单击菜单项可切换此调试视图的可见性。",
    "Enable the {}Stacked{}&nbsp;option to display the time values for specific types of processing that {}GameMaker{}&nbsp;does:&nbsp;":"启用 {}堆叠 Stacked{}选项可显示{}GameMaker{}执行的特定处理类型的时间值：",
    "Finally, you can {}Clear{} the output and {}Copy{} its contents to the clipboard.":"最后，您可以{}清除{}输出并{}将其内容复制{}到剪贴板。",
    "First it tries to interpret it as a global scope value, if one is found, it is passed in as an argument":"首先，它试图将其解释为一个全局范围值，如果找到一个，则将其作为参数传入",
    "Function Reference":"函数参考 Function Reference",
    "General":"常规",
    "If it is a number then a real number is passed":"如果它是一个数字，则传递一个实数（real）",
    "If it is an asset name then the reference to that asset is passed":"如果是资产名称，则传递对该资产的引用",
    "If the first word is a built-in variable, then its value is printed.":"如果第一个词是一个内置变量，则打印其值。",
    "If the first word is a global function, then it will be executed with the arguments given.":"如果第一个词是一个全局函数，那么它将使用给定的参数执行。",
    "Inside this window, you have two sections: a graph and a bar.":"在此窗口中，您有两个部分：一个图表和一个条形图。",
    "It includes the following three windows by default:&nbsp;{}FPS{}&nbsp;(open by default),&nbsp;{}Log{}, and {}Audio{}. Additionally,&nbsp;it displays the {}GameMaker{}&nbsp;version in the top-right corner, along with the version and name of the project.":"默认情况下，它包括以下三个窗口：{}FPS(帧数){}(默认打开)、{}Log(日志){}和{}Audio(音频){}。此外，它还在右上角显示{}GameMaker{}版本，以及项目的版本和名称。",
    "It shows the textures generated by&nbsp;{}GameMaker{}&nbsp;for&nbsp;all {}Texture Groups{}, as well as couple of other textures, such as the fallback texture. Custom&nbsp;{}Surfaces{}&nbsp;that you create as well as the&nbsp;{}{}application_surface{}{}&nbsp;are also shown here.":"它显示了 {}GameMaker{} 为所有 {} 纹理组 {} 生成的纹理，以及一些其他纹理，例如后备纹理。您创建的自定义 {} 表面 {} 以及 {}{}application_surface{}{} 也显示在此处。",
    "Keyboard &amp; Mouse":"键盘 和 鼠标",
    "Keyboard &amp; Mouse Events":"键盘 和 鼠标事件",
    "References can be created to all kinds of variables. Each control supports a reference to one or more datatypes.":"可以创建对所有类型变量的引用。每个控件支持对一个或多个数据类型的引用。",
    "See the {}ImGUI&nbsp;documentation on Docking{} for more information.":"如需了解更多信息，请参阅 {} 有关对接的 ImGUI 文档{}。",
    "System":"系统 System",
    "Texture":"纹理",
    "The above lines of code will show the following window in {}The Debug Overlay{}:&nbsp;":"以上代码行将在{}调试覆盖{}中显示以下窗口：",
    "The built-in windows moved into a single window":"内置窗口移动到一个单一的窗口",
    "The console also&nbsp;supports autocomplete that you can access by pressing the Tab&nbsp;key, which will be shown when the cursor is on a word with more than 2 characters. Up and Down keys select the option in the dropdown box and Escape closes the autocomplete:&nbsp;":"控制台还支持自动完成功能，您可以通过按Tab键来访问该功能，当光标位于超过2个字符的单词上时，将显示该功能。向上键和向下键选择下拉框中的选项，然后Escape关闭自动完成：",
    "The console stores a history&nbsp;of your last commands. Press the Up and Down arrow keys to go through the previous commands.":"控制台存储您最后命令的历史记录。按向上和向下箭头键浏览前面的命令。",
    "The first argument is its name, the second is its visibility. Optional parameters can be passed to customise its position and size.":"第一个参数是它的名称，第二个参数是它的可见性。可以传递可选参数以自定义其位置和大小。",
    "The graph displays the FPS ({}{}fps_real{}{}) by default, where the horizontal axis is the amount of time passed since the FPS menu was opened, and the vertical axis is the frame time in seconds.":"默认情况下，图形显示FPS({}{}fps_real{}{})，其中水平轴是自打开FPS菜单以来经过的时间量，垂直轴是帧时间(以秒为单位)。",
    "The graph displays the most recent output buffer on the audio thread. This is the output signal that&nbsp;{}GameMaker{} sends to the audio device, after all mixing and processing.":"图形显示音频线程上最近的输出缓冲区。这是{}GameMaker{}在所有混合和处理之后发送到音频设备的输出信号。",
    "The horizontal axis in this graph is the frame number in the buffer, and the vertical axis is the amplitude, typically ranging between -1 and 1.":"图中的横轴是缓冲区中的帧号，纵轴是振幅，通常在-1到1之间。",
    "The input follows a couple rules:&nbsp;":"输入遵循几个规则：",
    "The text field&nbsp;at the bottom of the window allows you to provide basic console input:&nbsp;":"窗口底部的文本字段允许您提供基本的控制台输入：",
    "The title bar for this window shows the current number of texture swaps, the number&nbsp;of vertex batches, the current FPS ({}{}fps_real{}{}) and a bar showing the stacked time values:&nbsp;":"此窗口的标题栏显示纹理交换的当前数量、顶点批处理的数量、当前FPS({}{}fps_real{}{})以及显示堆叠时间值的栏：",
    "The {}FrameTime{} value is the time each frame took to process, in seconds. This value should be less than the time a single frame can take. If the game speed is e.g. set to 60FPS, then every frame can take at most 1/60 = 0.0166... seconds. If it takes any longer than that, it means that&nbsp;{}GameMaker{}&nbsp;is still processing the current frame while it should already be processing the next one. The (real) FPS will drop below the game speed as a result.":"{}帧时间 FrameTime{}值是处理每个帧所用的时间，以秒为单位。此值应小于单个帧所需的时间。如果游戏速度是例如设置为60 FPS，则每帧最多可占用1/60 = 0.0166……秒。如果超过这个时间，则意味着{}GameMaker{}仍在处理当前帧，而它应该已经在处理下一帧。因此，(真实的)FPS将低于游戏速度。",
    "The {}History{}&nbsp;bar controls the horizontal range that is visible in the graph. You can set this between 1 and 30 seconds.":"{}历史记录{}栏控制图形中可见的水平范围。您可以将其设置为1到30秒。",
    "The {}Memory{} section shows the {}Allocated memory{} by the OS for your game and the&nbsp;{}Free memory{} that currently remains of it, along with a graph of the evolution through time of both (expressed in game frames).":"{} 内存 {} 部分显示操作系统为您的游戏 {} 分配的内存 {} 和当前剩余的 {} 可用内存 {}，以及两者随时间演变的图表 (以游戏形式表示) 帧)。",
    "Then there is a section on the&nbsp;{}Garbage Collector{}, which mostly corresponds to the info returned by&nbsp;{}{}gc_get_stats{}{}. At the top are two buttons: the&nbsp;{}Force Collection{}&nbsp;button forces the garbage collector to run, and the&nbsp;{}Toggle GC{}&nbsp;button enables/disables it. At the bottom of the section is the {}GC graph{}, which shows the number of objects touched and collected as a function of time (expressed in game frames).":"然后是关于 {} 垃圾收集器 {} 的部分，主要对应于 {}{}gc_get_stats{}{} 返回的信息。顶部有两个按钮：{} 强制收集 {} 按钮强制垃圾收集器运行，而 {} 切换 GC{} 按钮则启用 / 禁用垃圾收集器。该部分的底部是 {}GC 图表 {}，它显示了触摸和收集的对象数量与时间 (以游戏帧表示) 的函数关系。",
    "These are:&nbsp;":"这些是：",
    "These sources are limited by the&nbsp;{}{}audio_channel_num{}{}&nbsp;value.":"这些源受{}{}audio_channel_num{}{}值的限制。",
    "This menu contains two settings related to the debug&nbsp;overlay:&nbsp;":"此菜单包含两个与调试覆盖相关的设置：",
    "This menu lists all the custom debug views that you\u0027ve created using&nbsp;{}{}dbg_view{}{}.":"此菜单列出了您使用{}{}dbg_view{}{}创建的所有自定义调试视图。",
    "This toggles the visibility&nbsp;of all custom debug views created using&nbsp;{}{}dbg_view{}{}.":"这将切换使用{}{}dbg_view{}{}创建的所有自定义调试视图的可见性。",
    "This window can also be opened with the&nbsp;{}{}audio_debug{}{}&nbsp;function.":"该窗口也可以使用 {}{}audio_debug{}{} 函数打开。",
    "This window displays the Output Log, same as the one that appears in the IDE under {}The Output Window{}.":"此窗口显示输出日志，与IDE中{}\"输出窗口\"{}下显示的输出日志相同。",
    "This window shows all&nbsp;{}Texture Pages{} used by your game.":"此窗口显示您的游戏使用的所有 {} 纹理页面 {}。",
    "This window shows debug information related to the audio playing in your game.":"此窗口显示与游戏中播放的音频相关的调试信息。",
    "This window shows various info related to&nbsp;{}GameMaker{}\u0027s memory usage.":"此窗口显示与 {}GameMaker{} 内存使用情况相关的各种信息。",
    "This works with the built-in windows as well as with custom debug views that you create. The window that you drag onto another one is always added as a tabbed window. Dragging the tab moves a window back into a separate window.":"这适用于内置窗口以及您创建的自定义调试视图。您拖动到另一个窗口上的窗口始终会添加为选项卡式窗口。拖动选项卡会将窗口移回到单独的窗口中。",
    "To these sections you add controls that display and/or modify the value that they\u0027re linked to via a reference created with {}{}ref_create{}{}.":"您可以向这些部分添加控件，这些控件通过使用{}{}ref_create{}{}创建的引用显示和/或修改它们链接到的值。",
    "Toggling":"切换 Toggling",
    "Views":"视图 Views",
    "Visually, controls are laid out in a grid that has two columns: most controls span two columns, some only a single. Two single column controls can be placed on a single line by calling&nbsp;{}{}dbg_same_line{}{}:&nbsp;":"从视觉上看，控件被布置在一个网格中，该网格包含两列：大多数控件跨越两列，有些控件仅跨越一列。通过调用{}{}dbg_same_line{}{}，可以将两个单列控件放在一行上：",
    "When the mouse is over any menu or window of the Debug Overlay or when the Debug Overlay expects keyboard input,&nbsp;{}GameMaker{}&nbsp;will not trigger any keyboard or mouse events. Functions such as&nbsp;{}{}keyboard_check{}{}&nbsp;and&nbsp;{}{}mouse_check_button{}{}&nbsp;still work the same, however. If you want to get the same result in this case, you can use the values returned by&nbsp;{}{}is_keyboard_used_debug_overlay{}{}&nbsp;and/or&nbsp;{}{}is_mouse_over_debug_overlay{}{}:&nbsp;":"当鼠标位于调试覆盖层的任何菜单或窗口上时，或者当调试覆盖层需要键盘输入时，{}GameMaker{} 将不会触发任何键盘或鼠标事件。不过，{}{}keyboard_check{}{} 和 {}{}mouse_check_button{}{} 等函数的工作原理仍然相同。如果您想在这种情况下获得相同的结果，可以使用 {}{}is_keyboard_used_debug_overlay{}{} 和 / 或 {}{}is_mouse_over_debug_overlay{}{} 返回的值：",
    "Within debug views, you create sections using {}{}dbg_section{}{}:&nbsp;":"在调试视图中，可以使用{}{}dbg_section{}{}创建节：",
    "You can click on each value in the top-right corner (next to their coloured boxes) to toggle their visibilities.":"您可以单击右上角的每个值(在其彩色框旁边)以切换其可见性。",
    "You can define your own, custom debug views in&nbsp;{}The Debug Overlay{} using&nbsp;{}{}dbg_view{}{}. Debug views can have sections added to them using&nbsp;{}{}dbg_section{}{}, which you can add controls to such as sliders, string input boxes, etc. These allow you to change the values of variables through references created using&nbsp;{}{}ref_create{}{}. The&nbsp;{}DebugView{}&nbsp;option under the {}Debug{} menu determines if custom views are visible. All debug views are listed under the {}Views{} menu and can have their visibility toggled here.":"你可以在{}调试视图中{}使用{}{}dbg_view{} {} 来自定义你自己的视图。调试视图可以使用{}{}dbg_section{}{}添加节，您可以向其中添加控件，如滑块，字符串输入框等。这些允许您通过使用 {}{}ref_create{}{}创建的引用来更改变量的值。{}Debug{}菜单下的 {}DebugView{}选项决定自定义视图是否可见。所有的调试视图都列在{}views{}菜单下，可以在这里切换它们的可见性。",
    "You can write a global variable name to print its value, or a global function name to execute it, with space-separated arguments (e.g. {}func arg0 arg1{})":"你可以写一个全局变量名来打印它的值，或者写一个全局函数名来执行它，用空格分隔参数(例如{}func arg0 arg1{})",
    "show_debug_overlay":"show_debug_overlay",
    "{}Alpha{} - the alpha value to use to draw the&nbsp;overlay, default is&nbsp;{}{}0.8{}{}":"{}透明度 Alpha{}-用于绘制叠加的Alpha值，默认值为{}{}0.8{}{}",
    "{}Draw{}: Time spent drawing (Draw events)":"{}绘制 Draw{}：绘制花费的时间(绘制事件)",
    "{}Garbage Collector{}: Time spent by the {}Garbage Collector{}":"{}垃圾收集器 Garbage Collector{}：{}垃圾回收器{}所用的时间",
    "{}IO&amp;YoYo{}: Time spent for input/output ({}keyboard{}, {}mouse{}, {}gamepads{}, {}networking{}), and some OS processing":"{}IO&amp;YoYo{}：用于输入/输出({}键盘{}、{}鼠标{}、{}游戏手柄{}、{}网络{})和一些操作系统处理的时间",
    "{}Scale{}&nbsp;- the scale factor&nbsp;of the debug&nbsp;overlay, default is {}x{}1{}{}":"{}比例 Scale{}-调试覆盖的比例系数，默认值为{}x{}1{}{}",
    "{}Scroll{}: Time spent processing scrolling backgrounds in {}rooms{}, and {}video{}":"{}滚动 Scroll{}：处理{}房间{}和{}视频{}中的滚动背景所花费的时间",
    "{}Text{}: Time spent by the text in {}Sequences{}":"{}文本 Text{}：文本在{}序列{}中所花费的时间",
    "{}The Debug Overlay{}":"{}调试覆盖视图{} The Debug Overlay",
    "{}The Debug Overlay{}&nbsp;can&nbsp;be accessed using the functions&nbsp;{}{}show_debug_overlay{}{}&nbsp;and&nbsp;{}{}show_debug_log{}{}, the first&nbsp;opens the&nbsp;overlay with the {}FPS{} window&nbsp;open, the second with the {}Log{} window&nbsp;open.":"{}调试覆盖视图{}可以使用函数{}{}show_debug_overlay{}{}和{}{}show_debug_log{}{}访问调试视图，第一个函数在{}FPS{}窗口打开时打开，第二个函数在{}Log{}窗口打开时打开。",
    "{}The Debug Overlay{}&nbsp;is an in-game overlay that displays various realtime debug information about your game.":"{}调试覆盖视图 {}是一个游戏内的叠加视图，显示有关游戏的各种实时调试信息。",
    "{}The list at the bottom shows you each sound \"source\" that is currently playing, or may potentially play a sound. The columns display the following values:":"{}底部的列表显示了当前正在播放或可能播放声音的每个声音\"源\"。列显示以下值：",
    "{}Update{}: Time spent in the update loop of the game (Step events, etc.)":"{}更新 Update{}：游戏更新循环所花费的时间(步骤事件等)",
    "{}buffer{}: The ID of the buffer attached to this source":"{}buffer{}：附加到此源的缓冲区的ID",
    "{}dbg_button{}":"{}dbg_button{}  按钮",
    "{}dbg_checkbox{}":"{}dbg_checkbox{} 复选框",
    "{}dbg_colour{}":"{}dbg_colour{} 颜色",
    "{}dbg_drop_down{}":"{}dbg_drop_down{} 下拉",
    "{}dbg_same_line{}":"{}dbg_same_line{} 同行",
    "{}dbg_section_delete{}":"{}dbg_section_delete{} 节删除",
    "{}dbg_section{}":"{}dbg_section{} 节",
    "{}dbg_slider{}":"{}dbg_slider{} 滑块",
    "{}dbg_sprite{}":"{}dbg_sprite{} 精灵",
    "{}dbg_text_input{}":"{}dbg_text_input{} 输入",
    "{}dbg_text{}":"{}dbg_text{} 文本",
    "{}dbg_view_delete{}":"{}dbg_view_delete{} 视图删除",
    "{}dbg_view{}":"{}dbg_view{} 视图",
    "{}dbg_watch{}":"{}dbg_watch{} 监视",
    "{}gain{}: The source gain as a 16-bit value (0-65535)":"{}gain{}：源增益为16位值(0-65535)",
    "{}group{}: The name of the texture group this texture belongs to. Shows {}&lt;unknown&gt;{} if the texture doesn\u0027t belong to a texture group.":"{} group {}：此纹理所属的纹理组的名称。如果纹理不属于纹理组，则显示 {}&lt;unknown&gt;{}。",
    "{}height{}: The height of the texture in pixels.":"{} height {}：纹理的高度 (以像素为单位)。",
    "{}index in group{}: The index of the texture page in its texture group. A texture group can be stored on multiple texture pages when all the visual assets&nbsp;in it don\u0027t fit on a single texture page. Sprites marked as on a {}Separate Texture Page{}&nbsp;also go on their own texture page.":"{} index in group {}：纹理页面在其纹理组中的索引。当纹理组中的所有视觉资源无法容纳在单个纹理页面上时，纹理组可以存储在多个纹理页面上。标记为位于 {} 单独纹理页面 {} 的精灵也会出现在其自己的纹理页面上。",
    "{}is_debug_overlay_open{}":"{}is_debug_overlay_open{} 检查调试覆盖图",
    "{}name{}: The name of the asset. Dynamically created assets (such as buffer sounds) will not show a name.":"{}name{}：资产的名称。动态创建的资源(如缓冲区声音)不会显示名称。",
    "{}num mips{}: The number of mipmap&nbsp;levels used by this texture. See&nbsp;{}Mipmapping{}&nbsp;for more info.":"{} num mips {}：此纹理使用的 mipmap 级别数。请参阅 {}Mipmapping{} 了解更多信息。",
    "{}numProcessed{}: The number of queued buffers that the source has played through (which gets cleaned up at certain points)":"{}numProcessed{}: 源播放过的缓冲区队列的数量(在某些时候会被清理)",
    "{}numQueued{}: The number of buffers that are queued on this source (including processed ones)":"{}numQueued{}：在此源上排队的缓冲区数(包括已处理的缓冲区)",
    "{}pos{}: The current playback position of the source in frames (as a hex value)":"{}pos{}：源当前播放位置(以帧为单位)",
    "{}show_debug_log{}":"{}show_debug_log{} 显示调试日志",
    "{}show_debug_overlay{}":"{}show_debug_overlay{} 显示调试覆盖图",
    "{}source{}: The ID of the source":"{}source{}：源的ID",
    "{}true{}&nbsp;and {}false{} can be used for boolean values":"{}true{}和{}false{}可用于布尔值",
    "{}width{}: The width of the texture in pixels.":"{} width {}：纹理的宽度 (以像素为单位)。",
    "{}{}IMPORTANT{}{}&nbsp;When you access {}Dynamic Textures{}&nbsp;in the texture viewer that are unloaded and still on disk they will be loaded into memory and VRAM so they can be displayed.":"{}{} 重要信息{}{} 当您在纹理查看器中访问已卸载但仍在磁盘上的 {} 动态纹理 {} 时，它们将被加载到内存和 VRAM 中，以便可以显示。",
    "{}{}NOTE{}{} Texture swaps and vertex batches will never be zero and will normally show values of 2 or 3, since even with an empty room and no objects {}GameMaker{} still has to draw and batch things.":"{}{}注意{}{} 纹理交换和顶点批处理永远不会为零，默认下会显示2或3的值，因为即使有一个空房间和没有对象{}GameMaker{}仍然需要绘制和批处理东西。",
    "{}{}NOTE{}{}&nbsp;A&nbsp;debug control created before a section is created will be added to a new section named {}\"Default\"{}. A debug section that\u0027s created before a debug view is created will be added to a debug view {}\"Default\"{}.":"{}{}注意{} {}在创建节之前创建的调试控件将添加到名为{}\"Default\"(默认){}的新节中。在创建调试视图之前创建的调试节将添加到调试视图{}\"Default\"{}中。",
    "{}{}NOTE{}{}&nbsp;All scripts are executed within the scope of the {}global{} struct.":"{}{}注意{} {}所有脚本都在{}global{}结构的范围内执行。",
    "{}{}NOTE{}{}&nbsp;The Debug Overlay is not supported on the HTML5 target platform.":"{}{} 注意{}{}HTML5 目标平台不支持网络覆盖。",
    "{}{}NOTE{}{}&nbsp;The Debug menu\u0027s {}DebugView{} setting must be enabled for any custom debug views to be shown.":"{}{}注意{} {}必须启用\"调试\"菜单的{}DebugView{}设置，才能显示任何自定义调试视图。",
    "{}{}NOTE{}{}&nbsp;The keyboard is considered \"used\" by the Debug Overlay when the cursor is on a textbox control and also when you drag a window (by clicking and holding the left mouse button).":"{}{} 注意{}{} 当光标位于文本框控件上以及拖动窗口 (通过单击并按住鼠标左键) 时，调试叠加层将认为 \" 已使用 \" 键盘。",
    "{}{}NOTE{}{}&nbsp;While you type commands in the console input,&nbsp;{}GameMaker{}&nbsp;continues to trigger events based on the&nbsp;{}Keyboard Input{}&nbsp;that you provide, meaning your game still receives input.":"{}{}注意{}{}当您在控制台输入中键入命令时，{}GameMaker{}会继续根据您提供的{}键盘输入{}触发事件，这意味着您的游戏仍会接收输入。",
    "{}{}WARNING{}{}&nbsp;No parentheses should be added here.&nbsp;If you add them here like you normally would in&nbsp;{}GML Code{}, the function won\u0027t be executed and a line&nbsp;{}ERROR : unknown command{} will be shown in the output.":"{}{}警告{}{}此处不应添加括号。如果像在{}GML代码{}中一样在此处添加它们，则函数将不会执行，并且会出现一行{}ERROR : unknown command（错误：未知命令）{}将显示在输出中。",
    "{}{}{}IMPORTANT{}{}&nbsp;Variables must exist within a {}struct{} or {}instance{}{}{}&nbsp;as a debug view is declared once, so local variables {}cannot{} be displayed.{}":"{}{}{}重要{} {}变量必须存在于{}结构{}或{}实例{}{}{}中，因为调试视图只声明一次，因此{}无法{}显示局部变量。{}"
}