{
    "Additional keys containing OpenGL graphics info {} ":"包含OpenGL图形信息的其他密钥{}",
    "Below you can find some details on the extra data that will be made available to the DS map specific to the following platforms, and it should be noted that on&nbsp;all&nbsp;platforms {}except{}&nbsp;HTML5 the map will have the key \"{}{}is64bit{}\" which will either be {}true{} or {}false{} depending on whether the runner is running in 64-bit mode or not.{}":"您可以在下面找到有关将提供给特定于以下平台的DS映射的额外数据的一些详细信息，<br>并且应该注意的是，在所有平台上，{}除了{}HTML5之外，映射都将具有键\"{}{}is64bit{}\"，<br>该键将是{}true{}或{}false{}，具体取决于运行器是否在64位模式下运行。{}",
    "Here are some keys that this platform returns in addition to the ones listed under Windows:&nbsp;":"以下是除了Windows下列出的键之外，此平台还返回的一些键：",
    "Here are the keys returned on iOS and tvOS (for detailed information, please refer to the Apple Developer documentation):":"以下是iOS和tvOS上返回的键值(详细信息请参考Apple Developer留档)：",
    "On Windows, you will get some extra data from DX11 with the following keys available in the DS map (useful for extensions):":"在Windows上，您将使用DS映射中可用的以下键从DX11获取一些额外数据(对扩展有用)：",
    "On the {}Android{} platform you will get some extra data from various different APIs with the following keys available in the DS map:":"在{}Android{}平台上，您将从DS地图中提供以下密钥的各种不同API中获取一些额外数据：",
    "Returns {}-1{}.":"返回 {}-1{}。",
    "The above code checks if the current OS is Android, gets the OS info and reads the returned&nbsp;map to check if the game is running on an Android TV; in that case it sets the custom variable {}global.android_tv{} to {}true{}.":"上面的代码检查当前操作系统是否是Android，获取操作系统信息并读取返回的地图以检查游戏是否在Android电视上运行;在这种情况下，它将自定义变量{}global.android_tv{}设置为{}true{}。",
    "The following extra keys will be included in the DS Map for GX.games:":"以下额外的密钥将包含在GX.Games的DS地图中：",
    "The function returns some limited OpenGL information on macOS:":"该函数在macOS上返回一些有限的OpenGL信息：",
    "The function returns the following keys on a PlayStation 4 console:":"该函数在PlayStation 4控制台上返回以下键：",
    "The function returns the following keys on a PlayStation 5 console:":"该函数在PlayStation 5控制台上返回以下键：",
    "The info returned on Xbox One and Xbox Series X/S is mostly the same as Windows, however the {}video_adapter_*{}&nbsp;and {}udid{} keys are&nbsp;{}0{} (except for {}video_adapter_description{} which is an empty string {}\"\"{}). It also does not have the {}video_d3d11_swapchain{} key and the {}video_d3d11_*{} keys have been replaced by&nbsp;{}video_d3d12_*{}.":"Xbox One 和 Xbox Series X/ S 上返回的信息与 Windows 基本相同，但是{}video_adapter_*{}和{}udid{}密钥是{}0{}({}video_adapter_description{}除外，它是一个空字符串{}\"\"{})。它也没有{}video_d3d11_swapchain{}密钥，{}video_d3d11_*{}密钥已被替换为{}video_d3d12_*{}。",
    "This contains the same information as on macOS.":"这包含与macOS相同的信息。",
    "This function returns a {}{}DS Map{}{} with detailed information about the OS that the game is running on. The exact information returned will depend on the OS and the device, so it is recommended that you test this function on all platforms that you wish to target and output the returned values using a function like {}{}show_debug_message(){}{}. Note that the DS map is&nbsp;not automatically cleared from memory and you should use the {}{}ds_map_destroy(){}{} function when you no longer need it.":"此函数返回一个{}{}DS Map{}{}，其中包含有关运行游戏的操作系统的详细信息。<br>返回的确切信息将取决于操作系统和设备，<br>因此建议您在希望使用{}{}show_debug_message(){}{}等函数定位和输出返回值的所有平台上测试此函数. <br>请注意，DS映射不会自动从内存中清除，您应该在不再需要时使用{}{}ds_map_destroy(){}{}函数。",
    "{}BOARD{}: value of {}android.os.Build.BOARD{}":"{}BOARD{}: {}android.os.Build.BOARD{} 的值",
    "{}BOOTLOADER{}: value of {}android.os.Build.BOOTLOADER{}":"{}BOOTLOADER{}: {}android.os.Build.BOOTLOADER{} 的值",
    "{}CPU_ABI2{}: value of {}android.os.Build.CPU_ABI2{}":"{}CPU_ABI2{}: {}android.os.Build.CPU_ABI2{} 的值",
    "{}CPU_ABI{}: value of {}android.os.Build.CPU_ABI{}":"{}CPU_ABI{}: {}android.os.Build.CPU_ABI{} 的值",
    "{}DEVICE{}: value of {}android.os.Build.DEVICE{}":"{}DEVICE{}: {}android.os.Build.DEVICE{} 的值",
    "{}GL_EXTENSIONS{}: the extensions of OpenGL that are available as reported by the driver":"{}GL_EXTENSIONS{}: 驱动程序报告的可用OpenGL扩展",
    "{}GL_MAX_TEXTURE_SIZE{}: the maximum texture size supported by this OpenGL driver":"{}GL_MAX_TEXTURE_SIZE{}: 此OpenGL驱动程序支持的最大纹理大小",
    "{}GL_RENDERER{}: the renderer of OpenGL as reported by the driver":"{}GL_RENDERER{}: 驱动报告的OpenGL渲染器",
    "{}GL_SHADING_LANGUAGE_VERSION{}: the version of the GLSL that is supported by this OpenGL driver":"{}GL_SHADING_LANGUAGE_VERSION{}: 此OpenGL驱动程序支持的GLSL版本",
    "{}GL_VENDOR{}: the vendor of OpenGL as reported by the driver":"{}GL_VENDOR{}: 驱动程序报告的OpenGL供应商",
    "{}GL_VERSION{}: the version of OpenGL as reported by the driver":"{}GL_VERSION{}: 由驱动程序报告的OpenGL版本",
    "{}MANUFACTURER{}: value of {}android.os.Build.MANUFACTURER{}":"{}MANUFACTURER{}: {}android.os.Build.MANUFACTURER{} 的值",
    "{}MODEL{}: value of {}android.os.Build.MODEL{}":"{}MODEL{}: {}android.os.Build.MODEL{} 的值",
    "{}PHYSICAL_KEYBOARD{}: if we think a physical keyboard is available then the string {}\"TRUE\"{} otherwise {}\"FALSE\"{}":"{}PHYSICAL_KEYBOARD{}：如果我们认为物理键盘可用，则字符串{}\"TRUE\"{}否则{}\"FALSE\"{}",
    "{}Please refer to the PS4 documentation for information on the functions referenced here.{}":"{}有关此处引用的函数的信息，请参阅PS4文档。{}",
    "{}REGION{}: values of {}user.region{} from the Android {}System.getProperty{} method":"{}REGION{}：来自 Android {}System.getProperty{} 方法的 {}user.region{} 值",
    "{}RELEASE{}: value of {}android.os.Build.VERSION.RELEASE{}":"{}RELEASE{}: {}android.os.Build.VERSION.RELEASE{} 的值",
    "{}SDK_INT{}: value of {}android.os.Build.VERSION.SDK_INT{}{} (see note below){}":"{}SDK_INT{}: {}android.os.Build.VERSION.SDK_INT{}{}的值 (见下面的注释){}",
    "{}VERSION_NAME{}: value of this package\u0027s versionName -&nbsp;see {}here{} for more information.":"{}VERSION_NAME{}：此包版本名称的值-有关详细信息，请参见{}此处{}。",
    "{}VERSION{}: value of {}os.version{} from the Android {}System.getProperty{} method.":"{}VERSION{}：来着 Android {}System.getProperty{} 方法的 {}os.version{} 值。",
    "{}android_tv{}: this will return {}true{} if the device is detected as being an Android TV device, or {}false{} otherwise":"{}android_tv{}: 如果设备被检测到是Android电视设备，则此操作将返回{}TRUE{}，否则返回{}FALSE{}",
    "{}device_type{}: Contains a constant value that represents the device type. These constants map directly to values returned by the {}XSystemGetDeviceType(){} function.{} This will be one of the following constants:&nbsp;{}device_gdk_unknown{}, {}device_gdk_xboxone{}, {}device_gdk_xboxones{}, {}device_gdk_xboxonex{}, {}device_gdk_xboxonexdevkit{}, {}device_gdk_xboxseriess{}, {}device_gdk_xboxseriesx{}, {}device_gdk_xboxseriesdevkit{}.":"{}device_type{}：包含表示设备类型的常量值。这些常量直接映射到{}XSystemGetDeviceType(){}函数返回的值。{}这将是以下常量之一：{}device_gdk_unknown{}，{}device_gdk_xboxone{}，{}device_gdk_xboxones{}，{}device_gdk_xboxonex{}，{}device_gdk_xboxonexdevkit{}，{}device_gdk_xboxseriess{}，{}device_gdk_xboxseriesx{}，{}device_gdk_xboxseriesdevkit{}。",
    "{}display_dynamic_range{}: \"HDR\", \"SDR\" or \"unknown\"":"{}display_dynamic_range{}: \"HDR\", \"SDR\" 或 \"unknown\"",
    "{}display_refresh_rate{}: \"120Hz\", \"60Hz\" or \"Unknown\"":"{}display_refresh_rate{}: \"120Hz\", \"60Hz\" 或 \"Unknown\"",
    "{}display_resolution{}: \"HD\", \"4K\"&nbsp; or \"unknown\"":"{}display_resolution{}: \"HD\", \"4K\"&nbsp; 或 \"unknown\"",
    "{}display_safe_area_ratio{}: A floating point value as returned by {}sceSystemServiceGetDisplaySafeAreaInfo(){}.":"{}display_safe_area_ratio{}：由 {}sceSystemServiceGetDisplaySafeAreaInfo(){} 返回的浮点值。",
    "{}display_safe_area_ratio{}: Same as PS4 (see above).":"{}display_safe_area_ratio{}：与PS4相同(见上文)。",
    "{}enter_button_assign{}: An integer value as returned by {}sceSystemServiceParamGetInt(SCE_SYSTEM_SERVICE_PARAM_ID_ENTER_BUTTON_ASSIGN, &amp;enterassign){}; a value of {}0{} means the Circle button is used as \"assign\" and {}1{} means the X button is used instead.":"{}enter_button_assign{}:<br>{}sceSystemServiceParamGetInt(SCE_SYSTEM_SERVICE_PARAM_ID_ENTER_BUTTON_ASSIGN, &amp;enterassign){}; 返回的整数值;<br>值{}0{}表示圆形按钮用作\"赋值\"，{}1{}表示改用X按钮。",
    "{}gl_renderer_string{}: {}GL_RENDERER {}from OpenGL, example - {}\"Intel(R) Iris(TM) Graphics 6100\"{}":"{}gl_renderer_string{}：来自OpenGL的{}GL_renderer{}，例如-{}\"Intel(R) Iris(TM) Graphics 6100\"{}",
    "{}gl_vendor_string{}: {}GL_VENDOR{} from OpenGL, example - {}\"Intel Inc.\"{}":"{}gl_vendor_string{}：来自OpenGL的{}GL_VENDOR{}，例如：{}\"Intel Inc.\"{}",
    "{}gl_version_string{}: {}GL_VERSION {}from OpenGL, example - {}\"2.1 INTEL-16.2.16\"{}":"{}gl_version_string{}：来自OpenGL的{}GL_VERSION{}，例如：{}\"2.1 INTEL- 16.2.16\"{}",
    "{}hwModel{}:&nbsp;{}hw.model{} string gathered from {}sysctlbyname{}":"{}hwModel{}:&nbsp;{}hw.model{} 字符串来自 {}sysctlbyname{}",
    "{}is_neo_mode{}: This will be {}1{} if the game is running on a Neo (PS4 Pro) and {}0{} if it\u0027s running on a regular PS4.":"{}is_neo_mode{}：如果游戏在Neo(PS4专业版)上运行，这将是{}1{}，如果游戏在普通PS4上运行，这将是{}0{}。",
    "{}localisedModel{}:&nbsp;string as reported by {}[[UIDevice currentDevice] localizedModel]{}":"{}localisedModel{}：{}[[UIDevice currentDevice] localizedModel]{} 报告的字符串",
    "{}mobile{}: This will be {}1.0{} if the game is running on a mobile browser, and {}0.0{} if it\u0027s not.":"{}mobile{}：如果游戏在移动浏览器上运行，则为{}1.0{}，如果不是，则为{}0.0{}。",
    "{}model{}:&nbsp;string as reported by {}[[UIDevice currentDevice] model]{}":"{}model{}：{}[[UIDevice currentDevice] model]{} 报告的字符串",
    "{}name{}: string as reported by {}[[UIDevice currentDevice] name]{}":"{}name{}：{}[[UIDevice currentDevice] name]{} 报告的字符串",
    "{}platform{}:&nbsp;{}hw.machine{} string gathered from {}sysctlbyname{}":"{}platform{}: {}hw.machine{} 字符串来自 {}sysctlbyname{}",
    "{}systemName{}: string as reported by {}[[UIDevice currentDevice] systemName]{}":"{}systemName{}：{}[[UIDevice currentDevice] systemName]{} 报告的字符串",
    "{}systemVersion{}:&nbsp;string as reported by {}[[UIDevice currentDevice] systemVersion]{}":"{}systemVersion{}：{}[[UIDevice currentDevice] systemVersion]{} 报告的字符串",
    "{}udid{}: An identifier that is unique to the machine":"{}udid{}：机器唯一的标识符",
    "{}uiIdiom{}:&nbsp;string as reported by {}[[UIDevice currentDevice] userInterfaceIdiom]{}":"{}uiIdiom{}：{}[[UIDevice currentDevice] userInterfaceIdiom]{} 报告的字符串",
    "{}video_adapter_description{}: string with the video adapter\u0027s description":"{}video_adapter_description{}：带有视频适配器描述的字符串",
    "{}video_adapter_sharedsystemmemory{}: string with the size of the shared system memory":"{}video_adapter_sharedsystemmemory{}：共享系统内存大小的字符串",
    "{}video_d3d11_swapchain{}: pointer to the DX11 swapchain":"{}video_d3d11_swapchain{}：指向DX11交换链的指针",
    "{}video_d3d12_cmdlist{}:&nbsp;Points to the DX12 command list":"{}video_d3d12_cmdlist{}：指向DX12命令列表",
    "{}video_d3d12_cmdqueue{}: Points to the DX12 command queue":"{}video_d3d12_cmdqueue{}：指向DX12命令队列",
    "{}video_d3d12_currentrt{}: Points to the current DX12 render target":"{}video_d3d12_currentrt{}：指向当前DX12渲染目标",
    "{}{}busFrequency{}: The bus frequency{}":"{}{}busFrequency{}: 总线频率{}",
    "{}{}cpuCount{}: The CPU count{}":"{}{}cpuCount{}：CPU计数{}",
    "{}{}cpuFrequency{}: The CPU\u0027s frequency{}":"{}{}cpuFrequency{}：CPU频率{}",
    "{}{}freeDiskSpace{}: The free disk space{}":"{}{}freeDiskSpace{}：可用磁盘空间{}",
    "{}{}maxSocketBufferSize{}: The max socket buffer size{}":"{}{}maxSocketBufferSize{}：最大套接字缓冲区大小{}",
    "{}{}totalDiskSpace{}: The total disk space{}":"{}{}totalDiskSpace{}：总磁盘空间{}",
    "{}{}totalMemory{}: The total memory of the device{}":"{}{}totalMemory{}：设备的总内存{}",
    "{}{}userMemory{}: The user memory{}":"{}{}userMemory{}：用户内存{}",
    "{}{}video_adapter_dedicatedsystemmemory{}{}: string with the size of the system memory (used by DX11 adapter)":"{}{}video_adapter_dedicatedsystemmemory{}{}：带有系统内存大小的字符串(由DX11适配器使用)",
    "{}{}video_adapter_dedicatedvideomemory{}{}: string with the size of the video memory":"{}{}video_adapter_dedicatedvideomemory{}{}：带有视频内存大小的字符串",
    "{}{}video_adapter_deviceid{}{}: string with the adapter\u0027s device id":"{}{}video_adapter_deviceid{}{}：带有适配器设备ID的字符串",
    "{}{}video_adapter_revision{}{}: string with the adapter\u0027s revision number":"{}{}video_adapter_revision{}{}：带有适配器修订号的字符串",
    "{}{}video_adapter_subsysid{}{}: string with the adapter\u0027s sub system id":"{}{}video_adapter_subsysid{}{}：带有适配器子系统ID的字符串",
    "{}{}video_adapter_vendorid{}{}: string with the adapter\u0027s vendor id":"{}{}video_adapter_vendorid{}{}：带有适配器供应商ID的字符串",
    "{}{}video_d3d11_context{}{}: pointer to the DX11 context":"{}{}video_d3d11_context{}{}：指向DX11上下文的指针",
    "{}{}video_d3d11_device{}{}: pointer to the DX11 device":"{}{}video_d3d11_device{}{}：指向DX11设备的指针",
    "{}{}{}NOTE{}{}&nbsp;For information on any {}android.os.Build{} variables, see the {}Android Developer documentation{}.{}":"{}{}{}注意:{}{} 有关任何 {}android.OS.build{} 变量的信息，请参阅 {}Android开发人员文档{} 。{}"
}