{
    "The above code will draw the given text in the middle of the room, with a maximum string length of 300 pixels, a spacing between each line of 10 pixels, spinning round and scaled to twice its original size.":"上述代码将在房间中间绘制给定的文本，最大字符串长度为300像素，每行之间的间距为10像素，旋转并缩放为原始大小的两倍。",
    "The angle of the text.":"文本的角度。",
    "The distance in pixels between lines of text.":"文本行之间的距离，以像素为单位。",
    "The horizontal scale.":"水平刻度。",
    "The maximum width in pixels of the string before a line break.":"换行前字符串的最大宽度(以像素为单位)。",
    "The string to draw.":"绘制的字符串。",
    "The vertical scale.":"垂直比例尺。",
    "The x coordinate of the drawn string.":"绘制字符串的x坐标。",
    "The y coordinate of the drawn string.":"绘制字符串的y坐标。",
    "This function is a combination of the base {}{}draw_text{}{}(){}{}{}{} function with the {}{}draw_text_ext{}{}(){}{}{}{} and {}{}draw_text_transformed{}{}(){}{}{}{} functions, permitting you to scale and rotate text while maintaining a specific line spacing and maximum width per line. Note that the \"width\" argument is based on a scale of 1, so if the scale is different, this value should be changed proportionally. For example, if the base width for a line break is 300 and you set the scale to 2, then the text will appear wrong, over-running the given width. Instead you should have set the width to 150 to compensate the scaling.":"此函数是基于{}{}draw_text{}{}(){}{}{}{}函数与{}{}draw_text_ext{}{}(){}{}{}{}和{}{}draw_text_colour{}{}(){}{}{}{}函数的组合，允许您缩放和旋转文本，同时保持特定的行间距和每行的最大宽度。请注意，\"width\"参数基于小数位数1，因此如果小数位数不同，则应更改此值成比例。例如，如果换行符的基准宽度为300，并且将比例设置为2，则文本将显示错误，超出给定的宽度。相反，应该将宽度设置为150以补偿缩放。"
}