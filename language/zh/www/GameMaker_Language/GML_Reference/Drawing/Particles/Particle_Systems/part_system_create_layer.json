{
    "Flag the particle system as persistent (set to {}true{}) or not (set to {}false{})":"将粒子系统标记为持久(设置为{}真{})或不(设置为{}假{})",
    "The above code will create a new particle system on the given layer and flag it as persisting over subsequent rooms. The ID for the particle system is stored in a global scope variable for future reference.":"上述代码将在给定图层上创建新的粒子系统，并将其标记为在后续房间上保留。粒子系统的Id存储在全局范围变量中，以供将来参考。",
    "The function will return a unique ID value for the particle system that should be used in all further function calls where you need to give a system ID.":"该函数将为粒子系统返回一个唯一的Id值，该值应在需要提供系统Id的所有其他函数调用中使用。",
    "The layer ID (or name) to assign the particle system to (can be any layer type)":"要指定粒子系统的图层Id(或名称)(可以是任何图层类型)",
    "This function will create a new particle system on a given layer. You give the unique layer ID as returned by the function {}{}layer_create(){}{} or the name of the layer to use as a string - for example \"instance_layer\" - and then flag the system as being persistent or not. If the system is not flagged as persistent then it will be automatically destroyed at the end of the room it was created in (this is the same as if you had called the function {}{}part_system_destroy(){}{} and will also destroy any emitters associated with the system). However, when flagged as persistent, the system will be carried to the next room when the room is changed, and if the following room does {}not{} have a layer with the same name or depth as the one assigned, then a new layer will be created for the system that is persisting across the rooms, and it will be named the same as original layer. When changing rooms, if there is another layer in the following rooms with the same name, then the persisted instance will be assigned to the layer with the that name {}regardless of the depth of the layer{}. Finally, if a persisted system moves to a room with a layer at the same depth as the layer the system was created on, it will {}not{} be assigned to this layer, but instead a new layer will be created at the same depth (with the same name as the original layer).":"此功能将在给定层上创建新的粒子系统。为函数{}{}layer_create(){}{}返回的唯一层ID或要用作字符串的层的名称(例如\"instance_layer\")指定，然后将系统标记为持久或不持久。如果系统未标记为持久性，则会在创建它的房间末尾自动销毁(这与您调用函数{}{}part_system_destroy(){}{}相同，并且还会销毁与系统关联的任何发射器)。但是，如果标记为\"持久\"，则在更改房间时系统将被带到下一个房间，并且如果下面的房间{}没有与指定的房间具有相同名称或深度的图层，则将为房间中持续存在的系统创建一个新图层，并且该图层将被命名为与原始图层相同的图层。更换房间时，如果下列房间中有另一个同名图层，则无论图层{}的深度如何，都会将持久化实例指定给同名图层{}。最后，如果持久化系统移动到与创建系统时所在的图层深度相同的房间，则不会将其{}指定给此图层，而是在相同深度(与原始图层同名)创建新图层。",
    "{}IMPORTANT!{} If you flag the particle system as persistent, then it (and any emitters assigned to it) will need to be cleaned up manually using the appropriate destroy functions when not in use, otherwise you risk a memory leak that will negatively impact your final game.":"{}重要信息！{}如果将粒子系统标记为持久性，则在不使用粒子系统时，需要使用相应的销毁功能手动清除粒子系统(以及分配给粒子系统的任何发射器)，否则将面临内存泄漏的风险，从而对最终游戏造成负面影响。"
}