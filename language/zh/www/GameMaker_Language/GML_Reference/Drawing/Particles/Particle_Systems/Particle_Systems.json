{
    "As the above code shows, emitters start streaming particles if you\u0027ve&nbsp;configured them to be in {}Stream{} mode. By default, the particle system\u0027s position is set to the center&nbsp;of the room.":"如上面的代码所示，如果将发射器配置为{}Stream{}模式，则发射器将开始流式粒子。默认情况下，粒子系统的位置设置为房间的中心。",
    "Before you can create particles you need to create a particle system. This is a \"container\" where you place your particles and emitters (if you need them) ready for use, and you can put as many or as few particles into any one system as you think necessary, and you can have as many systems as you think necessary too. However, it is always better to keep this number as small as possible due to the fact that each system, emitter and particle takes up memory and having too many of them may slow your game down or cause problems. For example, if you need some effects to appear above instances, and other effects to appear beneath instances, you would create two systems and set their depths to get the desired effect, with all particles that are added to each system being drawn at the depth you specify.":"在创建粒子之前，需要创建粒子系统。这是一个\"容器\"，你可以把你的粒子和发射器(如果你需要的话)放在那里准备好使用，你可以在任何一个系统中放入你认为必要的尽可能多或尽可能少的粒子，你也可以有你认为必要的尽可能多的系统。但是，由于每个系统、发射器和粒子都占用内存，并且它们太多可能会减慢游戏速度或导致问题，因此最好保持这个数字尽可能小。例如，如果需要某些效果显示在实例上方，而其他效果显示在实例下方，则需要创建两个系统并设置其深度以获得所需的效果，并以指定的深度绘制添加到每个系统的所有粒子。",
    "Copy GML to Clipboard":"将GML复制到剪贴板",
    "Create Event":"创建事件",
    "Creating Particles":"创建粒子",
    "Function Reference":"函数参考",
    "Once particles are added to a particle system and then burst or streamed into the room, they are normally automatically updated each step and drawn based on the parameters that you have used to define them. However it can sometimes be necessary to control when and how the system is updated as well as how the system should be drawn, and for that {}GameMaker{} provides the following functions:":"一旦粒子添加到粒子系统，然后爆发或流入房间，它们通常会在每个步骤中自动更新，并根据用于定义粒子系统的参数进行绘制。但是，有时可能需要控制何时以及如何更新系统，以及如何绘制系统，并且{}GameMaker{}提供以下函数：",
    "Particle Systems":"粒子系统",
    "Setting Up":"建立",
    "Since a particle system is a dynamically created resource, you must create it and store the returned index in a variable to reference the system in all further function calls, and it is very important that you also destroy the system when it is no longer needed or else you will have a memory leak that will slow down and eventually crash your game. It is also worth noting that particle systems will live on forever after they are created, even if the index is no longer stored. So even if you change room or restart the game, the systems and the particles will remain, and be visible, in all further rooms so you better make sure you destroy them once you no longer need them.":"由于粒子系统是动态创建的资源，因此必须创建粒子系统并将返回的索引存储在变量中，以便在所有进一步的函数调用中引用该系统，并且非常重要的是，当不再需要粒子系统时，还要销毁该系统，否则会出现内存泄漏，从而降低速度并最终导致游戏崩溃。另外值得注意的是，粒子系统在创建后将永远存在，即使索引不再存储。因此，即使您更换空间或重新启动游戏，系统和粒子仍将保留，并且可以在所有其他房间中看到，这样您最好确保在不再需要它们时将其销毁。",
    "The basic functions for setting up a particle system are listed below:":"下面列出了设置粒子系统的基本函数：",
    "Updating and Drawing":"更新和绘图",
    "Using&nbsp;{}The Particle System Editor{}\u0027s {}Copy GML to Clipboard{} button&nbsp;{} you can generate the&nbsp;{}GML Code{}&nbsp;needed to create a particle system that\u0027s identical to the&nbsp;one you created. The code&nbsp;could, for example, go&nbsp;in&nbsp;an object\u0027s Create event:&nbsp;":"使用 {} 粒子系统编辑器 {} 的 {}\" 将 GML 复制到剪贴板 \"{} 按钮 {}，可以生成创建与所创建粒子系统相同的粒子系统所需的 {}GML 代码 {}。例如，代码可以进入对象的 Create 事件：",
    "You can use {}particle emitters{} to burst or stream particles from an area, but in many cases these are not necessary and it is actually better to just create the particles directly using the following functions:":"可以使用 {} 粒子发射器 {} 从某个区域爆发或流化粒子，但在许多情况下，这些不是必需的，实际上最好直接使用以下函数创建粒子：",
    "{}{}IMPORTANT{}{}&nbsp;The particle system, emitters and types have to be&nbsp;destroyed manually (e.g. in the Clean Up event) to prevent memory leaks.":"{}{}重要事项{}{}粒子系统、发射器和类型必须手动销毁(例如：在清理事件中)，以防止内存泄漏。",
    "{}{}TIP{}{}&nbsp;If you prefer a more visual approach to creating particles and don\u0027t need the extensive functionality that&nbsp;{}GML Code{}&nbsp;offers,&nbsp;you can also create a&nbsp;{}{}Particle System Asset{}{}&nbsp;using&nbsp;{}The Particle System Editor{}.":"{}{} 提示{}{} 如果您更喜欢使用更直观的方法来创建粒子，并且不需要 {}GML 代码 {} 提供的大量功能，也可以使用 {} 粒子系统编辑器 {} 创建 {6}{7} 粒子系统资源 {8}{9}。",
    "{}{}TIP{}{}&nbsp;If you prefer a more visual approach to creating particles and don\u0027t need the extensive functionality that&nbsp;{}GML Code{}&nbsp;offers,&nbsp;you can also create a&nbsp;{}{}Particle System Asset{}{}&nbsp;using&nbsp;{}The Particle System Editor{}. Additionally, you can generate the&nbsp;{}GML Code{}&nbsp;for it using the editor\u0027s {}Copy GML to Clipboard{} {}.":"{}{} 提示{}{} 如果您喜欢更直观的方法来创建粒子，并且不需要 {}GML 代码 {} 提供的大量功能，则还可以使用 {10} 粒子系统编辑器 {11} 创建 {}{} 粒子系统资源 {}{}。此外，还可以使用编辑器的 {} 复制 GML 到剪贴板 {}{} 为其生成 {12}GML 代码 {13}。"
}