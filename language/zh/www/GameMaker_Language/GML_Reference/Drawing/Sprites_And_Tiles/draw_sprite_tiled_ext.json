{
    "The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque).":"精灵的α(从0到1，其中0是透明的，1是不透明的)。",
    "The colour with which to blend the sprite. c_white is to display it normally.":"混合精灵的颜色。c_white将正常显示精灵。",
    "The horizontal scaling of the sprite. A multiplier \u0027 1 = normal scaling, 0.5 is half etc.":"精灵的水平缩放。乘数\u00271 =正常缩放，0.5等于一半。",
    "The index of the sprite to draw.":"要绘制的精灵的索引。",
    "The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object).":"要绘制的精灵的subimg(帧)(image_index或-1)与对象中动画的当前帧相关联。",
    "The vertical scaling of the sprite. A multiplier \u0027 1 = normal scaling, 0.5 is half etc.":"精灵的垂直缩放。乘数\u00271 =正常缩放，0.5等于一半。",
    "The x coordinate of where to draw the sprite.":"绘制精灵的位置的x坐标。",
    "The y coordinate of where to draw the sprite.":"绘制精灵的位置的y坐标。",
    "This function will take a sprite and then repeatedly tile it across the whole view (or room if no view is defined), starting from the coordinates that you give in the function and with each tile scaled, colour blended and with the alpha that you define (these properties are the same as those used in {}{}draw_sprite_ext(){}{}). This function is for 2D (orthographic) projections&nbsp;only, and will not work correctly when a 3D camera projection is used.":"此函数将采用sprite，然后在整个视图(如果未定义视图，则为房间)中重复平铺它，从函数中给定的坐标开始，从每个平铺缩放、混合颜色和定义的Alpha开始(这些属性与{}{}draw_sprite_ext(){}{}中使用的属性相同)。此函数仅用于2D(正交)投影，并且在使用3D摄影机投影时无法正常工作。",
    "This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index) at the instances own x and y position, but scaled to twice the normal size, blended red and with half the normal alpha. The sprite will be tiled horizontally and vertically across the view.":"这将在实例自己的x和y位置绘制指定了sprite(sprite_index)及其当前动画帧(image_index)的实例，但缩放为正常大小的两倍，混合为红色并具有正常alpha的一半。精灵将被平铺水平和垂直穿过视图。",
    "{}NOTE{}: Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set the font cache size to try and limit this should it be necessary using the function {}{}sprite_set_cache_size(){}{}.":"{}注意{}：只有在启用WebGL时，才建议对HTML5目标使用颜色混合，但如果未启用混合颜色，则仍可以设置该混合颜色，并且该混合颜色会将sprite混合为正常颜色。但是，以这种方式进行的所有混合都会创建一个副本sprite，然后将其存储在缓存中并在需要时使用。这远远不是最佳状态，如果您使用多种颜色更改，则除非您激活WebGL，否则会降低游戏性能。如果您不希望使用WebGL，则可以设置这个字体缓存大小来尝试，并且如果必须使用函数{}{}sprite_set_cache_size(){}{}来限制这个值。"
}