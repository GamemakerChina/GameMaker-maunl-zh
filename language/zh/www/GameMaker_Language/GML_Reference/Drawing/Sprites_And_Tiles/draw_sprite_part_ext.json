{
    "The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque).":"精灵的alpha(从0到1，其中0是透明的，1是不透明的)。",
    "The colour with which to blend the sprite. c_white is to display it normally.":"混合精灵的颜色。c_white将正常显示精灵。",
    "The height of the area to draw.":"要绘制的区域的高度。",
    "The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc...":"精灵的水平缩放，作为乘数：1 =正常缩放，0.5等于一半...",
    "The index of the sprite to draw.":"要绘制的精灵的索引。",
    "The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object).":"要绘制的精灵的subimg(帧)(image_index或-1)与对象中动画的当前帧相关联。",
    "The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc...":"精灵的垂直缩放，作为乘数：1 =正常缩放，0.5等于一半...",
    "The width of the area to draw.":"要绘制的区域的宽度。",
    "The x coordinate of where to draw the sprite.":"绘制精灵的位置的x坐标。",
    "The x position on the sprite of the top left corner of the area to draw.":"要绘制区域左上角精灵上的x位置。",
    "The y coordinate of where to draw the sprite.":"绘制精灵的位置的y坐标。",
    "The y position on the sprite of the top left corner of the area to draw.":"要绘制区域左上角精灵上的y位置。",
    "This function will draw a part of the chosen sprite at the given position following the same rules as per {}{}draw_sprite_part(){}{}, only now you can scale the part, blend a colour with it, or change its alpha when drawing it to the screen (the same as when drawing a sprite with {}{}draw_sprite_ext(){}{}). You should note that if the texture page permits automatic cropping then this function may not work as expected, since the extra \"empty\" space around the sprite will have been removed for creating the texture page. To resolve this issue, you will need to set the texture page settings (in the {}Texture Group Editor{}) to disable the {}Automatic Crop{}.":"此函数将按照与per{}{}draw_sprite_part(){}{}相同的规则在给定位置绘制所选精灵的一部分，只是现在您可以缩放零件、与其混合颜色或在以下情况下更改其Alpha：将其绘制到屏幕(与使用{}{}draw_sprite_ext(){}{}绘制sprite时相同)。应注意，如果纹理页面允许自动裁剪，则此函数可能无法按预期工作，因为sprite周围额外的\"空\"空间将被删除，以创建纹理页面。若要解决此问题，您需要设置纹理页面设置(在{}纹理组编辑器{}中)以禁用{}自动裁剪{}。",
    "This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index), however it will shave an 8px margin off all four sides of the sprite. It will then be stretched to double its usual width but half its usual height, and although the alpha is still 1, it will be blended with black (turning it into a silhouette).":"这将绘制指定为sprite(sprite_index)的实例及其当前动画帧(image_index)，但是它将从精灵的所有四个边上削减8 px边距。然后，它将被拉伸到其通常宽度的两倍，但通常是其通常宽度的一半高度，尽管Alpha仍为1，但它将与黑色混合(将其变为轮廓)。",
    "{}NOTE{}: Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set the font cache size to try and limit this should it be necessary using the function {}{}sprite_set_cache_size(){}{}.":"{}注意{}：只有在启用WebGL时，才建议对HTML5目标使用颜色混合，但如果未启用混合颜色，则仍可以设置该混合颜色，并且该混合颜色会将sprite混合为正常颜色。但是，以这种方式进行的所有混合都会创建一个副本精灵，然后将其存储在缓存中并在需要时使用。这远远不是最佳状态，如果您使用多种颜色更改，则除非您激活WebGL，否则会降低游戏性能。如果您不希望使用WebGL，则可以设置这个字体缓存大小来尝试，并且如果必须使用函数{}{}sprite_set_cache_size(){}{}来限制这个值。",
    "{}NOTE{}: This function is only useful for {}bitmap{} sprites and will not work with SWF or JSON (Spine) sprites.":"{}注意{}：此函数仅适用于{}位图{}精灵，不适用于Swf或Json(脊椎)精灵。",
    "{}{}NOTE{} {}When drawing with this function, the sprite {}x offset{} and {}y offset{} are ignored and the sprite part will be drawn with the top left corner at the specified x / y position in the room.":"{}{}注意{}{}使用此函数绘制时，将忽略精灵{}x偏移量{}和{}y偏移量{}，并且将绘制精灵部分，其中左上角位于房间中指定的x/y位置。"
}