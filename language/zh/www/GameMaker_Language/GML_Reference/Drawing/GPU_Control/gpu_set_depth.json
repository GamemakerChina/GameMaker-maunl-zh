{
    "After this, a couple&nbsp;of circles are drawn in a for loop using&nbsp;{}{}draw_circle{}{}. The depth used to draw each circle is set to the value of the loop variable&nbsp;{}z{}, which is increased by 10 every iteration. The radius of the circle varies in a way that the final shape looks like an hourglass shape. The draw colour is changed to bring variation in the colours&nbsp;of the circles.":"在此之后，使用{}{}draw_circle{}{}在for循环中绘制几个圆。用于绘制每个圆的深度设置为循环变量{}z{}的值，每次迭代时增加10。圆的半径以某种方式变化，最终形状看起来像沙漏形状。绘制颜色会改变，以改变圆的颜色。",
    "Draw Event":"绘制事件",
    "Finally, depth, z-writing and z-testing are all set to their previous value in&nbsp;order to not affect further drawing.":"最后，深度、z-writing 和 z-testing 都设置为之前的值，以免影响进一步的绘制。",
    "Finally, the draw colour and depth are set back to the values they had before, in&nbsp;order to not affect further drawing&nbsp;on the instance\u0027s layer.":"最后，绘制颜色和深度被设置回它们之前的值，以便不影响在实例层上的进一步绘制。",
    "First, z-writing and z-testing are enabled on the GPU using&nbsp;{}{}gpu_set_zwriteenable{}{}&nbsp;and&nbsp;{}{}gpu_set_ztestenable{}{}. Their current values are stored in temporary variables {}_zwrite{} and {}_ztest{}&nbsp;respectively, as well as the current depth, which is stored in a temporary variable {}_depth{}. The depth is then set to the instance\u0027s {}-y{}&nbsp;using&nbsp;{}{}gpu_set_depth{}{} and the instance is drawn normally using&nbsp;{}{}draw_self{}{}.":"首先，使用 {}{}gpu_set_zwriteenable{}{} 和 {}{}gpu_set_ztestenable{}{} 在 GPU 上启用 z 写入和 z 测试。它们的当前值分别存储在临时变量 {}_zwrite{} 和 {}_ztest{} 中，当前深度也存储在临时变量 {}_depth{} 中。然后使用 {}{}gpu_set_depth{}{} 将深度设置为实例的 {14}-y{15}，并使用 {}{}draw_self{}{} 正常绘制实例。",
    "First, z-writing and z-testing&nbsp;are enabled ({}{}gpu_set_zwriteenable{}{}&nbsp;and&nbsp;{}{}gpu_set_ztestenable{}{}) and an appropriate projection ({}{}matrix_build_projection_perspective_fov{}{}) and view matrix ({}{}matrix_build_lookat{}{}) are built and set using&nbsp;{}{}matrix_set{}{}. Next, the current depth value and draw colour are stored so they can be restored later.":"首先，启用 z 写入和 z 测试 ({}{}gpu_set_zwriteenable{}{} 和 {}{}gpu_set_ztestenable{}{}) 以及适当的投影 ({}{}matrix_build_projection_perspective_fov{}{}) 和视图矩阵 ({}{}matrix_build_lookat{}{}) 使用 {}{}matrix_set{}{} 构建和设置。接下来，存储当前的深度值和绘制颜色，以便稍后恢复。",
    "The above code sets the depth used for drawing&nbsp;to the current instance\u0027s&nbsp;{}-y{}. This gives an easy way to draw instances behind&nbsp;other instances&nbsp;once they move \"behind\" them, if those instances also have their depth set to {}-y{}.":"上面的代码将用于绘制的深度设置为当前实例的 {}-y{}。如果这些实例的深度也设置为 {}-y{}，则一旦其他实例移动到其他实例的 \" 后面\"，这提供了一种简单的方法来将这些实例绘制在其他实例的后面。",
    "The code above draws a coloured hourglass-like shape in the Draw event.":"上面的代码在 Draw 事件中绘制了一个彩色的沙漏状形状。",
    "The new depth value to use for drawing":"用于绘制的新深度值",
    "This function sets the depth (i.e. the z coordinate) for&nbsp;{}GameMaker{}\u0027s&nbsp;2D drawing functions (sprites, shapes, primitives, text, etc.)":"此函数为{}GameMaker{}的2D绘图功能(精灵、形状、图元、文本等)设置深度(即z坐标)。",
    "{}By default,&nbsp;{}GameMaker{}&nbsp;uses the layer\u0027s depth when drawing flat graphics, but this function allows you to use your own. This can be used to draw at a different depth, or draw individual sprites/primitives at their own depths.{}":"{}默认情况下，{}GameMaker{} 在绘制平面图形时使用层的深度，但此功能允许您使用自己的深度。此功能可用于在不同的深度绘制，或在各自的深度绘制单个精灵/图元。{}",
    "{}{}IMPORTANT{}{}&nbsp;This function doesn\u0027t change the depth of the layer when called in a layer begin script (see&nbsp;{}{}layer_script_begin{}{}). If you need to&nbsp;change the depth of a specific layer in the layer begin script you should do so using&nbsp;{}{}layer_force_draw_depth{}{}&nbsp;instead.":"{}{} 重要信息{}{} 在层开始脚本中调用此函数时，不会更改层的深度 (请参阅 {}{}layer_script_begin{}{})。如果您需要更改图层开始脚本中特定图层的深度，您应该使用 {}{}layer_force_draw_depth{}{} 来执行此操作。",
    "{}{}IMPORTANT{}{}&nbsp;This function doesn\u0027t change the depth of the layer when called in a layer begin script (see&nbsp;{}{}layer_script_begin{}{}). If you need to&nbsp;change the depth of a specific layer in the layer begin script you should do so using&nbsp;{}{}layer_force_draw_depth{}{}&nbsp;instead.{} {} Also note that the depth set with&nbsp;{}{}layer_force_draw_depth{}{} will take precedence over the depth set in this function. ":"{}{} 重要{}{} 在层开始脚本中调用此函数时，不会更改层的深度 (请参阅 {}{}layer_script_begin{}{})。如果您需要更改图层开始脚本中特定图层的深度，则应使用 {}{}layer_force_draw_depth{}{} 来实现。{}{} 另请注意，使用 {}{}layer_force_draw_depth{}{}  设置的深度将优先于该函数中设置的深度。",
    "{}{}NOTE{}{}&nbsp;Depth values are approximate. If you try to draw things at depth values close to the maximum depth&nbsp;and minimum depth, they may not be drawn due to inaccuracies introduced by the calculations.":"{}{} 注意{}{} 深度值是近似值。如果您尝试以接近最大深度和最小深度的深度值绘制事物，则可能会由于计算引入的不准确性而无法绘制它们。",
    "{}{}NOTE{}{}&nbsp;{}GameMaker{}{}&nbsp;only changes the depth when it starts drawing a new layer, so you may want to restore the original depth (saved previously from&nbsp;{}{}gpu_get_depth{}{}{}{}) after you\u0027re done drawing, so any subsequent calls will not be affected by your depth change.{}":"{}{} 注意{}{}{}GameMaker{}{} 仅在开始绘制新图层时更改深度，因此您可能需要恢复原始深度 (之前从 {}{}gpu_get_depth{}{} 保存 ){}{}) 在您完成绘制后，因此任何后续调用都不会受到深度更改的影响。{}"
}