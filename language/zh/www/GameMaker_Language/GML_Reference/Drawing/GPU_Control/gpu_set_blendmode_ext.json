{
    "Blend Mode Factor Constant":"混合模式系数常量",
    "Destination blend mode factor (see constants above)":"目标混合模式因子(参见上面的常量)",
    "Destination blend mode factor (see constants above).":"目标混合模式因子 (请参阅上面的常量)。",
    "Each component of the colours is stored as a floating point value between 0 and 1, and the new colour is calculated by multiplying each component of the source colour by some factor and by multiplying each component of destination colour by some other factor and then adding the results together component by component (or using a different {}equation{}).":"颜色的每个分量存储为 0 到 1 之间的浮点值，新颜色的计算方法是将源颜色的每个分量乘以某个因子，将目标颜色的每个分量乘以某个其他因子，然后加上逐个组件 (或使用不同的 {} 方程 {}) 将结果组合在一起。",
    "Guide To Using Blendmodes":"混合模式使用指南",
    "Note that you can either supply two individual arguments to this function or you can supply an array of arguments (as returned by the function {}{}gpu_get_blendmode_ext(){}{} for example). If supplying an array it should have the following two elements:":"请注意，您可以为此函数提供两个单独的参数，也可以提供一个参数数组(例如，由函数{}{}gpu_get_blendmode_ext(){}{}返回)。如果提供数组，则应具有以下两个元素：",
    "Source blend mode factor (see constants above).":"源混合模式因子(请参见上面的常量)。",
    "This function permits you to set how the different component parts that should be factored together to create a custom blend mode. The source and destination both have a red, green, blue and alpha component, and in the following chart the source\u0027s RGBA are considered (Rs, Gs, Bs, As) while the destination\u0027s are (Rd, Gd, Bd, Ad). The eleven constants that are available for use can be either source or destination (or both) when used in this function.":"此功能允许您设置如何将不同的组成部分组合在一起以创建自定义混合模式。源和目标都具有红色、绿色、蓝色和 alpha 分量，在下图中，源的 RGBA 被视为 (Rs、Gs、Bs、As)，而目标的 RGBA 被视为 (Rd、Gd、Bd、Ad)。在此函数中使用时，可用的 11 个常量可以是源或目标 (或两者)。",
    "This function permits you to set the different component parts that should be factored together to create a custom blend mode. The source and destination both have a red, green, blue and alpha component, and in the following chart the source\u0027s RGBA are considered (Rs, Gs, Bs, As) while the destination\u0027s are (Rd, Gd, Bd, Ad). The eleven constants that are available for use can be either source or destination (or both) when used in this function.":"此函数允许您设置不同的零部件，这些零部件应该被系数化在一起以创建自定义混合模式。源和目的地都有红色、绿色、蓝色和Alpha分量，在下表中，源的 RGBA 被视为(R、G、B、As)，而目的地的 RGBA 被视为(Rd、Gd、Bd、Ad)。在此函数中使用时，可用的十一个常量可以是源或目标(或两者)。",
    "This will turn the black into transparency, creating a \u0027glow\u0027 effect from the white being strong on the outside and gradually weakening further from the circle centre. The blend mode is reset after the circle is drawn to ensure additive blending is not also applied to everything else after it.":"这将使黑色变成透明，从白色在外面强烈到从圆心逐渐减弱的\u0027发光\u0027效果。绘制圆之后将重置混合模式，以确保在绘制圆之后不会将添加混合应用于其他任何对象。",
    "To help you get the most from blend modes and to help understand how they work and how they affect the final image being drawn to the screen, we recommend that you read the following guide:":"为了帮助您充分利用混合模式，并帮助您了解它们如何工作以及它们如何影响绘制到屏幕的最终图像，建议您阅读以下指南：",
    "When {}GameMaker{} goes to draw a pixel there is a source colour (the colour of the pixel we\u0027re going to draw) and a destination colour&nbsp;(the colour that\u0027s already in the pixel we\u0027re drawing to), so when determining the new colour of the pixel, the source and destination colours are calculated according to the chosen blend mode.":"当 {}GameMaker{} 绘制像素时，会存在源颜色 (我们要绘制的像素的颜色) 和目标颜色 (我们要绘制到的像素中已有的颜色)，因此当确定像素的新颜色后，将根据所选的混合模式计算源颜色和目标颜色。",
    "When {}GameMaker{} goes to draw a pixel there is a source colour (the colour of the pixel we\u0027re going to draw) and a destination colour&nbsp;(the colour that\u0027s already in the pixel we\u0027re drawing to), so when determining the new colour of the pixel, the source and destination colours are calculated according to the chosen blend mode. Each component of the colours is stored as a floating point value between 0 and 1, and the new colour is calculated by multiply each component of the source colour by some factor and by multiplying each component of destination colour by some other factor and then adding the results together component by component.":"{}GameMaker{}在绘制像素时，会显示源颜色(我们要绘制的像素的颜色)和目标颜色(我们要绘制的像素中已有的颜色)，因此在确定像素的新颜色时，会根据所选的混合模式计算源颜色和目标颜色。将颜色的每个分量存储为介于0和1之间的浮点值，并且通过将源颜色的每个分量乘以某个因子，并通过将目标颜色的每个分量乘以某个其他因子，然后将结果与分量相加来计算新颜色。",
    "[0] = Source blend mode (default is {}bm_src_alpha{})":"[ 0 ]=源混合模式(默认为{}bm_src_alpha{})",
    "[1] = Destination blend mode (default is {}bm_inv_src_alpha{})":"[ 1 ]=目标混合模式(默认为{}bm_inv_src_alpha{})",
    "{}IMPORTANT!{} HTML5 without WebGL enabled will {}not{} be able to display the following modes correctly:":"{}重要！{}未启用WebGL的HTML5将无法{}正确显示以下模式："
}