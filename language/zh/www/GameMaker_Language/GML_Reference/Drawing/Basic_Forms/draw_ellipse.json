{
    "The x coordinate of the left of the ellipse.":"椭圆左侧的x坐标。",
    "The x coordinate of the right of the ellipse.":"椭圆右侧的x坐标。",
    "The y coordinate of the bottom of the ellipse.":"椭圆底部的y坐标。",
    "The y coordinate of the top of the ellipse.":"椭圆顶部的y坐标。",
    "This will draw a filled ellipse within the defined rectangular area.":"这将在定义的矩形区域内绘制一个填充椭圆。",
    "Whether the ellipse is drawn filled (false) or as a one pixel wide outline (true).":"椭圆是绘制为填充(false)还是绘制为一个像素宽的轮廓(true)。",
    "With this function you can draw either an outline of an ellipse or a filled ellipse by defining a rectangular area that will then have the ellipse created to fit. You can define how precise the drawing is with the function {}{}draw_set_circle_precision(){}{}.":"使用此函数，您可以通过定义一个矩形区域来绘制椭圆的轮廓或填充椭圆，然后创建椭圆以适合该区域。可以使用函数{}{}draw_set_circle_precision(){}{}定义绘制的精度。",
    "{}NOTE{}: If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}注意{}：如果要使用着色器绘制形状，请注意，大多数着色器都需要以下输入：顶点、纹理、颜色。但是，使用此函数时，仅传入顶点和颜色数据，因此着色器可能无法绘制任何内容(或绘制某些内容但不正确)。如果需要以这种方式绘制形状，则应考虑到这一点对着色器进行自定义。",
    "{}{}NOTE{}{}&nbsp;If you want to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}{} 注意 {}{} 如果您想使用着色器绘制形状，您应该知道大多数着色器需要以下输入：顶点、纹理、颜色。但是，当使用此函数时，仅传入顶点和颜色数据，因此着色器可能不会绘制任何内容 (或绘制某些内容但不正确)。如果您需要以这种方式绘制形状，那么应该在定制着色器时考虑到这一点。"
}