{
    "The radius of the curve along the x axis from the rectangle corners.":"从矩形角开始沿x轴的曲线半径。",
    "The radius of the curve along the y axis from the rectangle corners.":"沿Y轴从矩形拐角开始的曲线半径。",
    "The x coordinate of the bottom right corner of the rounded rectangle (as if it were a normal rectangle).":"圆角矩形右下角的x坐标(如同正常矩形一样)。",
    "The x coordinate of the top left corner of the rounded rectangle (as if it were a normal rectangle).":"圆角矩形左上角的x坐标(如同正常矩形一样)。",
    "The y coordinate of the bottom right corner of the rounded rectangle (as if it were a normal rectangle).":"圆角矩形右下角的y坐标(好像它是一个普通矩形)。",
    "The y coordinate of the top left corner of the rounded rectangle (as if it were a normal rectangle).":"圆角矩形左上角的y坐标(好像它是一个普通矩形)。",
    "This will draw a filled rounded rectangle with the corners being rounded by an amount based on the mouse position relative to the instance doing the drawing.":"这将绘制一个填充的圆角矩形，边角将根据相对于绘制图形的实例的鼠标位置进行圆角。",
    "Whether the rounded rectangle is drawn filled (false) or as a one pixel wide outline (true).":"是否绘制圆角矩形填充(false)或绘制为一个像素宽的轮廓(true)。",
    "With this function you can draw either an outline of a rounded rectangle or a filled rounded rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. You must also supply radius values for the x and y axis (in pixels) and the corners will be rounded by these amounts. You can define how precise the drawing of the corners is with the function {}{}draw_set_circle_precision(){}{}. Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms.":"使用此函数，您可以绘制圆角矩形或填充圆角矩形的轮廓，其中 (x1,y1) 位置是左上角，(x2,y2) 位置是右下角。还必须提供 x 轴和 y 轴的半径值 (以像素为单位)，拐角将按这些数量进行倒圆角。您可以使用函数 {}{}draw_set_circle_precision(){}{} 定义角点的绘制精度。请注意，由于各种支持的平台之间的差异，所绘制的矩形可能需要使用所需尺寸绘制不同的值 (+/-1，x、y、宽度或高度)。",
    "{}NOTE{}: If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}注意{}：如果要使用着色器绘制形状，请注意，大多数着色器都需要以下输入：顶点、纹理、颜色。但是，使用此函数时，仅传入顶点和颜色数据，因此着色器可能无法绘制任何内容(或绘制某些内容但不正确)。如果需要以这种方式绘制形状，则应考虑到这一点对着色器进行自定义。",
    "{}{}NOTE{}{}&nbsp;If you want to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}{} 注意{}{} 如果您想使用着色器绘制形状，您应该知道大多数着色器需要以下输入：顶点、纹理、颜色。但是，当使用此函数时，仅传入顶点和颜色数据，因此着色器可能不会绘制任何内容 (或绘制某些内容但不正确)。如果您需要以这种方式绘制形状，那么应该在定制着色器时考虑到这一点。"
}