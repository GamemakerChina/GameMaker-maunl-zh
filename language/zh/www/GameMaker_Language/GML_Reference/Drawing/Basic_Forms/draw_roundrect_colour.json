{
    "The center colour.":"中心颜色。",
    "The outside edge colour.":"外部边缘颜色。",
    "The x coordinate of the left of the rounded rectangle.":"圆角矩形左侧的x坐标。",
    "The x coordinate of the right of the rounded rectangle.":"圆角矩形右侧的x坐标。",
    "The y coordinate of the bottom of the rounded rectangle.":"圆角矩形底部的y坐标。",
    "The y coordinate of the top of the rounded rectangle.":"圆角矩形顶部的y坐标。",
    "This would draw a filled-in square with rounded corners and with a smooth black/white gradient from the center to the edges.":"这将绘制一个带有圆角的填充方形，并且从中心到边缘具有平滑的黑白渐变。",
    "Whether the rectangle is an outline (true) or filled in (false).":"矩形是轮廓(真)还是填充(假)。",
    "With this function you can draw either an outline of a rounded rectangle or a filled rounded rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. If it is filled you can define the individual colours for the centre and the edges, and if these colours are not the same, you will get a gradient effect from one to the other (the colour settings will over-ride the base colour set with the function {}{}draw_set_colour(){}{}).You can define how precise the drawing of the corners is with the function {}{}draw_set_circle_precision(){}{}, but the corners are always drawn with a fixed radius. Should you need to change the corner radius you should use the function {}{}draw_roundrect_colour_ext(){}{}. Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms.":"使用此函数，您可以绘制圆角矩形或填充圆角矩形的轮廓，其中 (x1,y1) 位置是左上角，(x2,y2) 位置是右下角。如果已填充，则可以定义中心和边缘的各种颜色，如果这些颜色不相同，则会得到从一种颜色到另一种颜色的渐变效果 (颜色设置将使用函数 {}{}draw_set_colour(){}{} 替代基本颜色集)。可以使用函数 {}{}draw_set_circle_precision(){}{} 定义角点的绘制精度，但角点始终使用固定半径绘制。如果需要更改拐角半径，应使用函数 {}{}draw_roundrect_colour_ext(){}{}。请注意，由于各种支持的平台之间的差异，绘制的矩形可能需要不同的值 (x、y、宽度或高度上的 (+/-1)) 来绘制所需的尺寸。",
    "{}NOTE{}: If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}注意{}：如果要使用着色器绘制形状，请注意，大多数着色器都需要以下输入：顶点、纹理、颜色。但是，使用此函数时，仅传入顶点和颜色数据，因此着色器可能无法绘制任何内容(或绘制某些内容但不正确)。如果需要以这种方式绘制形状，则应考虑到这一点对着色器进行自定义。"
}