{
    "The x coordinate of the bottom right corner of the rectangle.":"矩形右下角的x坐标。",
    "The x coordinate of the top left corner of the rectangle.":"矩形左上角的x坐标。",
    "The y coordinate of the bottom right corner of the rectangle.":"矩形右下角的y坐标。",
    "The y coordinate of the top left corner of the rectangle.":"矩形左上角的y坐标。",
    "This will draw a rectangle outline, with its top left corner at (100,100) and its bottom right corner at (300,200).":"这将绘制一个矩形轮廓，其左上角为 (100,100)，右下角为 (300,200)。",
    "Whether the rectangle is drawn filled (false) or as a one pixel wide outline (true).":"矩形是填充 (false) 还是作为一个像素宽的轮廓 (true) 绘制。",
    "With this function you can draw either an outline of a rectangle or a filled rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms.":"使用此函数，您可以绘制矩形或填充矩形的轮廓，其中 (x1,y1) 位置是左上角，(x2,y2) 位置是右下角。请注意，正在绘制的矩形可能需要使用所需尺寸绘制不同的值 (x、y、宽度或高度上的 (+/-1))，这是因为各种支持的平台之间存在差异。",
    "{}NOTE{}: If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}注意{}：如果要使用着色器绘制形状，请注意，大多数着色器都需要以下输入：顶点、纹理、颜色。但是，使用此函数时，仅传入顶点和颜色数据，因此着色器可能无法绘制任何内容(或绘制某些内容但不正确)。如果需要以这种方式绘制形状，则应考虑到这一点对着色器进行自定义。"
}