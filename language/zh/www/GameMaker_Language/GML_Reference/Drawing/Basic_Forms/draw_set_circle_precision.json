{
    "The above code will draw all circles using a 12 sided polygon.":"上述代码将使用12边多边形绘制所有圆。",
    "The precision of all circles drawn after this function is called.":"调用此函数之后绘制的所有圆的精度。",
    "To optimise performance when drawing circles, {}GameMaker{} basically draws a polygon shape with enough sides to make it {}appear{} circular. However, depending on how big or small you need your circles to be, you may find that changing\n    this value can help increase the performance of your game, or make the circles look better. The precision value that you can input into this function is the number of sides the circle polygon has, and this number can be anything between 4 and 64,\n    {}but must be a number divisible by 4{}, with a default value of 24.":"为了优化绘制圆时的性能，{}GameMaker{}基本上绘制了一个多边形形状，该形状具有足够的边以使其显示为{}圆形{}。但是，根据您需要的圆圈的大小，您可能会发现\n这个值可以帮助提高游戏的性能，或者使圆圈看起来更好。可以输入到此函数中的精度值是圆多边形具有的边数，此数字可以是介于4和64之间的任意值，\n{}但必须是可被4{}整除的数字，默认值为24。",
    "{}NOTE{}: If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}注意{}：如果要使用着色器绘制形状，请注意，大多数着色器都需要以下输入：顶点、纹理、颜色。但是，使用此功能时，仅传入顶点和颜色数据，因此\n着色器可能无法绘制任何内容(或绘制某些内容但不正确)。如果需要以这种方式绘制形状，则应考虑到这一点对着色器进行自定义。"
}