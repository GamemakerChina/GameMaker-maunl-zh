{
    "The colour of the first corner.":"第一个角的颜色。",
    "The colour of the second corner.":"第二个角的颜色。",
    "The colour of the third corner.":"第三个角的颜色。",
    "The x coordinate of the triangle\u0027s first corner.":"三角形第一个拐角的x坐标。",
    "The x coordinate of the triangle\u0027s second corner.":"三角形第二个拐角的x坐标。",
    "The x coordinate of the triangle\u0027s third corner.":"三角形第三个角点的x坐标。",
    "The y coordinate of the triangle\u0027s first corner.":"三角形第一个拐角的y坐标。",
    "The y coordinate of the triangle\u0027s second corner.":"三角形第二个拐角的y坐标。",
    "The y coordinate of the triangle\u0027s third corner.":"三角形第三个角点的y坐标。",
    "This would draw a filled isosceles right-angled triangle with red at the right angle, blue on the other two corners.":"这将绘制一个填充的等腰直角三角形，右角为红色，另外两个角上为蓝色。",
    "Whether the triangle is an outline (true) or filled in (false).":"三角形是轮廓(true)还是填充(false)。",
    "With this function you can draw either an outline of a triangle or a filled triangle. If it is filled you can define the individual colours for each corner point and if these colours are not the same, you will get a gradient effect from one to the other (the colour settings will over-ride the base colour set with the function {}{}draw_set_colour(){}{}).":"使用此函数，您可以绘制三角形或填充三角形的轮廓。如果已填充，则可以为每个角点定义单个颜色，如果这些颜色不相同，则会得到从一个到另一个的渐变效果(颜色设置将使用函数{}{}draw_set_colour(){}{}覆盖基础颜色集)。",
    "{}NOTE{}: If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}注意{}：如果要使用着色器绘制形状，请注意，大多数着色器都需要以下输入：顶点、纹理、颜色。但是，使用此函数时，仅传入顶点和颜色数据，因此着色器可能无法绘制任何内容(或绘制某些内容但不正确)。如果需要以这种方式绘制形状，则应考虑到这一点对着色器进行自定义。"
}