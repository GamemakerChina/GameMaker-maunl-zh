{
    "Any one of the following formats can be used when creating a surface:":"创建表面 时，可以使用以下任何一种格式：",
    "Formats":"格式",
    "If automatic depth buffer generation is enabled (the default), a depth buffer and stencil buffer are also created for the surface. This can be turned off using&nbsp;{}{}surface_depth_disable{}{}.":"如果启用自动深度缓冲区生成 (默认)，还会为表面创建深度缓冲区和模板缓冲区。可以使用 {}{}surface_depth_disable{}{} 关闭此功能。",
    "It is highly recommended that all surfaces are created with a size that is a power of 2, e.g. 16, 128, 512 or 1024 pixels in size. This is not exactly necessary on certain platforms (like Windows and MacOS) but it will certainly increase compatibility on those targets, while for HTML5 and devices it is essential and very it\u0027s important that you remember this or you may run into problems later.":"强烈建议所有表面的大小均为 2 的幂，例如大小为 16、128、512 或 1024 像素。这在某些平台 (如 Windows 和 MacOS) 上并不是完全必要的，但它肯定会提高这些目标的兼容性，而对于 HTML5 和设备来说，这是必不可少的，并且记住这一点非常重要，否则以后可能会遇到问题。",
    "It is highly recommended that all surfaces be created with a size that is a power of 2, i.e. 16, 128, 512 or 1024 pixels in size, for example. This is not exactly necessary on certain platforms (like Windows and MacOS) but it will certainly increase compatibility on those targets, while for HTML5 and devices it is essential and very it\u0027s important that you remember this or you may run into problems later.":"强烈建议创建的所有表面 的大小均为 2 的幂，例如，大小为 16、128、512 或 1024 像素。这在某些平台 (如 Windows 和 MacOS) 上并不是完全必要的，但它肯定会增加这些目标上的兼容性，而对于 HTML5 和设备来说，这是必不可少的，而且非常重要的是，你要记住这一点，否则你以后可能会遇到问题。",
    "It is highly recommended that all surfaces be created with a size that is a power of 2, ie: 16, 128, 512 or 1024 pixels in size, for example. This is not exactly necessary on certain platforms (like Windows and MacOS) but it will certainly increase compatibility on those targets, while for HTML5 and devices it is essential and very it\u0027s important that you remember this or you may run into problems later.":"强烈建议创建大小为2的所有表面，即：例如，尺寸为16, 128,512或1024像素。在某些平台(如Windows和MacOS)上，这并不是完全必要的，但它肯定会提高这些目标的兼容性，而对于HTML5和设备来说，这是至关重要的，记住这一点非常重要，否则以后可能会遇到问题。",
    "Surface Format Type Constant":"表面格式类型常量",
    "The above code checks to see if a surface exists and if it does not it will create a surface that is 1024 pixels wide and 1024 pixels high, assigning it to the variable \"surf\". The drawing target is then set to the new surface, which is cleared and made transparent before having the drawing target reset to the display. Finally the surface is assigned to a view.":"上面的代码检查表面是否存在，如果不存在，则会创建一个宽 1024 像素、高 1024 像素的表面，并将其分配给变量 \"surf\"。然后将绘图目标设置为新表面，在将绘图目标重置为显示器之前，该表面将被清除并变得透明。最后将表面分配给视图。",
    "The above code checks to see if a surface exists and if it does not it will create a surface that is 1024 pixels wide and 1024 pixels high, assigning it to the variable {}surf{}. The drawing target is then set to the new surface, which is cleared and made transparent before having the drawing target reset to the display. Finally the surface is assigned to a view.":"上面的代码检查表面是否存在，如果不存在，则会创建一个宽 1024 像素、高 1024 像素的表面，并将其分配给变量 {}surf{}。然后将绘图目标设置为新表面，在将绘图目标重置为显示器之前，该表面将被清除并变得透明。最后将表面分配给视图。",
    "The above code checks to see if a surface exists and if it does not it will create a surface that is 1024 pixels wide and 1024 pixels high, assigning the index to the variable \"surf\". The drawing target is then set to the new surface, which is cleared and made transparent before having the drawing target reset to the display. Finally the surface is assigned to a view.":"上述代码检查表面是否存在，如果不存在，将创建一个宽度为1024像素、高度为1024像素的表面，并将索引指定给可变的\"浏览\"。然后将绘制目标设置为新表面，在将绘制目标重置为显示之前，新表面将被清除并变为透明。最后，将表面指定给视图。",
    "The height of the surface to be created":"要创建的表面的高度",
    "The height of the surface to be created.":"要创建的表面的高度。",
    "The width of the surface to be created":"要创建的表面的宽度",
    "The width of the surface to be created.":"要创建的表面的宽度。",
    "This format supports 4 channels (red, green, blue, alpha) with 4 bits each, meaning each channel has a 0-15 range":"此格式支持 4 个通道 (红、绿、蓝、Alpha)，每个通道有 4 位，这意味着每个通道的范围为 0-15",
    "This format supports 4 channels (red, green, blue, alpha) with each channel being a 16-bit float, providing a higher precision{} {} An example use case is HDR, as this format would allow you to use values past the default 0-255 colour range ":"此格式支持 4 个通道 (红、绿、蓝、Alpha)，每个通道为 16 位浮点数，可提供更高的精度 {}{}HDR 是一个示例用例，因为此格式允许您使用超出默认 0-255 颜色范围的值",
    "This format supports 4 channels (red, green, blue, alpha) with each channel being a 32-bit float, providing the highest precision, however this is slower to render to than 16-bit formats and is not as widely supported":"此格式支持 4 个通道 (红、绿、蓝、Alpha)，每个通道为 32 位浮点，可提供最高精度，但渲染速度慢于 16 位格式，且不受广泛支持",
    "This format supports a single channel (red) with a 16-bit floating point value{} {} Since it only contains one channel, it takes a quarter of the space compared to the format above (which stores RGBA){} {} When read in a shader, all channels except red will be 0 ":"此格式支持具有 16 位浮点值的单个通道 (红色){}{} 因为它只包含一个通道，所以与上面的格式 (存储 RGBA) 相比，它占用空间的四分之一。{}{} 在着色器中读取时，除红色外的所有通道都将为 0",
    "This format supports a single channel (red) with a 32-bit floating point value":"此格式支持具有 32 位浮点值的单个通道 (红色)",
    "This format supports a single channel (red) with an 8-bit value (0-255){} {} Since it only contains one channel, it takes a quarter of the space compared to the format above (which stores RGBA){} {} When read in a shader, all channels except red will be 0 ":"此格式支持具有 8 位值 (0-255) 的单个通道(红色){}{} 因为它只包含一个通道，所以与上面的格式 (存储 RGBA) 相比，它占用的空间是上面格式的四分之一。{}{} 在着色器中读取时，除红色外的所有通道都将为 0",
    "This function creates a new surface and returns it.":"该函数创建一个新表面并返回它。",
    "This function is used to create a surface and will return the index of the surface which should be stored in a variable for future function calls. When the surface is first created, it may contain \"noise\" as basically it is just an area of memory that is put aside for the purpose (and that memory may still contain information), so you may want to clear the surface before use with a function like {}{}draw_clear_alpha(){}{}.":"此函数用于创建表面，并将返回表面的索引，该索引应存储在变量中，以供将来调用函数时使用。首次创建表面时，它可能包含\"噪波\"，因为基本上它只是为此目的而放在一边的内存区域(该内存可能仍包含信息)，因此您可能希望在使用诸如{}{}draw_clear_alpha(){}{}之类的函数之前清除表面。",
    "This is similar to the format above, however it contains two channels: red and green":"这与上面的格式类似，但它包含两个通道：红色和绿色",
    "When the surface is first created, it may contain \"noise\" as basically it is just an area of memory that is put aside for the purpose (and that memory may still contain information), so you may want to clear the surface before use with a function like {}{}draw_clear_alpha{}{}.":"首次创建表面时，它可能包含 \" 噪声\"，因为基本上它只是为此目的而保留的内存区域 (并且该内存可能仍然包含信息)，因此您可能需要在使用之前清除表面类似 {}{}draw_clear_alpha{}{} 的函数。",
    "You can optionally specify the format that will be used to store the surface data in memory. The default format is {}surface_rgba8unorm{}.":"您可以选择指定将用于在内存中存储表面 数据的格式。默认格式为 {}surface_rgba8unorm{}。",
    "{}(Default) {}This format supports 4 channels (red, green, blue, alpha) with 8 bits each, meaning each channel has a 0-255 range{} {} \"unorm\" refers to these values being normalised into a 0-1 range when read in shaders ":"{}(默认){} 此格式支持 4 个通道 (红、绿、蓝、Alpha)，每个通道 8 位，这意味着每个通道的范围为 0-255{}{} \"unorm\" 是指在读取着色器时将这些值归一化为 0-1 范围",
    "{}{}NOTE{}{}&nbsp;It is highly recommended that all surfaces are created with a size that is a power of 2, e.g. 16, 128, 512 or 1024 pixels in size. This is not exactly necessary on certain platforms (like Windows and MacOS) but it will certainly increase compatibility on those targets, while for HTML5 and devices it is essential and very it\u0027s important that you remember this or you may run into problems later.":"{}{} 注意{}{} 强烈建议创建的所有曲面的尺寸均为 2 的幂，例如大小为 16、128、512 或 1024 像素。这在某些平台 (如 Windows 和 MacOS) 上并不是完全必要的，但它肯定会提高这些目标的兼容性，而对于 HTML5 和设备来说，这是必不可少的，并且记住这一点非常重要，否则以后可能会遇到问题。",
    "{}{}OPTIONAL{}{}&nbsp;The format to use for storing surface data, default is&nbsp;{}surface_rgba8unorm{}":"{}{}可选{}{} 用于存储表面数据的格式，默认为 {}surface_rgba8unorm{}"
}