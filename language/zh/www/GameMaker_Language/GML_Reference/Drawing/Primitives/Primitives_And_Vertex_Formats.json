{
    "A primitive is a type of drawing done using points to define what is shown on the screen. They can be made up of single points, lines, or triangles and can be coloured, have alpha blending and even be given a texture, which means that they can be used to create some very exciting effects in a 2D game! For example, you can create a rectangle using multiple triangle primitives, then texture it with a flag sprite and in the draw event of an instance have that flag \"wave\" in the wind and distort the sprite you used by simply modifying the points that form the primitive.":"基元(图形基元,图元,图形输出原语)是一种使用点来定义屏幕上显示的内容的绘图类型。它们可以由单点、线或三角形组成，可以着色，有阿尔法混合，甚至可以赋予纹理，这意味着它们可以用来在2D游戏中创造一些非常令人兴奋的效果！例如，您可以使用多个三角形基元创建一个矩形，然后使用标志精灵对其进行纹理化，并且在实例的绘制事件中，通过简单地修改形成基元的点来使标志\"波浪\"在风中扭曲您使用的精灵。",
    "For an overview of how to build primitives using the vertex functions, see:":"有关如何使用顶点函数构建基元的概述，请参阅：",
    "Guide To Primitives And Vertex Building":"基元和顶点构建指南",
    "Information on drawing primitives can be found on the following pages:":"有关绘制基元的信息，请参见以下页面：",
    "Once you have created your vertex format (see the section above) you can then use it to build the primitives that you want to draw using the following veretx buffer functions:":"创建顶点格式后(请参阅上面的部分)，您可以使用它来构建要使用以下veretx缓冲区函数绘制的基元：",
    "Primitives And Vertex Formats":"基元和顶点格式",
    "{}GameMaker{}&nbsp;permits you to define your own {}vertex formats{} from which you can create your own custom primitives. This can greatly speed up shader operations or can be used to extend their capabilities and create surprising effects. You can find information on this in the following sections:":"{}GameMaker{}允许您定义自己的{}顶点格式{}，您可以从中创建自己的自定义基元。这可以大大加快着色器操作，或者可以用来扩展它们的函数并创建令人惊讶的效果。您可以在以下部分中找到相关信息：",
    "{}IMPORTANT!{} The primitives that you build should follow the format that you have set using the Vertex Format functions, so if you have defined a vertex format with only positional data, there is no point building your primitive with colour data. You should note that the order in which you add properties to the primitive you are building is defined by the order in which you added these properties when creating the vertex format, so if you have defined the vector format with the order position, colour and texture coordinate, you {}must{} add these properties to the primitive being built in the same order otherwise you will get errors.":"{}重要！{}您构建的基元应遵循使用顶点格式函数设置的格式，因此，如果您仅使用位置数据定义了顶点格式，则使用颜色数据构建基元是没有意义的。您应该注意，您向正在构建的原语添加属性的顺序是由您在创建顶点格式时添加这些属性的顺序定义的，因此如果您使用顺序位置、颜色和纹理坐标定义了向量格式，则{}必须{}将这些属性以相同的顺序添加到正在构建的基元中，否则您将获得错误。",
    "{}WARNING! {}These functions do not work with the HTML5 module unless you have enabled OpenGL in the {}Game Options{}.":"{}警告！{}除非您在{}游戏选项{}中启用了OpenGL，否则这些函数不能与HTML5模块一起使用。"
}