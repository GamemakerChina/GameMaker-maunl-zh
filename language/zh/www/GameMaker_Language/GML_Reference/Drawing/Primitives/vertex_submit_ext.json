{
    "In the Create event, a vertex buffer is created and an empty array with it to store info about every range of vertices. A total of 8 triangles are added to the vertex buffer using the default&nbsp;{}passthrough_vertex_format{},&nbsp;each with a random position somewhere in the room, a random colour and a random width and height. A&nbsp;{}struct{}&nbsp;is also pushed onto the array using&nbsp;{}{}array_push{}{}&nbsp;that stores the visibility and range of the vertices of each triangle.&nbsp;Finally the vertex buffer is frozen with&nbsp;{}{}vertex_freeze{}{}&nbsp;so it can be submitted to the GPU faster.":"在 Create 事件中，将创建一个顶点缓冲区和一个空数组，用于存储有关每个顶点范围的信息。使用默认的 {}passthrough_vertex_format{} 总共将 8 个三角形添加到顶点缓冲区中，每个三角形在房间中的某个位置具有随机位置、随机颜色以及随机宽度和高度。还使用存储每个三角形顶点的可见性和范围的 {}{}array_push{}{} 将 {2}struct{3} 推送到数组中。最后，使用 {}{}vertex_freeze{}{} 冻结顶点缓冲区，以便可以更快地将其提交给 GPU。",
    "In the Create event, a vertex buffer is created using&nbsp;{}{}vertex_create_buffer{}{}. 100 vertices are then added to it in a&nbsp;{}repeat{}&nbsp;loop. Every vertex gets a random position in the room, a white colour and a texture coordinate that\u0027s unused but must be there, according to the {}passthrough_vertex_format{} used.":"在 Create 事件中，使用 {}{}vertex_create_buffer{}{} 创建顶点缓冲区。然后，在 {}repeat{} 循环中向其中添加 100 个顶点。根据所使用的 {}passthrough_vertex_format{}，每个顶点都会在房间中获得一个随机位置、白色和未使用但必须存在的纹理坐标。",
    "In the Draw event, all groups of vertices are submitted separately with a call to&nbsp;{}{}vertex_submit_ext{}{}&nbsp;inside a&nbsp;{}repeat{} loop. If any group is not visible, it is skipped and the next one is checked.":"在 Draw 事件中，所有顶点组均通过在 {4}repeat{5} 循环内调用 {}{}vertex_submit_ext{}{} 来单独提交。如果任何组不可见，则会跳过该组并检查下一组。",
    "In the Draw event, the vertex buffer is submitted using&nbsp;{}{}vertex_submit_ext{}{}&nbsp;as a {}pr_linestrip{}. The starting vertex is always the first&nbsp;one (indicated by the offset value&nbsp;{}0{}), the number&nbsp;of vertices is calculated using&nbsp;{}{}current_time{}{}&nbsp;with a modulo&nbsp;operator used to create a simple animation that loops.":"在 Draw 事件中，使用 {}{}vertex_submit_ext{}{} 作为 {}pr_linestrip{} 提交顶点缓冲区。起始顶点始终是第一个顶点 (由偏移值 {}0{} 表示)，顶点数使用 {}{}current_time{}{} 和用于创建循环的简单动画的模运算符来计算。",
    "The above code shows a basic call to the function&nbsp;{}{}vertex_submit_ext{}{}. The number of vertices is 6, which is a multiple of 3, as required for the primitive type used {}pr_trianglelist{}.":"上面的代码显示了对函数 {}{}vertex_submit_ext{}{} 的基本调用。顶点数量为 6，是 3 的倍数，符合使用的 {}pr_trianglelist{} 基元类型的要求。",
    "The code example above fills a vertex buffer with 100 random points and then progressively draws more points using the value of the built-in variable&nbsp;{}{}current_time{}{}.":"上面的代码示例用 100 个随机点填充顶点缓冲区，然后使用内置变量 {}{}current_time{}{} 的值逐步绘制更多点。",
    "The code example above shows how to treat a vertex buffer as groups of vertices, each given by a range and number of vertices. The visibility&nbsp;of every group&nbsp;of vertices can be set separately.":"上面的代码示例展示了如何将顶点缓冲区视为顶点组，每个顶点由顶点的范围和数量给定。每组顶点的可见性可以单独设置。",
    "The function supports both regular and&nbsp;{}frozen{}&nbsp;vertex buffers.":"该函数支持常规和 {} 冻结 {} 顶点缓冲区。",
    "The number of vertices must be in accordance with the primitive type you\u0027re drawing.":"顶点的数量必须与您正在绘制的图元类型一致。",
    "The number of vertices to submit. This value is clamped to the size&nbsp;of the vertex buffer.":"要提交的顶点数。该值被限制为顶点缓冲区的大小。",
    "The offset in the vertex buffer, or, the index of the first vertex in the buffer to submit. Must be &gt; 0. Use {}-1{} to submit all vertices after the given&nbsp;offset.":"顶点缓冲区中的偏移量，或者缓冲区中要提交的第一个顶点的索引。必须是 &amp; gt; 0. 使用 {}-1{} 提交给定偏移量之后的所有顶点。",
    "The primitive type to use.":"要使用的原始类型。",
    "The range is provided as an offset and number of vertices to submit. The&nbsp;offset can be any value greater than 0, the number&nbsp;of vertices the actual number to submit,&nbsp;or the value&nbsp;{}-1{}&nbsp;to indicate that all vertices starting at the offset should be submitted.":"该范围以偏移量和要提交的顶点数的形式提供。偏移量可以是任何大于 0 的值、要提交的实际数量的顶点数或值 {}-1{}( 表示应提交从该偏移量开始的所有顶点)。",
    "The texture to use (or {}-1{} for no texture).":"要使用的纹理 (或 {}-1{} 表示无纹理)。",
    "The vertex buffer to use.":"要使用的顶点缓冲区。",
    "This function can only be used in the&nbsp;{}Draw Events{}.":"此函数只能在 {} 绘制事件 {} 中使用。",
    "This function submits a range of vertices in the given vertex buffer to the GPU for drawing.":"该函数将给定顶点缓冲区中的一系列顶点提交给 GPU 进行绘制。",
    "Usage Notes":"使用说明",
    "You can use&nbsp;{}{}vertex_submit{}{}&nbsp;if you need to submit the entire vertex buffer.":"如果您需要提交整个顶点缓冲区，可以使用 {}{}vertex_submit{}{}。",
    "{}{}WARNING{}{}&nbsp;When using a surface as the texture (returned by&nbsp;{}{}surface_get_texture{}{}), you should make sure that the surface itself exists ({}{}surface_exists{}{}).":"{}{} 警告{}{} 使用表面作为纹理 (由 {}{}surface_get_texture{}{} 返回) 时，应确保表面本身存在 ({}{}surface_exists{}{}) 。"
}