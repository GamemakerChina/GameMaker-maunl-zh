{
    "The above code will get the height of the given string, taking into account the line separation and line-break width, and then draw two lines of text, using the returned total string height as a separator.":"上面的代码将得到给定字符串的高度，考虑到行分隔和换行宽度，然后绘制两行文本，使用返回的总字符串高度作为分隔符。",
    "The distance in pixels between lines of text as if the string was being drawn.":"文本行之间的像素距离，就像正在绘制字符串一样。",
    "The maximum width (in pixels) of the string before a line break as if the string was bring drawn.":"换行符前字符串的最大宽度 (以像素为单位)，就像字符串被绘制一样。",
    "The string to measure the height of.":"要测量的高度的字符串。",
    "This function will return the height (in pixels) of the input string, taking into account the line separation and line-break width (which is defined as the number of pixels that the string can occupy before a line break is inserted). It is very handy\n    for calculating distances between text elements based on the tallest of the letters that make up the string as well as the actual string length itself when spread over several lines as it would be drawn with {}{}draw_text_ext(){}{}    using the currently defined font. Separation and width can be set to -1 to get the default spacing.":"该函数将返回输入字符串的高度 (以像素为单位)，同时考虑到行分隔和换行符宽度 (定义为插入换行符之前字符串可以占用的像素数)。非常方便\n用于计算文本元素之间的距离，该距离基于构成字符串的最高字母以及实际字符串长度本身，当它分布在几行上时，就像使用 {}{} draw_text_ext(){}{} 使用当前定义的字体。间隔和宽度可以设置为-1，以获得默认间距。"
}