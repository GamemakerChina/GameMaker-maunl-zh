{
    "The above code first defines a function {}debug_character{} that prints the character to the log using&nbsp;{}{}show_debug_message{}{}. It then calls the function&nbsp;{}{}string_foreach{}{}&nbsp;on a string {}\"test\"{} to execute the {}debug_character{} function on all its characters.":"上面的代码首先定义了一个函数 {}debug_character{}，该函数使用 {}{}show_debug_message{}{} 将字符打印到日志。然后，它对字符串 {10}\"test\"{11} 调用函数 {}{}string_foreach{}{}，以对其所有字符执行 {}debug_character{} 函数。",
    "The above code first defines a function {}debug_extended{}&nbsp;that shows a debug message with both the position and the character in it. Then,&nbsp;{}{}string_foreach{}{}&nbsp;is called with the {}debug_extended{} function on the string {}\"1234567890\"{}. Because the offset is -1, the first character on which the function will execute is the last one ({}\"0\"{}). The characters are traversed in a descending order because of the negative length (\"0\", \"9\", \"8\", \"7\", \"6\", ..., \"1\").":"上面的代码首先定义了一个函数 {}debug_extended{}，该函数显示包含位置和字符的调试消息。然后，使用字符串 {8}\"1234567890\"{9} 上的 {6}debug_extended{7} 函数调用 {}{}string_foreach{}{}。因为偏移量是 -1，所以函数将在其上执行的第一个字符是最后一个字符 ({}\"0\"{})。由于长度为负数 (\"0\"、\"9\"、\"8\"、\"7\"、\"6\"、……、\"1\")，字符按降序遍历。",
    "The callback function will receive two arguments for each character in the string: the character itself, and its position in the string.":"回调函数将为字符串中的每个字符接收两个参数：字符本身及其在字符串中的位置。",
    "The function optionally takes in a starting position and a length that define the range of characters over which to iterate, and the direction of iteration (left-to-right or right-to-left).":"该函数可选地接受起始位置和长度，用于定义要迭代的字符范围和迭代方向(从左到右或从右到左)。",
    "The function to execute for each of the characters in the range, with arguments {}character{} and {}position{}":"要为范围中的每个字符执行的函数，参数为 {}character{} 和 {}position{}",
    "The string to iterate over":"要重复的字符串",
    "This function executes a callback function on all characters of the given string.":"此函数对给定字符串的所有字符执行回调函数。",
    "{}{}IMPORTANT{}{}&nbsp;In&nbsp;{}GameMaker{},&nbsp;string positions start at 1 (meaning they are&nbsp;{}one-based{}), compared to other data types in {}GameMaker{}, which are all&nbsp;{}zero-based{}&nbsp;(starting at 0). So the first character in a string has a position of 1, the second character a position of 2, and so on. The last character is {}{}string_length{}(string){}.":"{}{} 重要信息{}{} 在 {}GameMaker{} 中，字符串位置从 1 开始 (表示它们 {} 从一开始 {})，而 {}GameMaker{} 中的其他数据类型都是 {} 从零开始 {}( 从 0 开始)。因此，字符串中第一个字符的位置为 1，第二个字符的位置为 2，依此类推。最后一个字符是 {}{}string_length{}(string){}。",
    "{}{}OPTIONAL{}{}&nbsp;The number of characters to iterate over and the direction in which to iterate (left-to-right (positive value) or right-to-left (negative value)).":"{}{}可选{}{} 要重复的字符数和重复方向(从左到右(正值)或从右到左(负值))。",
    "{}{}OPTIONAL{}{}&nbsp;The starting position (default is 1 for strings). Negative values count from the end of the string (e.g. -1 is the position of the last character, -2 is the position of the one before last character, etc.). 0 is treated the same as 1.":"{}{}可选{}{} 起始位置 (字符串的默认位置为 1)。负值从字符串的末尾开始计数 (例如，-1 是最后一个字符的位置，-2 是最后一个字符之前的位置，依此类推)。0 被视为与 1 相同。"
}