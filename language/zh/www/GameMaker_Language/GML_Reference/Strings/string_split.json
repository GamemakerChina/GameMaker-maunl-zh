{
    "Also see:&nbsp;{}string_split_ext{}":"另请参阅：{}string_split_ext{}",
    "For example, if the string is {}\"This is the string\"{}, it can be split by using a single space character {}\" \"{} as the delimiter. The resulting array will look like this: {}[\"This\", \"is\", \"the\", \"string\"]{}, with the original string being \"split\" wherever the delimiter was present.":"例如，如果字符串是{}\"This is the string\"{}，则可以使用单个空格字符{}\" \"{}作为分隔符进行拆分。生成的数组将如下所示：{}[\"this\"，\"is\"，\"the\"，\"string\"]{}，无论分隔符在哪里，原始字符串都是\"分割的\"。",
    "The above code creates a string {}the_string{}&nbsp;and splits it into a total of 5 (the value of&nbsp;{}max_splits{}) separate strings using&nbsp;{}{}string_split{}{}. By setting {}remove_empty{} to {}true{}, empty array elements such as the white space between the delimiter after \"def\" and the delimiter before \"ghi\" is first removed. Finally it displays a debug message using&nbsp;{}{}show_debug_message_ext{}{}, printing the first five slots in the array.":"上面的代码创建了一个字符串 {}the_string{} ，并使用 {}{}string_split{}{} 将其拆分成总共 5 个 (值为 {2}max_plits{3}) 的独立字符串。通过将 {}remove_empty{} 设置为 {}true{}，首先删除空数组元素，例如 \"def\" 之后的分隔符和 \"ghi\" 之前的分隔符之间的空格。最后，它使用 {}{}show_debug_message_ext{}{} 显示调试消息，打印数组中的前五个插槽。",
    "The above code first creates a string {}path{} that stores a path to a file. It then calls&nbsp;{}{}string_split{}{}&nbsp;on the path with a forward slash \"/\" as the delimiter and stores the array it returns in a temporary variable {}_path_parts{}.":"上面的代码首先创建存储文件路径的字符串 {}path{}。然后，它使用正斜杠 \"/\" 作为分隔符在路径上调用 {}{}string_split{}{}，并将其返回的数组存储在临时变量 {}_path_parts{} 中。",
    "The delimiter itself is never included in the resulting strings.":"分隔符本身永远不会包含在结果字符串中。",
    "The delimiter string is the boundary (either a single character or a string of characters) which causes the string to split.":"分隔符字符串是导致字符串拆分的边界(单个字符或字符串)。",
    "The delimiter to use":"要使用的分隔符",
    "The string to split using the given delimiter":"要使用给定分隔符拆分的字符串",
    "Then it shows a debug message showing the contents of the {}_path_parts{} array. Finally it stores the first array entry (the drive letter) in a variable {}drive_name{} and the last array entry (the name of the file) in a variable {}file_name{}.":"然后，它显示一条调试消息，其中显示了 {}_path_parts{} 数组的内容。最后，它将第一个数组条目 (驱动器号) 存储在变量 {}drive_name{} 中，将最后一个数组条目 (文件名) 存储在变量 {}file_name{}。",
    "This function splits a string into separate strings using the given {}delimiter{}. The separated strings are returned in a new array.":"此函数使用给定的{}分隔符{}将一个字符串分割为多个单独的字符串。分隔的字符串在新数组中返回。",
    "{}{}OPTIONAL{}{}&nbsp;This parameter determines if empty array elements should be removed from the array or not (default is {}false{}). It can be useful for those situations where two delimiters are right next to each other in the string, with nothing in between. By default, in this case, an empty string is added to the array (representing the empty string between those two delimiters). If you don\u0027t want these empty strings in the array then you should set this parameter to {}true{} instead.":"{}{}可选{}{} 此参数确定是否应从数组中移除空数组元素(默认为 {}false{})。对于字符串中两个分隔符紧挨着且中间没有任何分隔符的情况，它非常有用。默认情况下，在这种情况下，会向数组中添加一个空字符串(表示这两个分隔符之间的空字符串)。如果您不希望数组中包含这些空字符串，则应该将此参数设置为 {}true{}。",
    "{}{}OPTIONAL{}{}&nbsp;This parameter determines the maximum number of splits to make.&nbsp;Any delimiters that come after&nbsp;{}max_splits{}&nbsp;become part of the last string, e.g. splitting {}\"1|2|3|4|5\"{} with a {}max_splits{} of 3 and {}|{} as the delimiter will return {}[\"1\", \"2\", \"3\", \"4|5\"]{}.":"{}{}可选{}{} 此参数确定要进行的最大拆分数。之后的任何分隔符都将 {4}max_splits{5} 成为最后一个字符串的一部分，例如，拆分 {}\"1|2|3|4|5\"{}，其中 {}max_splits{} 为 3，并且 {}|{} 作为分隔符将返回 {}[\"1\"，\"2\"，\"3\"，\"4|5\"]{}。"
}