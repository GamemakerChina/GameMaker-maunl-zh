{
    "A rope joint is one which is used to join two instances that you want to keep a constant distance apart, no matter what other forces are acting on it. With a distance joint, you can get \"joint stretching\" where the two fixtures will separate and behave strangely should too much stress be put on the joint, however the rope joint does not do this and will not stretch any further than the maximum defined length. When you create a rope joint the two instances should already be created and have a fixture assigned, then you define the two anchor points in room coordinates. The first anchor point is connected to instance 1, the second anchor point is connected to instance 2 and the distance and the maxlength argument sets the maximum length constraint on the joint. The image below shows how this works:":"绳索关节是用于连接两个要保持恒定距离的实例的连接，无论其他力作用在这两个实例上。使用距离关节时，如果关节上的应力过大，则两个固定装置将分离并表现出奇怪的 \" 关节拉伸\"，但绳索关节不会执行此操作，并且不会拉伸超过最大定义长度。创建绳索关节时，应该已经创建这两个实例并指定了装置，然后在房间坐标中定义两个锚点。第一个锚点连接到实例 1，第二个锚点连接到实例 2，距离和 maxlength 参数设置关节上的最大长度约束。下图显示了此函数的工作原理：",
    "The above code creates and defines a new fixture and then creates an instance of \"obj_Rudder\". The fixture is then assigned to the instance that is running the code as well as the newly created one and a rope joint is created between them. Finally the fixture is deleted as it is no longer needed.":"上述代码创建并定义了一个新的装置，然后创建了一个 \"obj_Rudder\" 的实例。然后将装置指定给运行代码的实例以及新创建的实例，并在它们之间创建绳索关节。最后，由于不再需要该装置，因此将其删除。",
    "The first instance to connect with the joint":"与关节连接的第一个实例",
    "The first x coordinate for the joint, within the game world":"游戏世界中关节的第一个 X 坐标",
    "The first y coordinate for the joint, within the game world":"游戏世界中关节的第一个 Y 坐标",
    "The maximum length that the joint can \"stretch\"":"关节可以\"拉伸\"的最大长度",
    "The second instance to connect with the joint":"与关节连接的第二个实例",
    "The second x coordinate for the joint, within the game world":"游戏世界中关节的第二个 X 坐标",
    "Whether the two instances can collide (true) or not (false)":"这两个实例是否可以碰撞 (true) 或不碰撞 (false)",
    "the second y coordinate for the joint, within the game world":"游戏世界中关节的第二个 Y 坐标",
    "{}As you can see, the anchor points are specified as room coordinates so care must be taken when defining them, especially if the instances are being created at the same time as the joints rather than being placed in the room through the room editor. You should also realise that the joints are created independently of the size of the sprite of the instances or the fixtures they have attached. So, if you create a rope joint somewhere other than the origin of the instance, it is still valid and will constrain the two instances relative to the position at which it was created. If you set the \"col\" value to {}true{} then the two instances can interact and collide with each other but {}only{} if they have collision events, however if it is set to {}false{}, they will not collide no matter what.":"{} 如您所见，锚点被指定为房间坐标，因此在定义它们时必须小心，尤其是如果实例与关节同时创建，而不是通过房间编辑器放置在房间中。您还应该意识到，关节的创建与实例的精灵大小或它们附着的装置的大小无关。因此，如果在实例原点以外的位置创建绳索关节，它仍然有效，并将相对于创建它的位置约束这两个实例。如果将 \"col\" 值设置为 {}true{}，则两个实例可以相互作用并发生碰撞，但如果它们发生碰撞事件，则 {}只能{}发生碰撞，但如果设置为 {}false{}，则无论发生什么情况，它们都不会发生碰撞。"
}