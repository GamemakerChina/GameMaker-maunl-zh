{
    "Before you start to create your physics particles you will need to set the basic physics properties for them, as you would a {}fixture{} in the regular physics. Note though that setting these properties will affect {}all particles created previously{} as well as any new particles that you create, so you would normally only use these functions at the start of the game or level. However there are specific functions available to set the particle {}flags{} for individual particles (and groups of particles) which will change their properties like \"bounciness\" or \"viscosity\", enabling you to create different types of particle within the ranges of these global settings.":"在开始创建物理粒子之前，需要为它们设置基本物理特性，就像在常规物理中使用{}夹具{}一样。请注意，设置这些属性将影响{}先前创建的所有粒子{}以及您创建的任何新粒子，因此通常仅在游戏或级别开始时使用这些功能。但是，有一些特定的函数可用于为单个粒子(和粒子组)设置粒子{}标志{}，这将更改它们的特性(如\"反弹\"或粘度)，从而使您能够在这些全局设置的范围内创建不同类型的粒子。",
    "Not only can you create particles, but you can delete them too, either individually or in a region. The following functions are available for deleting particles from the system:":"不仅可以创建粒子，还可以单独或在区域中删除粒子。以下功能可用于从系统中删除粒子：",
    "Soft Body Particles":"柔体粒子",
    "The following functions are available for creating particles:":"以下函数可用于创建粒子：",
    "The following functions are available for setting and getting global particle system data:":"以下功能可用于设置和获取全局粒子系统数据：",
    "Unless you have activated the debug drawing using {}{}physics_draw_debug(){}{}, you won\u0027t see any particles on the screen when you create them. Therefore to actually see the particles, you need to draw them to the screen in the {}Draw Event{} of an instance using the following functions (note that you can also draw them using the regular {}draw_sprite{} functions if you get the data for each particle using the function&nbsp;{}{}physics_particle_get_data(){}{}):":"除非已使用 {}{}physics_draw_debug(){}{} 激活调试绘图，否则创建调试绘图时不会在屏幕上看到任何粒子。因此，要实际查看粒子，需要使用以下函数将它们绘制到实例的 {} 绘制事件 {} 中的屏幕上 (注意，如果使用函数 {}{}physics_particle_get_data(){}{} 获取每个粒子的数据，也可以使用常规的 {6}draw_sprite{7} 函数绘制它们)：",
    "You also have the following functions available for setting {}flags{} on individual particles (or groups of particles), as well as for getting information, like position or colour, from a single particle or a single group:":"您还可以使用以下函数在单个粒子(或粒子组)上设置{}标志{}，以及从单个粒子或单个组获取信息(如位置或颜色)：",
    "You can create particles in two ways - individually or in groups. Individual particles will behave exactly as defined by the global settings and the flags that were set when they were created, but groups of particles can exhibit different behaviours depending on their {}group flags{}. These {}group flags{} can be set to different values to give the group different properties, like penetration and rigidity.":"可以通过两种方式(单独或成组)创建粒子。单个粒子的行为与创建时由全局设置和设置的标志所定义的完全相同，但是根据其{}组标志{}，粒子组可以表现出不同的行为。这些{}组标志{}可以设置为不同的值，以赋予该组不同的属性，如穿透性和刚性。",
    "{}GameMaker{} uses the Box2D rigid body physics library, and as such does not permit soft body physics. However the {}{}Liquid Fun{}{} extension adds {}particles{} to the physics system, which permit the creation of simulated soft-bodies using rigid body physics. Basically, you can create a {}shape{} of particles that maintain cohesion and so simulate a full body, which, due to the interaction of the particles, gives the impression of a soft body. You can also use the physics particles to simulate liquids and other particle based physics systems.":"{}GameMaker{} 使用 Box2D 刚体物理库，因此不允许使用柔体物理。然而，{}{} Liquid Fun {}{} 扩展会在物理系统中添加{}粒子{}，从而允许使用刚体物理学创建模拟软体。基本上，可以创建{}一个保持内聚力的粒子形状{}，从而模拟整个物体，由于粒子的相互作用，这会给人留下柔软物体的印象。也可以使用物理粒子来模拟液体和其他基于粒子的物理系统。"
}