{
    "For chain shapes (which are simply a series connected edge shapes) this function will set a point as a \"connection\" to chain the edges together at. Therefore you need to have defined at least two points before binding the fixture to the instance\n    otherwise you will get an error. However, unlike for polygons, you are not limited to a maximum of eight points and can add as many as you require to create the chain and the points are defined in actual room coordinates, rather than relative to the\n    instance.":"对于链条形状(这些形状仅仅是一系列连接的边形)，此函数将设置一个点作为\"连接\"，以便将边链接在一起。因此，在将设备绑定到实例之前，需要至少定义两个点，否则将出现错误。但是，与多边形不同，最多不限于八个点，并且可以根据需要添加任意数量的点来创建链，而且这些点是在实际房间坐标中定义的，而不是相对于实例。",
    "The code above will apply a polygon shape to the fixture indexed in the variable \"fix_Ship\" and then defines three points to create a triangular shape.":"上面的代码将把一个多边形形状应用于变量 \"fix_Ship\" 中索引的夹具，然后定义三个点以创建三角形形状。",
    "This function defines the points of a polygon which has previously been set to the fixture using either {}{}physics_fixture_set_polygon_shape(){}{} or it can be used to add points to a chain of edge\n    fixtures using the function {}{}physics_fixture_set_chain_shape(){}{}. For a polygon shape, the points are relative to the origin of the fixture, with the 0,0 position of the x/y axis being the centre,\n    and the subsequent coordinates being calculated as usual in {}GameMaker{} with down/right being +x,+y and up/left being -x,-y. Here is an illustration to help you visualise this process:":"此函数定义以前使用 {}{}physics_fixture_set_polygon_shape(){}{} 设置为夹具的多边形的点，或者可以使用函数 {}{}physics_fixture_set_chain_shape(){}{} 将点添加到边缘夹具链中。对于多边形形状，这些点相对于夹具的原点，x/y 轴的 0,0 位置为中心，后续坐标在 {}GameMaker{} 中按常规计算，向下 / 向右为 +x，+y，向上 / 向左为 -x，-y。以下是帮助您直观显示此过程的图示：",
    "the index of the fixture":"夹具的索引",
    "the x position of the point ({}relative to the fixture origin{} for polygon shapes)":"点的 X 位置({}相对于多边形形状的夹具原点{})",
    "the y position of the point ({}relative to the fixture origin{} for polygon shapes)":"点的 Y 位置({}相对于多边形形状的夹具原点{})",
    "{}As you can see, any simple {}convex{} polygon can be modeled in this way, but\n    {}concave{} polygons are {}not{} supported at this moment. Finally, to close the polygon, you must bind the fixture to an instance. You should note too that you must also have at least {}three{} points defined for your polygon before binding\n    it to an instance or you will get an error and that adding a point to a fixture that does not have a polygon shape set previously will also cause an error. Note too that the maximum number of points permitted for a fixture is {}eight{}.":"{}如您所见，任何简单的{}凸{}多边形都可以通过这种方式进行建模，但此时{}不{}支持{}凹{}多边形。最后，要关闭多边形，必须将设备绑定到实例。还应注意，在将多边形绑定到实例之前，还必须至少为其定义{}三个{}点，否则将出现错误，并且向以前未设置多边形形状的装置添加点也会导致错误。请注意，固定装置允许的最大点数为{}八{}。"
}