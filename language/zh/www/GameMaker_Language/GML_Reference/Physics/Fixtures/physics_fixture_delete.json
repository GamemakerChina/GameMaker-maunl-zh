{
    "Since once a fixture has been bound to an instance that instance maintains the fixtures properties, we can remove the fixture from memory with this function, particularly if we no longer plan to use it again. Please note that failure to remove fixtures\n    after they are no longer needed may cause a memory leak which will slow down and eventually crash your game, so you should take care to clean up properly after defining and binding fixtures.":"一旦装置被绑定到一个实例上，该实例就会保持装置的属性，我们可以用这个函数从内存中删除装置，特别是当我们不再打算再次使用它时。请注意，如果在不再需要装置后没有将其删除，可能会导致内存泄漏，这将使你的游戏运行变得缓慢并最终崩溃，所以你应该注意在定义和绑定装置后正确地进行清理。",
    "The code above will create a fixture and assign its index to the variable \"fix\". It then defines the shape and density of the fixture before binding it to the instance that was created with the index stored in the variable \"inst\".\n    Finally, the fixture is deleted to prevent memory leaks as it is no longer needed.":"上面的代码将创建一个装置并将其索引分配给变量 \"fix\"。然后定义装置的形状和密度，然后将其绑定到使用存储在变量 \"sc\" 中的索引创建的实例。\n最后，装置被删除，以防止内存泄漏，因为它不再需要。",
    "the fixture that is to be deleted from memory":"要从存储器中删除的装置"
}