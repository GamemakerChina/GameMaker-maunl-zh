{
    "A struct called {}rollback_event_param{} is provided which contains all relevant values for the event.":"提供了一个名为 {}rollback_event_param{} 的结构，它包含该事件的所有相关值。",
    "A {}struct{}&nbsp;containing the following variables:{} {} {}status{} The HTTP status code of the response{} {}error{} A string describing the error ":"包含以下变量的{}结构{}：{}{} {}status{}响应的HTTP状态代码{}{}error{}描述错误的字符串",
    "Any one of the following constants may be stored in&nbsp;{}rollback_event_id{}:":"以下任何一个常量都可以存储在 {}rollback_event_id{} 中：",
    "For example, if you are player 0, and you catch the {}Rollback Start{} event in the instance of player 1, the {}player_id{} variable will still be 0 as it indicates the ID of the local player only.":"例如，如果您是玩家 0，并且在玩家 1 的实例中捕获了{}回滚开始{}事件，则变量 {}player_id{} 仍然为 0，因为它只表示本地玩家的 ID。",
    "Rollback Event":"回滚事件",
    "Rollback Events":"回滚事件",
    "Rollback Start":"回滚开始",
    "The ID of your local player (starting at 0, which initially is the host itself)":"您本地玩家的 ID (从 0 开始，最初是主机本身)",
    "The total number of players in the game":"游戏中的玩家总数",
    "The {}Rollback Event{} event is triggered at various points throughout the game, containing a {}rollback_event_id{} variable. This variable indicates what type of event has been triggered.":"在整个游戏中的各个时间点都会触发{}回滚事件{}事件，其中包含一个 {}rollback_event_id{} 变量。此变量指示已触发的事件类型。",
    "There are two Rollback-related events you can find in the \"Other\" category:":"在\"其他\"类别中可以找到两个与回滚相关的事件：",
    "This event is triggered when all the players are connected and the multiplayer game has started. It\u0027s also triggered when the room is later changed.":"当所有玩家都已连接并且多人游戏已经开始时，会触发此事件。后来换房间时也会触发。",
    "This is {}true{} if the multiplayer game just started, or&nbsp;{}false{} if only the room was changed":"如果多人游戏刚刚开始，则为 {}true{} 如果只是换了房间，则为 {}false{}",
    "Triggered when a message from {}{}rollback_chat(){}{}&nbsp;/&nbsp;{}Send Message (Rollback){}&nbsp;is received. During this event, {}rollback_event_param{} will contain the following variables:{} {} {}message{}: The message string received{} {}from{}: The ID of the player that sent the message{} {}to{}: The ID of the player that the message was sent to; will be -1 if the message was sent to everyone ":"收到来自{}{}rollback_chat(){}{} / {}发送消息(回滚){} 的消息时触发。<br>在此事件中，{}rollback_event_param{} 将包含以下变量：{}{}{}message{}：收到的消息字符串{} {}from{}：发送消息的玩家 ID{} {}to{}：被发送消息的玩家 ID 如果消息发送给所有人，则为 -1",
    "Triggered when a new player has connected. The ID of the connected player is stored in {}rollback_event_param.player_id{}.":"当新玩家已连接时触发。接入的玩家 ID 存放在 {}rollback_event_param.player_id{} 中。",
    "Triggered when a player disconnects. The ID of the disconnected player is stored in {}rollback_event_param.player_id{}.":"当玩家断开连接时触发。断开连接的玩家的 ID 存储在 {}rollback_event_param.player_id{} 中。",
    "Triggered when a player sets its {}preferences{}. During this event, {}rollback_event_param{} will contain the following variables:{} {} {}player_id{}: The ID of the player that set its preferences{} {}preferences{}: The preferences set for that player ":"当玩家设置其{}首选项{}时触发。<br>在此事件中，{}rollback_event_param{}将包含以下变量：{}{}{}player_id{}：设置其首选项的玩家 ID{}{}preferences{}：为该玩家设置的首选项",
    "Triggered when a room has been created and is ready to be shared with other players. The shareable URL is stored in {}rollback_event_param.share_url{}.{} {} You can copy this URL automatically when it becomes available by calling {}{}clipboard_set_text(){}{}. ":"当房间已创建并准备好与其他玩家共享时触发。可共享 URL 存储在 {}rollback_event_param.share_url{} 中。{}{} 您可以通过调用 {}{}clipboard_set_text(){}{}，在 URL 可用时自动复制该 URL。",
    "Triggered when information about a room is received, but before it is fully joined.{} During this event, {}rollback_event_param{} will contain the following variables:{} {} {}num_players{}: The total number of players in the game{} {}player_id{}: The ID of the local player (starting at 0) ":"收到房间信息后触发，未完全加入时触发。{} 在此事件中，{}rollback_event_param{} 会包含以下变量：{}{}{}num_players{}：游戏总人数 {}{}player_id{}：本地玩家 ID(从 0 开始)",
    "Triggered when synchronisation with a player is complete. The ID of the synchronised player is stored in {}rollback_event_param.player_id{}.":"与玩家同步完成时触发。同步玩家的 ID 存放在 {}rollback_event_param.player_id{}中。",
    "Triggered when the game is interrupted because of a player with an unstable connection. During this event, {}rollback_event_param{} will contain the following variables:{} {} {}player_id{}: ID of the player with connection issues{} {}timeout{}: How much time is remaining for that player to time out and disconnect (in milliseconds). After this amount of time, the player will be kicked and the game will resume with the remaining players. ":"当玩家连接不稳定导致游戏中断时触发。<br>在此事件中，{}rollback_event_param{} 将包含以下变量：{}{}{}player_id{}：出现连接问题的玩家 ID{}{}timeout{}：该玩家超时和断开连接还剩多少时间，单位：毫秒。在此时间之后，该玩家将被踢，游戏将与其余玩家一起继续进行。",
    "Triggered when the game resumes after an interruption (as described above). The ID of the player that reconnected is stored in {}rollback_event_param.player_id{}.":"当游戏在中断后继续时触发 (如上所述)。重新接入的玩家 ID 保存在 {}rollback_event_param.player_id{} 中。",
    "Triggered when the game/room you are connecting to is already full.":"当您要连接的游戏/房间已满时触发。",
    "Triggered while the game is synchronising with a new player. During this event, {}rollback_event_param{} will contain the following variables:{} {} {}player_id{}: ID of the player that you\u0027re synchronizing with{} {}count{}: How many synchronisation steps have been completed{} {}total{}: How many total synchronisation steps need to be completed ":"在游戏与新玩家同步时触发。在此事件中，{}rollback_event_param{}将包含以下变量：{}{}{}player_id{}：要同步的玩家的 ID{}{}count{}：已经完成了多少步同步{}{}total{}：总共需要完成多少步同步",
    "Within this event, you get a struct called {}rollback_event_param{}&nbsp;which contains all relevant values for the event:":"在此事件中，您将获得一个名为 {}rollback_event_param{} 的结构，其中包含该事件的所有相关值：",
    "You should only use this event in your game manager object rather than a player object, as&nbsp;{}rollback_event_param.player_id{} will always be the ID of your main local player and NOT the ID of the player instance that the event may trigger in.":"您应该只在游戏管理器对象中使用该事件，而不是在玩家对象中使用，因为 {}rollback_event_param.player_id{} 将始终是本地主要玩家的 ID，而不是事件可能在其中触发的玩家实例的 ID。",
    "{}Triggered when a connection attempt is rejected. The error can be caused by an invalid token, mismatch in client versions, or mismatch in protocol versions. The multiplayer session is closed automatically before the event is fired.{}":"{}连接尝试被拒绝时触发。该错误可能是由无效令牌、客户端版本不匹配或协议版本不匹配引起的。多人会话在事件触发前自动关闭。{}",
    "{}Triggered when a connection attempt is rejected. This means the client is using an obsolete version of the protocol. Before this event is fired, GameMaker will show an error message in-game (even if {}events are disabled{}). The multiplayer session is closed automatically before the event is fired.{}":"{}连接尝试被拒绝时触发。这意味着客户端使用的是该协议的过时版本。在此事件被触发之前，GameMaker 将在游戏中显示错误消息(即使{}事件被禁用{})。多人会话在事件触发前自动关闭。{}",
    "{}Triggered when the server wants clients to stop the game. Usually this event means that clients are in an inconsistent state. The multiplayer session is closed automatically before the event is fired.{}":"{}服务器希望客户端停止游戏时触发。通常，此事件表示客户端处于不一致状态。多人会话在事件触发前自动关闭。{}",
    "{}Triggered when your latency to the server is too high. The multiplayer session is closed automatically before the event is fired.{}":"{}当您的服务器延迟太高时会触发。多人会话在事件触发前自动关闭。{}"
}