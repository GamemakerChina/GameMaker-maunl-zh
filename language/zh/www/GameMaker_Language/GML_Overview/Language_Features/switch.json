{
    "A simple example of using a switch statement would be something like this:":"使用switch语句的一个简单示例如下:",
    "A {}switch{} statement has the following syntax:":"{}switch{}语句的语法如下:",
    "Each {}case{} can have its own code, so you can set up a sort of \"inheritance\" system where a case executes its own code and then the code for the next case as well.":"每个{}case{}都可以有自己的代码，所以您可以设置一种“继承”系统，其中一个case执行自己的代码，然后执行下一个case的代码。",
    "First the {}expression{} is executed.":"首先执行{}表达式{}。",
    "If no {}case{} statement has the matching value, then the {}default{} statement will be executed. It is not required to have a {}default{} statement, and if none is supplied then no action will be taken when there are no matching cases. The {}default{} statement can be placed anywhere in a switch block, however it\u0027s traditionally placed at the bottom, after all the cases.":"如果没有{}case{}语句匹配，则执行{}default{}语句。它不需要有{}default{}语句，如果没有提供，那么在没有匹配的情况下将不采取任何操作。{}default{}语句可以放置在switch块中的任何位置，但它通常被放置在所有情况之后的底部。",
    "In a number of situations you want to let your instances perform different actions depending on a particular value. You can do this using a number of consecutive {}{}if / else{}{} statements, but when the possible choices gets above two or three it is usually easier to use the {}switch{} statement.":"在许多情况下，您希望让实例根据特定值执行不同的操作。你可以使用一系列连续的{}{}if / else{}{}语句来做到这一点，但是当可能的选择超过两个或三个时，通常更容易使用{}switch{}语句。",
    "Next, its result is compared with the different constants after each of the {}case{} {}statement{}{}s{}. When we say \"constant\" what we mean is that the value in the case cannot be a variable&nbsp;expression and must be a fixed value of any {}data type{}, like {}\"fight\"{} or {}3{} or the keyword {}{}{}noone{}{}{}.&nbsp;":"接下来，将其结果与{}case{}{}语句{}{} {}后面的不同常量进行比较。当我们说“常量”时，我们的意思是在这种情况下的值不能是一个变量 表达式，必须是任何{}数据类型{}的固定值，如{}\"fight\"{}或{}3{}或关键字{}{}{}noone{}{}{}. ",
    "Note that multiple {}case{} statements can be used to execute the same statement, as the&nbsp;{}break{} is not always required for each and every {}case{}. If there is no {}break{} statement for a particular {}case{}, the execution simply continues with the code for the next case, e.g.:":"注意，可以使用多个{}case{}语句来执行同一条语句，因为并不总是每个{}case{}都需要&nbsp;{}break{}。如果对于特定的{}case{}没有{}break{}语句，则简单地继续执行下一个case的代码，例如:",
    "The above code uses {}switch{} to check for a keyboard event and then compares that to each {}case{}&nbsp;listed. If it meets any of the required values then the corresponding code is executed. Note how the&nbsp;{}switch{} can check multiple {}cases{} and execute code until the next&nbsp;{}break{}, to permit various keys to be used to get the same result.":"上面的代码使用{}switch{}检查键盘事件，然后将其与列出的每个{}case{} 进行比较。如果它满足任何所需的值，则执行相应的代码。注意 {}switch{}可以检查多个{}cases{}并执行代码，直到下一个 {}break{}，以允许使用各种键来获得相同的结果。",
    "The execution begins from the first {}case{} statement with the matching value, {}until a {}break{} statement is encountered{}.":"执行从第一个具有匹配值的{0}case{1}语句开始，{}直到遇到{}break{}语句{}。",
    "This works as follows:":"它的工作原理如下:",
    "{}NOTE{}&nbsp;The switch statement will continue to execute code within a {}case{}, until a {}break{} is encountered. If you do not use {}break{}s at the end of your cases, it will cause the switch to \"leak\" to the next {}case{}, and even to a {}default{} section, if there are no {}break{}s in the way. This can cause unintended behaviour as the execution of one {}case{} can result in multiple {}case{}s being executed, so ensure to use {}break{} where appropriate.":"{}注意{}switch语句将继续执行{}case{}内的代码，直到遇到{}break{}。如果在用例的末尾不使用{}break{}，它将导致switch“泄漏”到下一个{}case{}，甚至是一个{}default{}部分，如果没有{}break{}在中间。这可能会导致意外的行为，因为执行一个{}case{}可能会导致多个{}case{}被执行，所以确保在适当的地方使用{}break{}。"
}