{
    "Accessors":"访问器",
    "Arrays":"数组",
    "Basic Code Structure":"基本代码结构",
    "Basics of GML Code":"Gml代码基础知识",
    "Commenting Code":"注释代码",
    "Creating Functions":"创建函数",
    "Data Types ":"数据类型",
    "Evaluation Order":"运算顺序",
    "Expressions And Operators":"表达式和运算符",
    "Important Data Types":"重要数据类型",
    "Instance Keywords":"实例关键字",
    "Language Features":"语言功能",
    "Method Variables":"方法变量",
    "More about GML Code":"有关Gml代码的详细信息",
    "Runtime Functions":"运行时函数",
    "Script Functions And Variables":"脚本函数和变量",
    "Script Functions vs. Methods":"脚本函数与方法",
    "Static Variables":"静态变量",
    "Structs &amp; Constructors":"结构和构造函数",
    "Variables and Conditions":"变量和条件",
    "You can use {}Feather{}&nbsp;for intelligent code completion and error reporting in your GML Code scripts.":"您可以在Gml代码脚本中使用{}羽毛(Feather){}进行智能代码完成和错误报告。",
    "if / else and Conditional Operators":"if/ else和条件运算符",
    "{}Addressing Variables In Other Instances{}":"{}在其他实例中寻址变量{}",
    "{}This section of the manual contains all the information required to understand and use {}{}GML Code{}{}{}{}. The runtime functions in this language can be used to create your games and is added into objects from the {} {}Object Editor{}{}, although it can also be used along with&nbsp;{}{}{}GML Visual{}. Below you can see a typical image of an object with the code editor open on an event:{}":"{}本节包含理解和使用{}{} GML代码 {}{}{}{}所需的所有信息。这种语言中的运行时函数可以用来创建你的游戏，并从{}{}对象编辑器{}{}添加到对象中，尽管它也可以与&nbsp;{}{}{}GML Visual{}一起使用。下面是在事件上打开代码编辑器的对象的典型图像:{}",
    "{}Variables And Variable Scope{}":"{}变量和变量范围{}",
    "{}{}Each event has its own tab in the editor and you can add, edit, or remove code from them at any time (for more information on events see {} {}Object Events{}{}). The code itself must have a basic structure and can contain resource indices, variables, functions, expressions, keywords,&nbsp;etc. all of which are explained in the sections below. If you are a novice to programming or making the switch from {}GML Visual{}, it is recommended that you start with the page on{} {}Basic Code Structure{}{} and then read through all the other pages in this section, testing code from each one within {}{}GameMaker{}{} itself.{}":"{}{}每个事件在编辑器中都有自己的选项卡，您可以随时添加、编辑或删除其中的代码(有关事件的更多信息，请参阅{}{}对象事件{}{})。代码本身必须有一个基本的结构，可以包含资源索引、变量、函数、表达式、关键字等，所有这些都将在下面的小节中解释。如果你是编程新手或从{}GML Visual{}转换过来，建议你从{}{}基本代码结构{}{}的页面开始，然后通读这一节的所有其他页面，在{}{}GameMaker{}{}本身{}中测试每个页面的代码。"
}