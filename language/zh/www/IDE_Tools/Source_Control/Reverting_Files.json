{
    "Click on the second commit (the \"Hello World\" commit).":"点击第二个提交(\"Hello World\"提交)。",
    "First of all create a new resource - in this example we\u0027ll make a Script resource - and initially you\u0027ll see no status icon since as far as source control is concerned it doesn\u0027t exist exist yet. In the script resource add a simple line of code, like:":"首先，创建一个新的资源 -- 在本例中，我们将创建一个脚本资源 -- 最初您将不会看到任何状态图标，因为就源代码管理而言，它还不存在。在脚本资源中添加一行简单的代码，如下所示：",
    "If we now right click {}{}{}&nbsp;on the file we changed we\u0027ll get a context menu with an option to {}Revert Path{}:":"如果我们现在在我们更改的文件上右键单击{}{}{}，我们将看到一个上下文菜单，其中包含一个选项以{}还原路径{}：",
    "If you now close the code editor, the script will save and the modified file icon {}&nbsp;will appear beside it in the {}Asset Browser{}. Now, open up the {}Commit {}window and you\u0027ll see there are four staged changes, as new resources automatically get added:":"如果现在关闭代码编辑器，脚本将保存，修改后的文件图标{}将显示在{}资源浏览器{}中的文件旁边。现在，打开{}提交{}窗口，您将看到有四个阶段性更改，因为会自动添加新资源：",
    "In the previous sections you\u0027ve seen how to {}create a repository{} and {}commit things to it{}, but what happens if you make a mistake and want to \"roll back\" to a previous commit? Let\u0027s make a deliberate error and see how we can deal with it then...":"在前面的小节中，您已经了解了如何{}创建仓库{}和{}向其提交内容{}，但是如果您犯了一个错误并希望\"回滚\"到上一次提交，会发生什么呢？让我们犯一个故意的错误，然后看看我们如何处理它。",
    "Now we are back to having the erroneous file in the project again! Well, we can take this opportunity to revert only that file path instead of reverting everything to a previous revision. For that we need to do the following:":"现在，我们又回到了项目中的错误文件！那么，我们可以利用这个机会只恢复该文件路径，而不是将所有内容恢复到以前的版本。为此，我们需要做以下工作：",
    "Now we commit it as before to get it under source control. So, this was a bad idea and we want to roll back, which means to start with we need to open the {}Source Control{} &gt; {}View History{} window. Here we will see a list of all previous commits now in this window, starting with the initial commit, the commit for the script, and then the commit for the script that we have edited as a \"bad idea\":":"现在，我们像以前一样提交它，以使其处于源代码控制之下。因此，这不是一个好主意，我们想要回滚，这意味着首先我们需要打开{}源代码管理{}>{}查看历史记录{}窗口。现在，我们将在此窗口中看到所有先前提交的列表，首先是初始提交、脚本的提交，然后是我们已编辑为\"Bad idea\"的脚本的提交：",
    "Open the {}Commit Changes{}&nbsp;window.":"打开{}提交更改{}窗口。",
    "Open the {}View History{} window.":"打开{}查看历史记录{}窗口。",
    "Reverting Files":"回滚文件",
    "Right click {}{}{}&nbsp;and {}Revert Path{}.":"右键单击{}{}{}，然后单击{}还原路径{}。",
    "Right click {}{}{}&nbsp;on our script GML in the Files pane and select {}Revert Path{}.":"在文件窗格中的脚本 GML 上右键单击{}{}{}，然后选择{}还原路径{}。",
    "Right click {}{}{}&nbsp;our second commit in the {}Commit History{} pane (the \"Hello World\" commit).":"在{3}提交历史记录{4}窗格(\"Hello World\"提交)中，右键单击{}{}{}我们的第二次提交。",
    "Select {}Revert To This Revision{} and then choose {}ReLoad{} on the warning message.":"选择{}恢复到此修订版本{}，然后在警告消息上选择{}重新加载{}。",
    "That\u0027s all great for when you edit something and want to change back without having already performed a commit, but what about when you have committed one or more changes and want to roll back to a {}previous {}commit? Well, let\u0027s edit our script again to say:":"当您编辑某些内容并想要在没有执行提交的情况下更改时，这一切都很好，但是当您提交了一个或多个更改并希望回滚到{}前一个{}提交时，情况又会怎样呢？好吧，让我们再次编辑我们的脚本，如下所示：",
    "To revert a change we first need to open up the commit window again, so we go to {}Source Control{} &gt; {}Commit Changes{} once more. Our changed file will again be staged ready for committing, but this isn\u0027t what we want so we click the button {}Unstage All{} to take it out of the staging area.":"要恢复更改，我们首先需要再次打开提交窗口，因此我们再次转到{}源代码管理{}>{}提交更改{}。我们更改的文件将再次暂存以供提交，但这不是我们想要的，因此我们单击按钮{}全部取消暂存{}将其移出暂存区域。",
    "Unstage the script with the \"Hello World\" code in it.":"取消暂存包含\"Hello World\"代码的脚本。",
    "We should be back to having our \"Hello World\" code and we can then do a fresh commit to update the source control again with the corrected file.":"我们应该返回到我们的\"Hello World\"代码，然后我们可以执行新的提交，以使用更正后的文件再次更新源代码管理。",
    "When we close the code editor, again a red icon {}&nbsp;will be shown beside the script, but we\u0027ve realised that we made a mistake with our code and we want to roll back to a previous version to fix it (obviously, you could just open the script and fix it easily, since the example is so simple, but in large projects that\u0027s not normally a feasible approach). What we need to do is {}revert {}our changes.":"当我们关闭代码编辑器时，脚本旁边将再次显示一个红色图标{}，但我们已经意识到我们的代码犯了一个错误，我们希望回滚到以前的版本来修复它(显然，您只需打开脚本并轻松修复它，因为示例非常简单，但在大型项目中，这通常不是一个可行的方法)。我们需要做的是{}恢复{}我们的更改。",
    "You should see that the script now has a red status icon {}, and if we open it up, we\u0027ll have the following:":"您应该看到该脚本现在有一个红色的状态图标{}，如果我们打开它，我们将看到以下内容：",
    "You should type in a commit message and then click the {}Commit {}button, just as we explained previously. Now, we go back to our script and change the line of code to (for example):":"您应该键入一条提交消息，然后单击{}提交{}按钮，就像我们前面解释的那样。现在，我们返回到我们的脚本并将代码行更改为(例如)：",
    "a view file":"查看文件",
    "the GML script itself":"GML 脚本本身",
    "the {}.yyp{} project file":"{}.yyp{} 项目文件",
    "the {}.yy{} file referencing it":"引用它的 {}.yy{} 文件",
    "{}IMPORTANT!{} When you revert you will get a message asking you to reload or save the current project due to the file checker detecting changes on disk:{} {}You must hit Reload and not save, as saving will save what is memory rather than reloading the reverted files. ":"{}重要！{} 当您还原时，您将收到一条消息，要求您重新加载或保存当前项目，因为文件检查器检测到磁盘上的更改：{}{}您必须点击重新加载而不是保存，因为保存将节省内存，而不是重新加载还原的文件。",
    "{}The changes staged will be:":"{}暂存的更改将包括：",
    "{}We can then do a commit on the project and we\u0027ll be back to where we were once again. However we can also undo that action for the file and get our \"bad idea\" commit back by doing the following:":"{}然后我们可以在项目上做出提交，我们将再次回到我们所处的位置。但是，我们也可以通过执行以下操作来撤消对该文件操作，并重新提交我们的\"bad idea\"：",
    "{}We now have two choices. We can revert an entire revision - which will revert all files that were changed to those of the chosen commit - or we can choose to revert a path - which will simply revert a single file. Let\u0027s do the first option to start with:":"{}我们现在有两个选择。我们可以还原整个修订版本-将更改的所有文件还原为选定提交的文件-或者我们可以选择还原路径-这将简单地还原单个文件。让我们从第一个选项开始：",
    "{}When you select this option, you will revert the files back to the previous state that they were in.":"{}当您选择此选项时，您将把文件恢复到它们所处的以前状态。"
}