{
    "A tooltip containing information about a function will show when you are within that function\u0027s parentheses, so you can read about the arguments as you are entering them:":"当您位于该函数的括号内时，将显示包含有关该函数的信息的工具提示，因此您可以在输入参数时阅读有关参数的信息：",
    "Asset Refactoring":"资源重构",
    "Candidate Window":"候选窗口",
    "Code Completion":"代码完成",
    "Contextual Tooltip":"上下文工具提示",
    "Enter a new name and hit \"{}Apply{}\". The asset itself, and all references to it in your project, will be renamed.":"输入新名称，然后单击\"{}应用{}\"。将重命名资源本身以及项目中对该资源的所有引用。",
    "Enter a new name and hit \"{}Apply{}\". The asset or identifier itself, and all references to it in your project, will be renamed.":"输入新名称并点击 \"{}Apply{}\"。资产或标识符本身以及项目中对其的所有引用都将被重命名。",
    "Feather":"羽毛",
    "Feather Data Types":"羽毛数据类型",
    "Feather Directives":"羽毛指令",
    "Feather Features":"语法检查功能",
    "Feather allows you to find all references to a variable throughout your project.":"语法检查允许您查找整个项目中对某个变量的所有引用。",
    "Feather allows you to find all references to an identifier throughout your project.":"Feather 允许您在整个项目中查找对标识符的所有引用。",
    "Find All References":"查找所有引用",
    "Find Usages":"查找用法",
    "For built-in functions and variables, this will open the manual page for that symbol. For your own variables and functions, you will be taken to the document and the exact line/column where it was declared. Assets will open their respective editor window.":"对于内置函数和变量，这将打开该符号的手册页。对于您自己的变量和函数，您将被带到文档以及声明它的确切行 / 列。资产将打开各自的编辑器窗口。",
    "For example, writing a function name will display matching symbols in a list below the candidate, along with a detail tooltip when available:":"例如，编写函数名称将在候选项下方的列表中显示匹配符号，并在可用时显示详细工具提示：",
    "For user-defined functions with a {}@url{} {}JSDoc parameter{}, doing this will open that URL in the system browser.":"对于带有 {}@url{} {}JSDoc 参数 {} 的用户定义函数，执行此操作将在系统浏览器中打开该 URL。",
    "Go To Declaration":"前往声明",
    "Hover Information":"悬停信息",
    "Hovering over a colour displays its RGB and HSV values, along with a CSS hex code.":"将鼠标悬停在颜色上将显示其 RGB 和 HSV 值以及 CSS 十六进制代码。",
    "Hovering over a function displays its manual description and lists all arguments.":"将鼠标悬停在函数上将显示其手动描述并列出所有参数。",
    "Hovering over a function, sprite, colour, or any other special value will also show a&nbsp;tooltip. You can see some examples below.":"将鼠标悬停在函数、精灵、颜色或任何其他特殊值上也会显示工具提示。您可以在下面看到一些示例。",
    "Hovering over a function, sprite, colour, or any other special value will show you its information. You can see some examples below.":"将鼠标悬停在函数、精灵、颜色或任何其他特殊值上将显示其信息。您可以在下面看到一些示例。",
    "Hovering over a sprite displays its first frame and other information.":"悬停在精灵上方会显示其第一帧和其他信息。",
    "Identifier Refactoring":"标识符重构",
    "If you place your text cursor on a function header, you can open the Quick Fixes menu to generate JSDoc comments for the function:":"如果将文本光标放在函数标题上，则可以打开快速修复菜单以生成函数的 JSDoc 注释：",
    "If you place your text cursor on a function header, you can open the Quick Fixes menu to generate {}JSDoc Comments{}&nbsp;for the function:":"如果您将文本光标放在函数标题上，则可以打开 \" 快速修复 \" 菜单来为该函数生成 {}JSDoc 注释 {}：",
    "If you place your text cursor on a function header, you can open the Quick Fixes menu to generate {}JSDoc Script Comments{}&nbsp;for the function:":"如果将文本光标放在函数标题上，则可以打开\"快速修复\"菜单，为函数生成{}JSDoc脚本注释{}：",
    "If you rename an asset in your Asset Browser, Feather will automatically update all mentions of it in your project\u0027s code, so those references don\u0027t break. This can be enabled or disabled in the {}Feather Settings{}.":"如果您在资源浏览器中重命名资源，Feather将自动更新项目代码中对其的所有提及，因此这些引用不会中断。可以在{}Feather设置{}中启用或禁用此功能。",
    "If you rename an asset in your Asset Browser, Feather will automatically update all mentions of it in your project\u0027s code, so those references don\u0027t break. This can be enabled or disabled in the {}Feather settings{}.":"如果在资源浏览器中重命名资源，语法检查将自动更新项目代码中所有提到的资源，以便这些引用不会中断。可以在{}语法检查设置{}中启用或禁用此功能。",
    "In this example, the variable {}surf{}&nbsp;was selected.":"在此示例中，选择了变量 {}surf{}。",
    "JSDoc Comments":"JSDoc 评论",
    "List All References":"列出所有引用",
    "Navigate to the previous or next reference by pressing the corresponding arrow, or close it.":"通过按下相应的箭头导航到上一个或下一个参照，或将其关闭。",
    "Place your text cursor on a variable and hit {}SHIFT + F1{}&nbsp;(or use the right-click menu). A list of its usages will appear in the Search Results window at the bottom of the IDE.":"将文本光标放在变量上，然后按 {}SHIFT + F1{}( 或使用右键菜单)。其用法列表将显示在 IDE 底部的 \" 搜索结果 \" 窗口中。",
    "Place your text cursor on a variable, and hit {}F3{}. You will see a small Search bar at the top of your workspace:":"将文本光标放在变量上，然后单击 {}F3{}。您将在工作区顶部看到一个小搜索栏：",
    "Place your text cursor on a variable, and hit {}SHIFT + F3{}. This will open the Search Results window and display all references of the selected variable in a list.":"将文本光标放在变量上，然后单击 {}Shift+ F3{}。这将打开 \"搜索结果\" 窗口，并在列表中显示所选变量的所有引用。",
    "Press {}UP/DOWN{} to navigate this list, {}ENTER{} to select a symbol to use and {}ESCAPE{} to close the Candidate Window.":"按 {}UP/DOWN{} 浏览此列表，按 {}ENTER{} 选择要使用的符号，按 {}ESCAPE{} 关闭候选窗口。",
    "Pressing {}enter{} may make changes beyond entering the selected symbol, e.g. selecting a function will also insert a pair of parentheses and move the text cursor inside them if the function accepts arguments.":"按 {}enter{} 可能会进行除输入所选符号之外的更改，例如如果函数接受参数，选择一个函数还将插入一对括号并将文本光标移动到其中。",
    "Quick Fixes":"快速修复",
    "Right-click on a symbol and select \"{}Go To Declaration{}\", or press {}F1{} with your text cursor on a symbol to go to its declaration.":"右键点击符号并选择 \"{}Go ToDeclaration{}\"，或者将文本光标放在符号上时按 {}F1{} 以转至其声明。",
    "See Also":"也可以看看",
    "Snippets are covered on this page:&nbsp;{}Code Snippets{}&nbsp;(for this editor, see the&nbsp;{}The Code Editor{}&nbsp;section).":"此页面包含代码片段：{} 代码片段 {}( 有关此编辑器，请参阅 {} 代码编辑器 {} 部分)。",
    "Syntax Errors (Feather Messages)":"语法错误 (羽毛消息)",
    "The editor will display an auto-complete window, also known as a Candidate Window, under the symbol you are currently writing, if it is identified as a candidate.":"如果您当前正在编写的符号被识别为候选符号，编辑器将在该符号下方显示一个自动完成窗口，也称为候选窗口。",
    "The example above shows a quick fix used for fixing an event where the surface target was not reset after being changed.":"上面的示例显示了一个快速修复程序，用于修复表面目标在更改后未重置的事件。",
    "The&nbsp;{}Code Editor{}&nbsp;provides intelligent code completion and improved syntax checking in your documents, along with smart refactoring options.":"{} 代码编辑器 {} 在文档中提供智能代码补全和改进的语法检查，以及智能重构选项。",
    "This menu shows you a quick fix if possible, and allows you to disable the rule for that line, or change its {}severity{}.":"此菜单显示快速修复(如果可能)，并允许您禁用该行的规则或更改其{}严重性{}。",
    "This menu shows you a quick fix if possible, and allows you to disable the rule or change its {}severity{}.":"此菜单会向您显示快速修复 (如果可能)，并允许您禁用该规则或更改其 {} 严重性 {}。",
    "This page lists the features Feather provides in the GML Code editor for {}scripts{} and {}object events{}. These features will only be available if Feather is {}enabled{}.":"本页列出了语法检查在 GML 代码编辑器中为 {} 脚本 {} 和 {} 对象事件 {} 提供的功能。只有 {} 启用 {} 了语法检查时，这些功能才可用。",
    "This page lists the features provided in the GML Code editor for {}scripts{} and {}object events{}. These features will only be available if Feather is {}enabled{}, and are currently only supported in GML documents.":"本页面列出了 GML 代码编辑器中为 {} 脚本 {} 和 {} 对象事件 {} 提供的功能。仅当 {} 启用 {}Feather 时，这些功能才可用，并且目前仅在 GML 文档中受支持。",
    "This search is smart, so instead of simply {}searching for a text string{}, it looks for references of the selected variable from its declared scope. This means that two variables that have the same name but exist separately in two different objects, will not match.":"这个搜索是明智的，因此它不是简单地{}搜索文本字符串{}，而是从其声明的范围中查找所选变量的引用。这意味着具有相同名称但分别存在于两个不同对象中的两个变量将不匹配。",
    "When creating a function, the Quick Fix menu allows you to automatically generate JSDoc comments for the function.":"创建函数时，\"快速修复\"菜单允许您自动生成函数的 JSDoc 注释。",
    "When you get an error or a warning in your code, place your text cursor on the reported line and press {}CTRL/CMD + Q{} to bring up the Quick Fixes menu. Alternatively, you can click on the&nbsp;{} Feather icon in the gutter.":"当您的代码中出现错误或警告时，请将文本光标置于所报告的行上，然后按 {}Ctrl/Cmd+ Q{} 以调出 \"快速修复\" 菜单。或者，也可以单击行号中的 {} 羽化图标。",
    "When you get an error or a warning in your code, place your text cursor on the reported line and press {}CTRL/CMD + Q{} to bring up the Quick Fixes menu. Alternatively, you can click on the&nbsp;{} Feather icon in the {}Gutter{}.":"当您的代码中出现错误或警告时，请将文本光标放在报告的行上，然后按 {}CTRL/CMD + Q{} 打开 \" 快速修复 \" 菜单。或者，您也可以点击 {} 装订线 {} 中的 {} 羽化图标。",
    "You can also rename an asset through the Code Editor. Place your text cursor on the asset reference, and press {}CTRL/CMD + SHIFT + R{}.":"也可以通过代码编辑器重命名资源。将文本光标放在资源引用上，然后按 {}Ctrl/Cmd+ Shift+ R{}。",
    "You can also rename any asset or identifier (e.g. variables, functions) through the Code Editor. Place your text cursor on the identifier, and press {}CTRL/CMD&nbsp;+ R{}&nbsp;(or use the right-click menu).":"您还可以通过代码编辑器重命名任何资产或标识符 (例如变量、函数)。将文本光标放在标识符上，然后按 {}CTRL/CMD + R{}( 或使用右键菜单)。",
    "You can choose the \"{}Preview Declaration{}\" option or press {}ALT + F1{} to preview the declaration within the document.":"您可以选择 \"{} 预览声明 {}\" 选项或按 {}ALT + F1{} 预览文档中的声明。",
    "You can close this by pressing {}escape{}&nbsp;(if the Candidate Window is open, it will close first, and on a second press of {}escape{} this tooltip will close).":"您可以通过按 {}escape{} 将其关闭 (如果候选窗口打开，它将首先关闭，第二次按 {}escape{} 时，此工具提示将关闭)。",
    "{}Feather{} provides intelligent code completion and improved syntax checking in your GML Code scripts, along with smart refactoring options.":"{} 语法检查 {} 在 GML 代码脚本中提供智能代码完成和改进的语法检查，以及智能重构选项。",
    "{}The Candidate Window that appears will also display the type of the symbol that is highlighted, so you can match it against the type required by the function argument.":"{} 出现的候选窗口还将显示突出显示的符号类型，因此您可以将其与函数参数所需的类型进行匹配。",
    "{}This search is smart, so instead of simply {}searching for a text string{}, it looks for references of the selected variable from its declared scope. This means that two variables that have the same name but exist separately in two different objects, will not match.":"{} 此搜索非常智能，因此它不是简单地 {} 搜索文本字符串 {}，而是从其声明的范围中查找所选变量的引用。这意味着具有相同名称但分别存在于两个不同对象中的两个变量将不匹配。",
    "{}You can also enter the initials of the split parts of a symbol name, e.g. writing {}sdm{} will show {}show_debug_message{} in the Candidate Window, {}icl{} will show {}instance_create_layer{}, and so on.":"{} 您还可以输入符号名称拆分部分的首字母，例如写入 {}sdm{} 将在候选窗口中显示 {}show_debug_message{}，{}icl{} 将显示 {}instance_create_layer{}，依此类推。",
    "{}{}NOTE{}{}&nbsp;The&nbsp;{}Legacy Code Editor{}&nbsp;uses {}CTRL/CMD + SHIFT + R{}.":"{}{} 注意{}{}{} 旧版代码编辑器 {} 使用 {}CTRL/CMD + SHIFT + R{}。",
    "{}{}NOTE{}{}&nbsp;The&nbsp;{}Legacy Code Editor{}&nbsp;uses {}F3{} and&nbsp;{}SHIFT + F3{}.":"{}{} 注意{}{}{} 旧版代码编辑器 {} 使用 {}F3{} 和 {}SHIFT + F3{}。"
}