{
    "As you might have noticed, parts of the script text are coloured. The script editor \"knows\" about existing objects, built-in variables and functions, etc... and colour codes them accordingly. Colour-coding helps a lot in avoiding mistakes as you can see immediately if you have misspelled some name or used a keyword as a variable, or have a syntax error. However, if you don\u0027t like the colour coding, in the {}Preferences{} you can switch it on and off (you can also use {}F10{}&nbsp;to toggle it on or off in the editor) as well as customise the colours that are used.":"您可能已经注意到，脚本文本的某些部分是着色的。脚本编辑器\"了解\"现有对象、内置变量和函数等...并相应地对它们进行颜色编码。颜色编码有助于避免错误，如果您拼写错误、使用关键字作为变量或出现语法错误，您可以立即看到这一点。但是，如果您不喜欢颜色编码，可以在{}首选项{}中打开和关闭颜色编码(您也可以在编辑器中使用{}F10{}切换颜色编码)，以及自定义使用的颜色。",
    "By default all code that is written will have {}code folding{} icons beside each set of matching braces {}{}{}. These take the form of a little plus {}+{} or minus {}-{} icons, and clicking on these will \"fold\" the code within the matching braces so that it takes up less visual space.":"默认情况下，所有编写的代码在每组匹配的大括号 {}{ }{} 旁边都有 {0} 代码折叠 {1} 图标。这些图标采用小型加号 {}+{} 或减号 {}-{} 图标的形式，单击这些图标将在匹配的大括号内 \"折叠\" 代码，从而占用较少的视觉空间。",
    "Commenting your code is simple, as you just have to use \"{}//{}\" before any line of text or you can comment out whole paragraphs by using \"{}/* text here */{}\". There are even two keyboard shortcuts to comment and un-comment selected lines of code: {}&nbsp;/&nbsp;{}&nbsp;+ \"{}K{}\" to comment, and {}&nbsp;/&nbsp;{}&nbsp;+ {}&nbsp;+ \"{}K{}\" to un-comment. The following image illustrates code written using both these methods as well as some {}JS Doc{} comments (explained in more detail beliow):":"注释您的代码很简单，因为您只需在任何文本行之前使用 \"{}//{}\"，或者您可以在此处使用 \"{}/* text */{}\" 注释整个段落。甚至还有两个键盘快捷键可用于注释和取消注释选定的代码行：{}/{}+\"{}K{}\" 表示注释，{}/{}+{}+\"{}K{}\" 表示取消注释。下图说明了使用这两种方法编写的代码以及一些 {}Js Doc{} 注释 (相信会有更详细的说明)：",
    "Editing Code":"编辑代码",
    "It is worth noting that you can {}comment {}your code in various ways. Commenting your code is very important for maintaining productivity as it keeps things clear and separates sections of code in such a way that it is obvious what each part does and why it is there. It also means that if you are working in a team then you can leave notes for other members and that they will know exactly what you have done or what a specific section of code is for. Even if you are a solo developer, leaving comments in your code is important, especially if you have to leave the project and come back to it at a later date.":"值得注意的是，您可以通过各种方式{}注释{}您的代码。注释代码对于保持工作效率非常重要，因为它可以使事情保持清晰，并以一种明显的方式分隔代码的各个部分，即每个部分的作用以及它存在的原因。它还意味着，如果您在一个团队中工作，那么您可以为其他成员留下注释，他们将确切知道您已经完成了哪些操作或代码的特定部分。即使您是一个单独的开发人员，在代码中留下注释也很重要，尤其是如果您必须离开项目并在稍后的日期返回到它。",
    "The other options in this menu are to toggle a breakpoint for use with the {}Debugger{}, and to convert the GML code into GML Visual or vice versa. Note that if converting code to GML Visual, then it will {}not {}create individual actions for each line of code, but rather use a single code action to hold everything that was previously in the event or script.":"此菜单中的其他选项包括切换断点以便与 {} 调试器 {} 一起使用，以及将 GML 代码转换为 GML 可视化代码，反之亦然。请注意，如果将代码转换为 GML 可视化，则 {} 不会 {} 为每行代码创建单独的操作，而是使用单个代码操作来保存事件或脚本中以前的所有内容。",
    "The&nbsp;last option for splitting into panes&nbsp;will split the actual window into different parts where you can then drag a script or event and have it show alongside the other ones for comparing and editing.":"用于拆分为窗格的最后一个选项将实际窗口拆分为不同的部分，然后您可以在其中拖动脚本或事件，并使其与其他窗格一起显示，以便进行比较和编辑。",
    "When you start to use the script editor, it\u0027s simply a case of typing the code you want to have for the script asset or for the event, following the correct GML&nbsp;{}syntax{}. While you do this, you will get help from the {}auto-complete{} window:":"开始使用脚本编辑器时，只需按照正确的 GML{} 语法 {} 键入要用于脚本资源或事件的代码即可。执行此操作时，将从 {} 自动完成 {} 窗口获取帮助：",
    "While using the code editor you can click {}&nbsp;and drag the mouse to select a row of code or hold down&nbsp;{} then click {}&nbsp;and drag to select columns of code. Anything selected in this way can then be {}copied{}, {}cut {}and {}pasted {}using the standard keyboard shortcuts of {}&nbsp;/&nbsp;{} + \" {}C{}\", {}&nbsp;/&nbsp;{} + \"{}X{}\" and {}&nbsp;/&nbsp;{} + \"{}V{}\".":"使用代码编辑器时，您可以单击 {} 并拖动鼠标以选择一行代码，或者按住 {}，然后单击 {} 并拖动以选择代码列。然后可以使用 {}/{}+\"{}C{}\",{}/{}+\"{}X{}\" 和 {}/{}+\"{}V{}\" 的标准键盘快捷键 {3} 复制 {4}、{5} 剪切 {6} 和 {7} 粘贴 {8}以此方式选择的任何内容 。",
    "You can also manually set code folding regions using the special {}#region{} tags to mark a section of code. How this works is that you add a {}#region{} tag (along with any comment text) to the top of a section of code and then add a corresponding {}#endregion{} tag to the bottom of the section and then you can \"fold\" the code, ie: hide it away so you can cut down on the number of lines of code visible in the editor at any one time:":"您还可以使用特殊 {}#region{} 标记手动设置代码折叠区域，以标记代码的一部分。其工作原理是，将 {}#region{} 标记 (以及任何注释文本) 添加到代码部分的顶部，然后将相应的 {}#endregion{} 标记添加到部分的底部，然后可以 \" 折叠 \" 代码，即：隐藏代码，以便可以随时减少编辑器中可见的代码行数：",
    "You can right-click {}&nbsp;anywhere in the editor too to open up the following menu:":"您也可以在编辑器中的任意位置单击鼠标右键{}以打开以下菜单：",
    "{}Apart from the regular functions you\u0027d expect to cut, copy and paste lines of code you also have the option to comment or un-comment any selected text, add or remove indents, as well split the code window into 1, 2 or 3 separate panes (note that the options relating to {}#regions{} will not be available if you have not defined any in the code being edited).":"{} 除了您希望剪切、复制和粘贴代码行的常规功能外，您还可以选择对任何选定的文本进行注释或取消注释，添加或删除缩进，以及将代码窗口拆分为 1、2 或 3 个单独的窗格 (请注意，如果您尚未在正在编辑的代码中定义任何选项，则与 {}#region{} 相关的选项将不可用)。",
    "{}Scripts can also have certain JSDoc style comments added to define the properties of the functions they contain so that when you use the functions in your code they show up in auto-complete along with their arguments and other details. You can find out more about this from the section {}JSDoc Script Comments{}&nbsp;for more information.":"{} 脚本还可以添加某些 JSDoc 样式的注释来定义它们包含的函数的属性，这样当您在代码中使用这些函数时，它们将以自动完成方式显示，同时显示它们的参数和其他详细信息。有关详细信息，您可以从章节 \"{}JSDoc 脚本注释{}\" 中了解有关此的详细信息。",
    "{}The actual code looks something like this:":"{}实际代码类似于以下内容：",
    "{}This is exceptionally useful for comparing two scripts or for viewing connected scripts at the same time, without needing another window or having to switch constantly between tabs.":"{}这对于比较两个脚本或同时查看连接的脚本非常有用，而不需要另一个窗口或不得不在选项卡之间不断切换。",
    "{}This window will pop up while you are writing your code (normally after a slight pause, but this can be set in the {}Preferences{}) and give you a selection of \"best-fit\" answers in alphabetical order.":"{}编写代码时将弹出此窗口(通常稍稍暂停一下，但可以在{}首选项{}中进行设置)，并按字母顺序选择\"最佳匹配\"答案。"
}