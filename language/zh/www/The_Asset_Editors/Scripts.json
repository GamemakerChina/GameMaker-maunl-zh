{
    "A script asset can be renamed&nbsp;by right-clicking {}&nbsp;on it in the {}Asset Browser{} and selecting {}Rename{}, but note that the script name must conform to the scripting rules for assets, so they can only be alpha-numeric, must start with a letter, and the only symbol they can contain is the \"_\" under-bar symbol. The script editor in other places cannot be renamed and will have a name specific to what is being edited, like an object event for example.":"通过在{1}资源浏览器{2}中右键单击脚本资源{}并选择{}重命名{}，可以重命名脚本资源，但请注意，脚本名称必须符合资源的脚本规则，因此它们只能是字母数字，必须以字母开头，并且它们可以包含的唯一符号是下划线符号 \"_\"。其他位置的脚本编辑器无法重命名，并且将具有特定于正在编辑的内容的名称，例如对象事件。",
    "Clicking this will replace the next search string found in the script with the given replace string. Note that the \"next\" term is considered the next one after the current cursor position, and you can skip to different ones using arrow buttons at the top right of the search window.":"单击此项将用给定的替换字符串替换脚本中的下一个搜索字符串。请注意，\"下一个\"术语被视为当前光标位置之后的下一个术语，您可以使用搜索窗口右上角的箭头按钮跳到不同的术语。",
    "Clicking this will replace {}all {}examples of the search string within the script using the given replace string.":"单击此项将使用给定的替换字符串替换脚本中{}所有{}搜索到的字符串。",
    "Code Snippets":"代码片段",
    "Editing Code":"编辑代码",
    "Error Reporting":"错误报告",
    "Feather Data Types":"羽毛数据类型",
    "Feather Features":"羽毛功能",
    "For information on the rest of the right-click {}&nbsp;menu options, see the section on {}Editing{}, below.":"有关右键单击{}菜单选项其余部分的信息，请参阅下面的{}编辑{}部分。",
    "GML Code Scripts ":"GML 代码脚本",
    "GML Visual Scripts":"GML 可视化脚本",
    "If you have opened the search window using&nbsp;{}&nbsp;/&nbsp;{}&nbsp;+ \"{}F{}\", then the replace functionality will not be visible, so you need to click the Replace button {}&nbsp;to open it. Once open, you can then enter a string that will be used to replace any given search string, using the following buttons to perform the action:":"如果已使用 {}/{}+\"{}F{}\" 打开搜索窗口，则替换功能将不可见，因此需要单击 \" 替换 \" 按钮 {} 将其打开。打开后，您可以使用以下按钮输入将用于替换任何给定搜索字符串的字符串来执行操作：",
    "JSDoc Comments":"JSDoc 脚本注释",
    "Note that any optional arguments in your script functions will be shown with {}[]{} brackets around them. If you have used the {}JSDoc Script Comments{}&nbsp;within a script asset then the information you have supplied will also show here.":"请注意，脚本函数中的任何可选参数都将带有 {}[]{} 括号。如果您在脚本资源中使用了 {}JSDoc 脚本注释 {}，则您提供的信息也将显示在此处。",
    "Note that if you are editing code from an {}object event {}in the script editor and you have maximised the script editor or have it on a separate window or workspace, then the right-click {}&nbsp;editor menu will have some extra options:":"请注意，如果您正在脚本编辑器中编辑来自{}对象事件{}的代码，并且已最大化脚本编辑器或已将其放置在单独的窗口或工作区中，则右键单击{}编辑器菜单将具有一些额外的选项：",
    "Note that if you want to do a {}global {}search (ie: search the whole project rather than the current script or event), then you can press {}&nbsp;/&nbsp;{}&nbsp;+&nbsp;{}&nbsp;+ \"F\".":"请注意，如果要执行 {} 全局 {} 搜索 (即：搜索整个项目而不是当前脚本或事件)，则可以按 {}/{}+{}+\" F\"。",
    "On creating a script asset, you may be asked to choose between&nbsp;{}GML Visual{}&nbsp;and&nbsp;{}GML Code{}. See&nbsp;{}GameMaker Language{} for more information.":"创建脚本资源时，可能会要求您在 {}GML 可视化 {} 和 {}GML 代码 {} 之间进行选择。有关详细信息，请参阅 {}GameMaker 语言 {}。",
    "The Script Editor":"脚本编辑器",
    "The gutter will also mark any line of the script that has had a {}breakpoint {}added. A breakpoint is simply a place in the script where you want the {}debugger{}&nbsp;to pause the execution of your game when it is reached. You can toggle a breakpoint from any line of any script or object event by pressing \"{}f9{}\" or using the right-click {}&nbsp;menu. When you add a breakpoint, it will show up like this in the gutter:":"行号还将标记添加了 {} 断点 {} 的脚本的任何行。断点只是脚本中您希望 {} 调试器 {} 在到达时暂停游戏执行的位置。通过按 \"{}f9{}\" 或使用右键单击 {} 菜单，可以从任何脚本或对象事件的任何行切换断点。添加断点时，它将显示在行号中，如下所示：",
    "The information bar at the bottom of the IDE shows you the current line number you are on and the position along the line. It is also where you can see the code helper, which is a line of text that shows the function you are currently editing along with the arguments it requires. As you fill in the function in the editor, the arguments will highlight to show you which one you are currently editing.":"IDE 底部的信息栏将显示您当前所在的行号以及沿该行的位置。在这里您还可以看到代码帮助器，它是一行文本，显示您当前正在编辑的函数及其所需的参数。在编辑器中填写函数时，参数将突出显示，以显示当前正在编辑的参数。",
    "The main code editor is where you\u0027ll write all your code to create the script asset or fill an object event. The actual edition of your code is covered in the section on&nbsp;{}Editing{}&nbsp;further down this page.":"主代码编辑器是您编写所有代码以创建脚本资源或填充对象事件的位置。您的代码的实际版本将在本页后面的{}编辑{}一节中介绍。",
    "The script editor is where you write your GameMaker Language code, which is the built-in programming language that {}GameMaker{} uses (see the&nbsp;{}GameMaker Language{}&nbsp;section for more details). Once you become more familiar with {}GameMaker{} and want to use it to its fullest extent, it is advisable to start learning to use this language, as it greatly expands your possibilities when creating games.":"您可以在脚本编辑器中编写 GameMaker 语言代码，这是 {}GameMaker{} 使用的内置编程语言 (有关详细信息，请参阅 {}GameMaker 语言 {} 部分)。一旦您越来越熟悉 {}GameMaker{} 并希望最充分地使用它，建议您开始学习使用此语言，因为它极大地扩展了创建游戏时的可能性。",
    "The script editor opens in a window with tabs across the top to let you have multiple scripts or events in one window (although this behaviour can be changed from the {}Preferences{} to give a new window to each script or event). You can click {}&nbsp;on a tab and then drag it to change the tab order, or - if you prefer -&nbsp;you can pull it out of the current window and place it on the workspace to create a new window for that script (or add it to a different window), and you can also maximise the script editor to create a new workspace too. If you drag a script tab out of the {}IDE{} window, then a new IDE will be spawned to hold this script resource, and it can be used as you would the Main window. ":"脚本编辑器将在顶部带有选项卡的窗口中打开，使您可以在一个窗口中拥有多个脚本或事件 (尽管此行为可以从 {} 首选项 {} 更改为为每个脚本或事件提供一个新窗口)。您可以单击选项卡上的 {}，然后拖动它以更改选项卡顺序，或者，如果您愿意，也可以将其从当前窗口中拉出并放置在工作区中，以便为该脚本创建新窗口 (或将其添加到其他窗口)，还可以最大化脚本编辑器以创建新工作区。如果将脚本选项卡拖出 {}IDE{} 窗口，则将生成一个新的 IDE 来保存此脚本资源，并且可以像使用主窗口一样使用它。",
    "The {}Gutter {}is used to show the line numbers for your code and also to convey some specific pieces of information about the state of the code. Most importantly, if you make a {}typo{} or construct the code incorrectly, then the&nbsp;{}GameMaker{} {}IDE{} will inform you of the issue by flagging the line of code with a red exclamation mark {}&nbsp;showing a {}syntax{} error. You can then mouse over the symbol to get a brief description of what the issue is:":"{}行号{} 用于显示代码的行号，以及传达有关代码状态的某些特定信息。最重要的是，如果您输入 {} 错误 {} 或构造的代码不正确，{}GameMaker{}{}IDE{} 将通过使用红色感叹号 {} 标记代码行来通知您此问题，该感叹号显示 {} 语法 {} 错误。然后，可以将鼠标悬停在符号上，以获取问题的简要说明：",
    "This section simply details how the script {}editor {}works, and&nbsp;{}not{}&nbsp;how to create script assets nor how to use&nbsp;{}GML Code{}&nbsp;or&nbsp;{}GML Visual{} to make scripts. For that please see the following sections:&nbsp;":"本节简单介绍脚本{}编辑器{}的工作原理，{}不介绍{}如何创建脚本资产，也不介绍如何使用{} GML 代码{}或{} GML 可视化{}创建脚本。有关详情，请参阅以下章节：",
    "When this option is toggled, you are telling {}GameMaker{} to check not only the contents of the search string, but the case too. For example, if you have a sprite called \"{}spr_Dog{}\" and do a search for \" {}dog{}\" with this toggle {}off{}, then the sprite string will be highlighted, however if the toggle is {}on {}then it won\u0027t since \"{}Dog{}\" is no longer considered the same as \"{}dog{}\".":"切换此选项时，您将告诉 {}GameMaker{} 不仅要检查搜索字符串的内容，还要检查大小写。例如，如果您有一个名为 \"{}spr_Dog{}\" 的精灵，并在此切换 {} 关闭 {} 的情况下搜索 \"{}dog{}\"，则精灵字符串将被突出显示，但如果此切换为 {}开启{}，则不会显示，因为 \"{}dog{}\" 不再被视为与 \"{}dog{}\" 相同。",
    "When you open the script editor window it will have the following options and layout:":"打开脚本编辑器窗口时，它将具有以下选项和布局：",
    "When you toggle this, the search function will only highlight those strings that match the whole input string. For example, with it off a search for \"{}random{}\" will show up all words that contain this string - like {}irandom(){}, or {}randomise(){} - while toggling it to on would only show the function {}random(){}.":"切换时，搜索功能将仅突出显示与整个输入字符串匹配的字符串。例如，如果关闭搜索 \"{} 随机 {}\"，将显示包含此字符串的所有单词 (如 {}irandom(){} 或 {}randomise(){})，而将其切换到打开状态将仅显示函数 {}random(){}。",
    "While working in the script editor, you can press&nbsp;{}&nbsp;/&nbsp;{}&nbsp;+&nbsp;\"{}F{}\" to open up the Search box or&nbsp;{}&nbsp;/&nbsp;{} + \"{}H{}\" to open up Search and Replace:":"在脚本编辑器中工作时，您可以按 {}/{}+\"{}F{}\" 打开 \" 搜索 \" 框，或按 {}/{}+\"{}H{}\" 打开 \" 搜索和替换\"：",
    "You can get further information about using the script and code editors from the following pages:":"您可以从以下页面获取有关使用脚本和代码编辑器的详细信息：",
    "{}Add /Open Event{}: This permits you to add a new event to the object the current script belongs to, and will open a new code tab in the Script Editor for the added event. If the event selected already has code in it, then this will be opened in a new tab.":"{}添加/打开事件{}：这允许您向当前脚本所属的对象添加新事件，并将在脚本编辑器中为添加的事件打开新的代码选项卡。如果所选事件中已有代码，则将在新选项卡中打开此代码。",
    "{}Finally, the gutter will also show any bookmarked items too. To bookmark a line of code simply hold down&nbsp;{}&nbsp;/&nbsp;{}&nbsp;+ {}&nbsp;+ {}Number{} (from 0 to 9), and this will permit you to skip back to this line of code from anywhere in the IDE simply by using {}&nbsp;/&nbsp;{}&nbsp;+ {}Number{} (from 0 to 9). To delete the bookmark, simply perform the same action as you used to add it on the line of code again. When a bookmark has been added, it will show like this:":"{} 最后，行号还将显示任何带书签的项目。要为代码行添加书签，只需按住 {}/{}+{}+{}数字{}( 从 0 到 9)，即可使用 {}/{}+{}数字{}( 从 0 到 9) 从 IDE 中的任何位置跳回此代码行。要删除书签，只需执行与在代码行中再次添加书签时相同的操作。添加书签后，它将如下所示：",
    "{}Go to Object{}: This will take you to the workspace that the object with the code is on and focus on the object.":"{}转到对象{}：这会将您带到具有代码的对象所在的工作区，并将焦点放在该对象上。",
    "{}Gutter{}{}Gutter{}":"{}行号{}{}行号{}",
    "{}Here you can perform a {}local {}search for the keyword you input and once you have entered your search term, you can then use the arrows at the top right of the search window to skip from one found term to the next in the script. You can change how the search operation is carried out by toggling the following buttons:":"{}您可以在此处执行{}本地{}搜索输入的关键字，输入搜索词后，可以使用搜索窗口右上角的箭头从找到的一个词跳到脚本中的下一个词。通过切换以下按钮，可以更改执行搜索操作的方式：",
    "{}Information{}{}Information{}":"{}信息{}{}信息{}",
    "{}Main Code Editor{}{}Main Code Editor{}":"{}主代码编辑器{}{}主代码编辑器{}",
    "{}Restore to workspace{}: This will take the script editor out of a maximised/workspace state and re-chain it to the object in the workspace.":"{}恢复到工作区{}：这将使脚本编辑器脱离最大化/工作区状态，并将其重新链接到工作区中的对象。",
    "{}Script / Event Tab{}{}Script / Event Tab{}":"{}脚本/事件选项卡{}{}脚本/事件选项卡{}",
    "{}Search / Replace{}{}Search / Replace{}":"{}搜索/替换{}{}搜索/替换{}",
    "{}The Script Editor{}":"{}脚本编辑器{}",
    "{}This section deals with the&nbsp;{}script editor{}&nbsp;(also called the {}text editor{}) which is where you type in all the code that your game will require to run. This editor is used for creating&nbsp;custom script assets, as well as for coding&nbsp;{}object events{}, for adding&nbsp;{}room creation code{}, and for many other things.":"{}本节介绍{}脚本编辑器{}(也称为{}文本编辑器{})，您可以在该编辑器中键入运行游戏所需的所有代码。此编辑器用于创建自定义脚本资源，以及编码{}对象事件{}、添加{}房间创建代码{}和许多其他内容。",
    "{}You can find more information on Syntax errors (and general errors when testing or compiling your code) from the following section:":"{}有关语法错误(以及测试或编译代码时的一般错误)的详细信息，请参阅以下部分："
}