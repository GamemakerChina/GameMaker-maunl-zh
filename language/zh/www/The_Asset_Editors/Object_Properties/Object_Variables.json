{
    "An important feature of the Object Variables is that they are {}inherited {}by any child objects that you have in the Asset Browser (see the section on {}Parent Objects{} for more information), which means that you can then choose to override or change any or all of them if you wish.":"对象变量的一个重要功能是它们由您在资源浏览器中拥有的任何子对象{}继承{}(有关详细信息，请参见{}父对象{}一节)，这意味着如果愿意，您可以选择覆盖或更改其中的任何一个或全部。",
    "If you have edited an inherited Object Variable, then you can click the Delete {}&nbsp;button to remove the edit, but not the variable. The variable will still be inherited from the parent, but will use the parent default value again. If you need to completely remove the variable, then you must do this from the parent object.":"如果您编辑了继承的对象变量，则可以单击删除{}按钮来删除编辑，但不能删除变量。该变量仍将从父级继承，但将再次使用父默认值。如果需要完全删除该变量，则必须从父对象中执行此操作。",
    "Object Variables":"对象变量",
    "Object Variables And Child Objects":"对象变量和子对象",
    "The different types of variable that you can create are listed below:":"下面列出了您可以创建的不同类型的变量：",
    "When you click on the {}Variables {}button it will open up the {}Object Variables {}window, which you can then use to generate any number of variables {}before {}the Create Event of the object:":"当您单击{}变量{}按钮时，它将打开{}对象变量{}窗口，然后您可以使用该窗口在对象的创建事件{}之前{}生成任意数量的变量：",
    "When you create a child object of another object resource that has Variables defined for it, these will show up in the Object Variables window like this:":"当您创建具有为其定义的变量的另一个对象资源的子对象时，这些变量将显示在对象变量窗口中，如下所示：",
    "{}Boolean{}: A boolean is a value that is either true or false. In the Object Editor Variables window, this is simply shown as a box that you check for true and uncheck for false.":"{}布尔值(Boolean){}：布尔值为 true 或 false。在对象编辑器变量窗口中，这只显示为一个框，您可以选中 true，取消选中 false。",
    "{}Colour{}: The colour type is for you to define a colour value to be stored in the variable. You can input a real number (from 0 to 16777216, this will have an alpha value of 255), or a hex value (in the format of $RRGGBBAA), or you can double click {}&nbsp;on the colour swatch to open the {}Colour Picker{} and define the colour there.":"{}颜色(Colour){}：颜色类型用于定义要存储在变量中的颜色值。您可以输入一个实数 (从 0 到 16777216，其 Alpha 值为 255%) 或十六进制值 (格式为 $RRGGBBAA)，也可以双击色样上的 {} 以打开 {} 拾色器 {} 并在其中定义颜色。",
    "{}Expression{}: An expression is a mathematical phrase that can contain ordinary numbers, variables, strings, or GML functions as well as one or more operators. For example {}sqrt(85 * 6) + 5.5{} is an expression.":"{}表达式(Expression){}：表达式是一个数学短语，可以包含普通数字、变量、字符串或 GML 函数以及一个或多个运算符。例如，{}sqrt(85*6)+5.5{} 是一个表达式。",
    "{}Expression{}: An expression is a mathematical phrase that can contain ordinary numbers, variables, strings, or {}GML Code{} functions as well as one or more operators. For example {}sqrt(85 * 6) + 5.5{} is an expression.":"{}表达式{}：表达式是一个数学短语，可以包含普通数字、变量、字符串或{}GML Code{}函数以及一个或多个运算符。例如{}sqrt(85 * 6)+ 5.5{}就是一个表达式。",
    "{}In this window you can click on the button {}Add {}to add&nbsp;a new variable&nbsp;to the list. You can then {}name {}the variable as well as set its {}type {}and adjust its {}properties{}:":"{}在此窗口中，您可以单击按钮{}添加{}将一个新变量 添加到列表。然后，您可以为变量{}命名{}，并设置其{}类型{}并调整其{}属性{}：",
    "{}Integer{}: An integer is a whole number and can be positive or negative, for example {}30004{}, {}19{}, {}0{}, {}-300{}. Note that you can set a range of values for the output integer, as explained above for real numbers.":"{}整数(Integer){}：整数是一个整数，可以是正数也可以是负数，例如：{}30004{}，{}19{}，{}0{}，{}-300{}。请注意，您可以设置输出整数的值范围，就像上面针对实数所解释的那样。",
    "{}List{}: Selecting a list type of input means that you can then create a selection of values (these can be strings, reals, expressions etc...) of which you can then choose one or more for the variable to return. To define the items that go in the list you need to add them into the {}Options{} first (click the {}&nbsp;button):{} {}You will be able to choose the item as the default value for the variable in the main window from the drop down menu:{} {}Note that if you have {}Multi-select{} ticked in the List Options then the variable will become an array of all the selected options:{} {}":"{}列表(List){}：选择一种列表类型的输入意味着您可以创建一组值(这些值可以是字符串、实数、表达式等)。然后您可以选择一个或多个供变量返回的。要定义列表中的项，您需要首先将它们添加到{}选项{}(单击{} 按钮)：{}{}您将能够从下拉菜单中选择该项作为主窗口中变量的默认值：{}{}请注意，如果您在列表选项中勾选了{}多选{}，则变量将成为所有选定选项的数组：{}{}",
    "{}List{}: Selecting a list type of input means that you can then create a selection of values (these can be strings, reals, expressions&nbsp; etc.) of which you can then choose one or more for the variable to return. To define the items that go in the list you need to add them into the {}Options{} first (click the {}&nbsp;button):{} {}You will be able to choose the item as the default value for the variable in the main window from the drop down menu:{} {}Note that if you have {}Multi-select{} ticked in the List Options then the variable will become an array of all the selected options:{} {} ":"{}列表(List){}：选择列表类型的输入意味着您可以创建一组值（可以是字符串、实数、表达式等），然后您可以选择一个或多个值作为要返回的变量。 要定义列表中的项目，您需要先将它们添加到 {}Options{} 中（点击 {} 按钮）：{} {}您将能够选择该项目作为变量的默认值 从下拉菜单中打开主窗口：{} {}请注意，如果您在 List Options 中勾选了{}多选{}，那么该变量将成为所有选定选项的数组：{} {}",
    "{}Real{}: A real number is any number that is not a whole integer and can be positive or negative. So, {}124.5{}, {}45639.566546456{}, {}0.9{}, {}-45.5{} etc... are all examples of real numbers. All real numbers are stored as 64bit {}floating point{} values (doubles).&nbsp;The {}real {}(and {}integer{}){}&nbsp;{}data types have an option for setting a range of values which can be accessed by clicking the {}Options{}&nbsp;{}&nbsp;button:{}When you check this you can then input a start value and an end value and instead of having a fixed value shown for the variable in the Object Variables window, you will have a slider that is clamped to these values:{} {}":"{}实数(Real){}：实数是不是整数且可以是正数或负数的任何数。所以，{}124.5{}，{}45639.566546456{}，{}0.9{}，{}-45.5{}等等……。都是实数的例子。所有实数都存储为64位{}浮点{}值(双精度)。 {}实数{}(和{}整数{}){} {}数据类型有一个用于设置值范围的选项，可以通过单击{}选项{} {} 按钮：{}进行访问。选中此选项后，您可以输入起始值和结束值，而不是在对象变量窗口中显示变量的固定值，而是会有一个固定到这些值的滑块：{}{}",
    "{}Real{}: A real number is any number that is not a whole integer and can be positive or negative. So, {}124.5{}, {}45639.566546456{}, {}0.9{}, {}-45.5{} etc... are all examples of real numbers. All real numbers are stored as 64bit {}floating point{} values (doubles).&nbsp;The {}real {}(and {}integer{}){}&nbsp;{}data types have an option for setting a range of values which can be accessed by clicking the {}Options{}&nbsp;{}&nbsp;button:{}When you check this you can then input a start value and an end value and instead of having a fixed value shown for the variable in the Object Variables window, you will have a slider that is clamped to these values:{} {} ":"{}实数{}：实数是非整数的任何数字，可以是正数也可以是负数。 因此，{}124.5{}、{}45639.566546456{}、{}0.9{}、{}-45.5{} 等都是实数示例。 所有实数均存储为 64 位{}浮点{}值（双精度）。 {}实数{}（和{}整数{}）{} {}数据类型有一个用于设置值范围的选项，可通过点击 {}Options{} {} 按钮访问该选项：{}当您选中 然后，您可以输入起始值和结束值，并且不会在“对象变量”窗口中为变量显示固定值，而是会看到一个固定为这些值的滑块：{} {}",
    "{}Resource{}: A resource is simply any one of the resources that you have defined in the Asset Browser. When you select this resource type, you can then click on the {}Open Asset Explorer&nbsp;{}{} button to open the Asset Explorer and select the resource you require.":"{}资源(Resource){}：资源只是您在资源浏览器中定义的任何一个资源。选择此资源类型后，您可以单击{}打开资源浏览器{}{}按钮打开资源浏览器并选择所需的资源。",
    "{}String{}: A string is anything that has been placed within double quotation marks, for example \"fish\", \"Hello World\", or \"12345\".":"{}字符串(String){}：字符串是放在双引号内的任何内容，例如\"鱼\"、\"Hello World\"或\"12345\"。",
    "{}The variable name must start with a letter and can contain only letters, numbers, and the underscore symbol \u0027_\u0027 with a maximum length of 64 symbols. So, valid variables are things like {}fish{}, {}foo_bar{}, {}num1{}, and {}invalid{} variables would be {}6fish{}, {}foo bar{}, or {}*num{}. Once you have given the name of the variable you need to set its type, which can be any of the following:{}It is worth noting that this feature is particularly useful when working with parent/child instances - since you can have a parent object with a set of defined variables and then simply modify them in child object (see the section {}Object Variables And Child Objects{} below for more details) - and for when you add instances into the {}Room Editor{}&nbsp;(see the section on {}Layers {}&gt; {}Instance Layer{}), since you can also modify these variables for individual instances that have been placed in the room.":"{} 变量名必须以字母开头，并且只能包含字母、数字和下划线符号‘_’，最大长度为 64 个符号。因此，有效变量是类似于 {}fish{}、{}foo_bar{}、{}num1{} 这样的变量，而 {} 无效的 {} 变量是 {}6fish{}、{}foo bar{} 或 {}*num{}。给出变量的名称后，您需要设置其类型，可以是以下任何一种：{} 值得注意的是，在处理父 / 子实例时，此功能特别有用-因为您可以拥有一个具有一组已定义变量的父对象，然后只需在子对象中修改它们 (有关更多详细信息，请参阅下面的 {}对象变量和子对象{}小节) -- 以及当您将实例添加到 {} 房间编辑器 {}( 请参阅 {} 层 {}>{} 实例层 {} 一节) 时。您还可以为已放置在房间中的单个实例修改这些变量。",
    "{}The variable name must start with a letter and can contain only letters, numbers, and the underscore symbol \u0027_\u0027 with a maximum length of 64 symbols. So, valid variables are things like {}fish{}, {}foo_bar{}, {}num1{}, and {}invalid{} variables would be {}6fish{}, {}foo bar{}, or {}*num{}. Once you have given the name of the variable you need to set its type, which can be any of the following:{}It is worth noting that this feature is particularly useful when working with parent/child instances - since you can have a parent object with a set of defined variables and then simply modify them in child object (see the section {}Object Variables And Child Objects{} below for more details) - and for when you add instances into {}The Room Editor{}&nbsp;(see the section on {}Layers {}&gt; {}Instance Layer{}), since you can also modify these variables for individual instances that have been placed in the room.":"{}变量名称必须以字母开头，并且只能包含字母、数字和下划线符号“_”，最大长度为 64 个符号。 因此，有效变量为 {}fish{}、{}foo_bar{}、{}num1{}，而{}无效{}变量为 {}6fish{}、{}foo bar{} 或 {} *num{}。 给出变量名称后，您需要设置其类型，可以是以下任意类型：{}值得注意的是，此功能在处理父/子实例时特别有用 - 因为您可以有一个父实例 包含一组已定义变量的对象，然后只需在子对象中修改它们（有关更多详细信息，请参阅下面的{}对象变量和子对象{}部分） - 以及当您将实例添加到{}房间编辑器{}时（请参阅 {}层{}&gt; {}实例层{}部分），因为您还可以为已放置在房间中的各个实例修改这些变量。",
    "{}You can see in the top image that the Parent object has four Object Variables and in the bottom image these are also shown, only \"greyed out\" and have the{} Inherited From Parent{} {}&nbsp;icon to indicate that they have been inherited. These inherited variables can then be edited if you click the {}Override Variable{} {}&nbsp;button, so you can then adjust the range slider or values, or select different items from lists, etc... Note that when you edit a parent variable {}you can only change the defined value{} but not the name, nor can you change the variable options. Also note that you can add in new Object Variables to child objects as well (and in the example image above you can see that \"Character Type\" is a new Object Variable only for the child object).":"{}您可以在上图中看到父对象有四个对象变量，在下图中也显示了这些变量，只是呈灰色显示，并带有从父对象继承的{}{}图标，以指示它们已被继承。然后，如果您单击{}覆盖变量{}{}按钮{}，则可以编辑这些继承的变量，这样您就可以调整范围滑块或值，或者从列表中选择不同的项目，等等。请注意，当您编辑父变量{}时，您只能更改已定义的值{}，而不能更改名称，也不能更改变量选项。还要注意的是，您还可以向子对象添加新的对象变量(在上面的示例图像中，您可以看到\"字符类型\"是仅用于该子对象的新对象变量)。"
}