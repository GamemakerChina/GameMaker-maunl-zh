{
    "An Asynchronous Event is one that is fired off when {}GameMaker{} receives a {}callback{}&nbsp;from some external source, which can be from the web or from the device running your game. Basically, you tell {}GameMaker{} to do something -&nbsp;like load an image -&nbsp;and it\u0027ll start to do this but continue doing whatever it else it has to do meanwhile its working. Then, when the request has been completed, a callback will be sent to GameMaker Studio 2 and any Asynchronous Events defined for that type of callback will be fired.":"异步事件是当 {}GameMaker{} 从某些外部来源 (可以来自 Web 或运行游戏的设备) 接收到 {} 回调 {} 时触发的事件。基本上，你告诉 {}GameMaker{} 做一些事情 —— 比如加载图像 —— 它会开始这样做，但在工作的同时继续做它必须做的任何事情。然后，当请求完成时，将向 GameMaker 发送回调Studio 2 和为该类型回调定义的任何异步事件都将被触发。",
    "Audio Playback":"音频回放",
    "Audio Recording":"音频录制",
    "Cloud":"云",
    "Dialog":"对话框",
    "Image Loaded":"图像加载",
    "In App Purchase":"在应用程序购买",
    "It may be that if you are making extensions for different platforms you would like to target one or more of these asynchronous events for callbacks from your extension functions. To that end, you can find a table below that outlines each of the internal event name constants and their corresponding ID value. Note that these event constants are {}only{} for use with extensions!":"如果您正在为不同的平台进行扩展，您可能希望将这些异步事件中的一个或多个定位为扩展函数的回调。为此，您可以在下面找到一个表格，概述了每个内部事件名称常量及其对应的ID值。请注意，这些事件常量{}仅{}用于扩展！",
    "Networking":"联网",
    "Please note that the Asynchronous Events are fired for {}all {}instances that have them, much like the keyboard events, so you can - for example - do an {}http_get(){} call&nbsp;in one instance, yet have the {}Asynchronous HTTP Event{} in another to deal with the callback.":"请注意，异步事件是为 {} 所有 {} 具有它们的实例触发的，就像键盘事件一样，因此您可以在一个实例中执行 {}http_get(){} 调用，但在另一个实例中使用 {} 异步 HTTP 事件 {} 来处理回调。",
    "Push Notifications":"推送通知",
    "Save / Load":"保存/加载",
    "Social":"社交",
    "System":"系统",
    "The Async Events":"异步事件",
    "There are various types of events associated with the Asynchronous event category, and they are all explained in the sections below:":"有多种类型的事件与异步事件类别相关联，它们都在以下部分中进行了解释：",
    "{}NOTE{}: The variable {}{}{}async_load{}{}{}&nbsp; which is mentioned in the following sections is {}only valid in these events{}, as the DS map that it&nbsp;points to is created at the start of the event, then deleted again at the end, with this variable being reset to a value of -1 at all other times.":"{} 注意 {}：变量 {}{}{}async_load{}{}{}在以下部分中，{} 仅在这些事件 {} 中有效，因为它指向的 DS 映射是在事件开始时创建的，然后在结束时再次删除，此变量在所有其他时间都被重置为 -1 值。",
    "{}NOTE{}: You should be aware that due to XSS protection in browsers, requests and attempts to load resources from across domains are blocked and may appear to return blank results when using any of the following events.":"{}注意{}：您应该知道，由于浏览器中的XSS保护，从跨域加载资源的请求和尝试会被阻止，并且在使用以下任何事件时可能会返回空白结果。"
}