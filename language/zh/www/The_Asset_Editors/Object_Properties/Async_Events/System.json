{
    "\"{}available{}\" - The audio system is initialised and available to play sounds":"\"{}available{}\" - 音频系统已被初始化，可以播放声音",
    "\"{}event_type{}\" - the type of system event received, which will be \"{}virtual keyboard status{}\" for virtual keyboards.":"\"{}event_type{}\" - 收到的系统事件的类型，对于虚拟键盘来说，它将是\"{}virtual keyboard status{}\"",
    "\"{}event_type{}\" - the type of system event received, which will be one of the following strings: {} {}{}\"{}gamepad discovered{}\" - happens when the system reports a new gamepad has been connected{}{} {}{}\"{}gamepad lost{}\" - happens when the system has lost connection to a gamepad{}{} {} ":"\"{}event_type{}\" - 收到的系统事件的类型，它将是以下字符串之一：{} {}{}\"{}gamepad discovered{}\" - 当系统报告有新的游戏手柄被连接时发生{}{} {}{}\"{}gamepad lost{}\" - 当系统与游戏手柄失去连接时发生{}{} {}",
    "\"{}event_type{}\" - the type of system event received, which will be the string \"{}audio_system_status{}\" if the audio system has initialised or the context has changed.":"\"{}event_type{}\" - 收到的系统事件的类型，如果音频系统已经初始化或者上下文已经改变，则为字符串\"{}audio_system_status{}\"。",
    "\"{}keyboard_status{}\" - the current status of the keyboard, returned as one of the following strings:{} {} {}\"hiding\"{} {}\"hidden\"{} {}\"showing\"{} {}\"visible\"{} {} ":"\"{}keyboard_status{}\" - 键盘的当前状态，以下列字符串之一返回：{} {} {}\"hiding\"{}{}\"hidden\"{}{}\"showing\"{}{}\"visible\"{}{}",
    "\"{}pad_index{}\" - the index of the pad that has been added or removed":"\"{}pad_index{}\" - 被添加或删除的游戏手柄的索引。",
    "\"{}screen_height{}\" - the height of the virtual keyboard (in pixels). This will be 0 if the keyboard is invisible.":"\"{}screen_height{}\" - 虚拟键盘的高度（像素）。如果键盘是不可见的，这将是0。",
    "\"{}status{}\" - The status of the audio system, which will be one of the following two strings":"\"{}status{}\" - 音频系统的状态，它将是以下两个字符串之一",
    "\"{}unavailable{}\" - The audio system is not initialised, or the context is not currently running, and so can\u0027t play sounds (all sound playing functions will return -1)":"\"{}unavailable{}\" - 音频系统没有被初始化，或者当前上下文没有运行，所以不能播放声音（所有的声音播放函数将返回-1）",
    "Audio System Status":"音频系统状态",
    "For more information on the specific functions available for Audio, please see {}here{}.":"关于音频的具体功能的更多信息，请见{}这里{}。",
    "Game Pads":"游戏手柄",
    "If this event type is triggered, then there will be an additional key in the {}async_load{} map:":"如果这个事件类型被触发，那么在{}async_load{}地图中会有一个额外的键：",
    "Misc. Events":"杂项",
    "On mobile targets (Android, iOS and tvOS), an event is triggered when the app is brought back into focus. Its&nbsp;{}async_load{} map contains a single key:":"在移动目标（Android、iOS和tvOS）上，当应用程序被重新带入焦点时，会触发一个事件。它的&nbsp;{}async_load{}映射包含一个单一的键。",
    "See {}here{}&nbsp;for more information on the virtual keyboard.":"关于虚拟键盘的更多信息，见{}这里{}。",
    "System":"系统",
    "This event now permits you to move all your gamepad checking logic from the Step Event or an Alarm event into the System Event and only run it when it\u0027s actually required.":"这个事件现在允许你把所有的游戏手柄检查逻辑从Step事件或Alarm事件中移到系统事件中，并且只在实际需要时运行。",
    "This event type is specifically for use when working with the HTML5 target, as it will be triggered every time the Web Audio context status changes. This means that if you have, for example, a piece of looping background music, then you can pause it or stop and restart it, based on this event triggering. This can be checked by looking for the following key/value pair in the {}async_load{} map:":"这个事件类型是专门为使用HTML5目标时使用的，因为每次网络音频上下文状态改变时，它都会被触发。这意味着，如果你有，例如，一段循环的背景音乐，那么你可以根据这个事件的触发，暂停它或停止并重新启动它。这可以通过在{}async_load{}映射中寻找以下键/值对来检查：",
    "Virtual Keyboards":"虚拟键盘",
    "When this event is triggered for a gamepad being connected or disconnected it will return one of the following key/value pairs in the {}async_load{} map:":"当这个事件被触发时，游戏手柄被连接或断开，它将返回{}async_load{}地图中的以下键/值对之一。",
    "When this event is triggered for a virtual keyboard being opened or closed it will return the following key/value pairs in the {}async_load{} map:":"当这个事件被触发时，虚拟键盘被打开或关闭，它将在{}async_load{}映射中返回以下键/值对：",
    "{}IMPORTANT!{} This event will NOT be triggered unless you have at least one {}{}gamepad_*{}{}&nbsp;function or {}GML Visual action{} in your game code. The runner will only initialise the gamepad sub-system when the functions are used in the project, so if they aren\u0027t present, adding/removing gamepads will not trigger the System Event.":"{}重要的是！{}除非你的游戏代码中至少有一个{}{}gamepad_*{}{}&nbsp;函数或{}GML Visual action{}，否则该事件将不会被触发。只有在项目中使用这些函数时，运行器才会初始化游戏手柄子系统，所以如果它们不存在，添加/删除游戏手柄将不会触发系统事件。",
    "{}NOTE{}: While this event is designed for use with the HTML5 target, it will also be triggered on all other platforms, but on everything (except HTML5) it will only be triggered once on Game Start when the audio engine is first initialised.":"{}注意{}: 虽然这个事件是为HTML5目标设计的，但它也会在所有其他平台上被触发，但在所有平台上（除了HTML5），它只会在游戏开始时在音频引擎首次初始化时被触发一次。",
    "{}This event can only be triggered by a {}callback{} from a system&nbsp;level event (such as the detection of a gamepad or the automatic signing in to XBox Live) and it will return a {}DS Map{} stored in the variable {}{}async_load{}{}, containing different key/value pairs depending on the system level event that triggered the call-back. These events are:":"{}这个事件只能由来自系统级事件（如检测游戏手柄或自动登录XBox Live）的{}回调{}触发，它将返回一个存储在变量{}{}async_load{}{}中的{3}DS Map{4}，根据触发回调的系统级事件，包含不同的键/值对。这些事件是：",
    "{}This event can only be triggered by a {}callback{} from a system&nbsp;level event (such as the detection of a gamepad or the automatic signing in to Xbox Live) and it will return a {}DS Map{} stored in the variable {}{}async_load{}{}, containing different key/value pairs depending on the system level event that triggered the callback. These events are:":"{}这个事件只能由来自系统级事件（如检测游戏手柄或自动登录Xbox Live）的{}回调{}触发，它将返回一个存储在变量{}{}async_load{}{}中的{}DS Map{}，根据触发回调的系统级事件，包含不同的键/值对。这些事件是",
    "{}{}{}IMPORTANT{}{}&nbsp;{}This event will NOT be triggered unless you have at least one {}{}gamepad_*{}{}&nbsp;function or {}GML Visual action{} in your game code. The runner will only initialise the gamepad sub-system when the functions are used in the project, so if they aren\u0027t present, adding/removing gamepads will not trigger the System Event.":"{}{}{}重要{}{}&nbsp;{}除非你的游戏代码中至少有一个{}{}gamepad_*{}{}&nbsp;函数或{}GML Visual action{}，否则该事件不会被触发。只有在项目中使用这些函数时，运行器才会初始化游戏手柄子系统，所以如果它们不存在，添加/删除游戏手柄将不会触发系统事件。",
    "{}{}{}NOTE{}{}&nbsp;{}While this event is designed for use with the HTML5 target, it will also be triggered on all other platforms, but on everything (except HTML5) it will only be triggered once on Game Start when the audio engine is first initialised.":"{}{}{}注意{}{}&nbsp;{}虽然这个事件是为HTML5目标设计的，但它也会在所有其他平台上被触发，但在所有平台上（除了HTML5），它只会在游戏开始时在音频引擎第一次初始化时被触发一次。"
}