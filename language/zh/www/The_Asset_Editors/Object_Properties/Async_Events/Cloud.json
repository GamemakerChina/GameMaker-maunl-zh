{
    "\"{}description{}\": The description of the last uploaded file.":"\"{}description{}\"：上次上传文件的描述。",
    "\"{}errorString{}\": returns an Error String for any error.":"\"{}errorString{}\"：返回任何错误的错误字符串。",
    "\"{}id{}\": The id which was returned from the called function. If you fire off a series of cloud_ requests then you need to know which one you are getting the reply to, and so you would use this value to compare to\n      the value you stored when you originally sent the request to find the right one.":"\"{}id{}\"：从被调用的函数返回的 ID。如果你发起了一系列 cloud_ 请求，那么你需要知道你得到了哪个请求的回复，所以你可以用这个值来比较\n您最初发送寻找正确值的请求时存储的值。",
    "\"{}resultString{}\": This holds a string which is the data blob returned from the cloud.":"\"{}resultString{}\"：它包含一个字符串，该字符串是从云端返回的数据块。",
    "\"{}status{}\": This holds the status code, where a negative value denotes an error, a description of which will be contained in the “errorString”. A value of 0 (or a positive value) indicates a success(see below for\n      exact values), and the “resultString” will contain the returned data or a success message.":"\"{}status{}\"：这包含状态代码，其中负值表示错误，错误的描述将包含在 \"errorString\" 中。值 0( 或正值) 表示成功 (见下文精确值)，并且 \" 结果字符串 \" 将包含返回的数据或成功消息。",
    "A conflict was encountered, but the gamer chose to ignore it":"遇到了冲突，但玩家选择忽略它",
    "Any other negative number means a synchronisation failure":"任何其他负数都表示同步失败",
    "Cloud":"云",
    "New game data downloaded from the cloud (following a {}cloud_synchronise(){}&nbsp;call)":"从云端下载的新游戏数据(在{}cloud_synchronise(){}调用之后)",
    "No new data since you last called cloud_synchronise":"自从你上次调用 cloud_synronise 以来没有新数据",
    "The exact meaning of the returned \"status\" map entry is explained in the following table:":"下表解释了返回的\"状态\"地图条目的确切含义：",
    "You have not successfully logged in to the given Cloud Service":"您尚未成功登录到给定的云服务",
    "data from {}cloud_string_save(){} or {}cloud_file_save(){} was successfully uploaded to the cloud":"来自 {}cloud_string_save(){} 或 {}cloud_file_save(){} 的数据已成功上传到云端",
    "{}The Cloud Event is one that is triggered by the call back from one of the {}{}cloud_*(){}{}&nbsp;functions,\n    like {}{}cloud_synchronise(){}{}. It actually generates a DS map that is exclusive to this event and is stored in\n    the special variable {} {}async_load{} {} (please see the individual functions for code examples that explain the use of this\n    event in further detail). This DS map has the following structure:":"{} 云事件是由 {}{}cloud_*(){}{} 函数之一的回调触发的事件，像 {}{}cloud_synchronise(){}{}. 它实际上生成了一个 DS 映射，该映射对此事件是独占的，并存储在特殊变量 {}{}async_load{}{}( 请参阅各个函数以获取解释此用法的代码示例事件的进一步细节)。这个 DS 地图有以下结构："
}