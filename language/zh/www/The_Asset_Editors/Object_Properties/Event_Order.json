{
    "All of the events for drawing are also always dealt with in the same order as follows (except for the {}Window Resize {}event, which is triggered differently):":"所有绘制事件也总是以相同的顺序处理，如下所示({}窗口调整大小{}事件除外，它的触发方式不同)：",
    "Event Order":"事件顺序",
    "For more detailed information on how these events are related to {}GameMaker{}\u0027s drawing, see&nbsp;{}Draw Events{}.":"有关这些事件如何与 {}GameMaker{} 的绘制相关的更多详细信息，请参阅{}绘制事件{}。",
    "It is also worth noting that you can also set the order in which specific instances are created within the room editor itself by moving them up or down the list of the {}Instance Layer Properties{}&nbsp;window.":"还值得注意的是，您还可以通过在 {} 实例层属性 {} 窗口的列表中上下移动特定实例来设置在房间编辑器本身中创建特定实例的顺序。",
    "Other than those specific events, the only known order that will always occur in the same way no matter what belongs to the three {}step {}events and the different {}draw {}events. These will always remain consistent, so if you have code that relies on specific timing during each step of your game, you should use:":"除了这些特定事件之外，唯一已知的顺序将始终以相同的方式发生，无论属于三个 {} 步骤 {} 事件和不同的 {} 绘制 {} 事件。这些将永远保持一致，所以如果您的代码在游戏的每一步都依赖于特定的时间，您应该使用：",
    "The first set of events that will always happen the same way are those that occur when a room is first entered. The order that the different events will fire is:":"第一组总是以同样的方式发生的事件是第一次进入房间时发生的事件。不同事件触发的顺序是：",
    "When considering Events in {}GameMaker{}, it should be noted that {}the exact order that ALL the events are going to occur in each step cannot be clearly stated{}, simply because it depends on the internal workings of {}GameMaker{} and this is subject to change as the software develops. However there are certain events that will {}always {}run in the same order.":"在考虑 {}GameMaker{} 中的事件时，应注意 {} 无法清楚说明每个步骤中所有事件将发生的确切顺序 {}，这仅仅是因为它取决于 {}GameMaker{} 的内部工作方式，并且随着软件的开发，这可能会发生变化。但是，某些事件将 {} 始终 {} 以相同的顺序运行。",
    "{}Alarms{}":"{}计时器{}",
    "{}Begin Step Event{}":"{}开始步事件{}",
    "{}Cr{}{}{}eate{} Event {}followed by the{} Instance Creation Code {}of {}each {}instance - so as each instance is created, it will run first its Create event and then its Instance Creation Code before moving on to the next instance to be created":"{}{}{}{}{} 创建事件 {}，然后是 {} 每个 {} 实例的 {} 实例创建代码 {}，因此在创建每个实例时，它将首先运行其创建事件，然后运行其实例创建代码在转移到要创建的下一个实例之前",
    "{}Draw Begin Event{}":"{}绘制开始事件{}",
    "{}Draw End Event{}":"{}绘制结束事件{}",
    "{}Draw Event{}":"{}绘制事件{}",
    "{}Draw GUI Begin Event{}":"{}绘制GUI开始事件{}",
    "{}Draw GUI End Event{}":"{}绘制GUI结束事件{}",
    "{}Draw GUI Event{}":"{}绘制GUI事件{}",
    "{}End Step Event{}":"{}结束步事件{}",
    "{}Event Order{}":"{}事件顺序{}",
    "{}Game Start Event{} - this event is triggered once in the very first room of the game for all instances placed in the room from the room editor (note that calling game_restart() will trigger this event again.":"{} 游戏开始事件 {}- 此事件在游戏的第一个房间中触发一次，用于从房间编辑器放置在房间中的所有实例 (请注意，调用 game_restart() 将再次触发此事件。",
    "{}Object Variables / Instance Variables are initialised{} (these are the variables that you can define in the {}IDE{} of the {}Object Editor{} or the {}Room Editor{}). If you have an object with variables attached then they will be created before anything else and then any instances that have variables attached will be defined after so you can overwrite object variables with instance specific ones in the room editor.":"{} 对象变量 / 实例变量被初始化 {}( 这些变量可以在 {} 对象编辑器 {} 或 {} 房间编辑器 {} 的 {2}IDE{3} 中定义)。如果您有一个附加了变量的对象，那么它们将在其他任何东西之前创建，然后任何附加了变量的实例将在之后定义，以便您可以使用房间中的实例特定变量覆盖对象变量编辑器。",
    "{}Post Draw Event{}":"{}后绘制事件{}",
    "{}Pre Draw Event{}":"{}预绘制事件{}",
    "{}Room Creation Code{} - this is the one-off code written in the Room Editor for when a room is first entered":"{} 房间创建代码 {}- 这是首次进入房间时在房间编辑器中编写的一次性代码",
    "{}Room Start Event of all instances{} - one of the \"other\" category of events and will fire for all instances, persistent or otherwise":"{} 所有实例的房间启动事件 {}-\" 其他 \" 类别的事件之一，将对所有实例触发，无论是持久的还是其他的",
    "{}Step Event{} (note that the step event is executed just before instances are put in their new positions)":"{}步事件{}(请注意，步骤事件是在实例放入新位置之前执行的)",
    "{}Time Sources{} {} {}{}\"Ticks\" (updates){}{} {}{}Callbacks{} {} {}Children of {}time_source_global{} (see&nbsp;{}Built-In Time Sources{}){} {}Time sources spawned by&nbsp;{}{}call_later{}{}{} {}Children of {}time_source_game{} (see&nbsp;{}Built-In Time Sources{}){} {} {} {} ":"{}时间源{} {}\n{}{}\"瞬间\"(更新){}{}\n{}{}回调{}{}\n{}{}time_source_global{} 的子项 (请参阅 {}内置时间源{}){}\n{}由 {}{}call_later{}{} 派生的时间源{}\n{}{}time_source_game{} 的子项(请参阅 {}内置时间源{}){}{}{}{}",
    "{}Timelines{}":"{}时间线{}"
}