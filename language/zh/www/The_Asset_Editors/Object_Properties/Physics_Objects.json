{
    "By checking this box, you are telling {}GameMaker{} to basically \"ignore\" the physical properties of the object, but still return a collision event with the objects around it. In this way you can have an instance with no physical presence in the room, but which can react to the collision of another instance, like the player, and do something in turn, like open a door, or trigger some sort of action in another place in the room.":"通过选中此框，您将告诉 {}GameMaker{} 基本上\"忽略\"对象的物理属性，但仍会返回与其周围对象的碰撞事件。通过这种方式，您可以让一个实例在房间中不存在，但它可以对另一个实例(如玩家)的碰撞做出反应，并依次执行一些操作，如打开一扇门，或在房间中的另一个地方触发某种操作。",
    "By default, the collision group for all physics objects is 0, and this means that they will interact as normal, which in turn means they {}must have a collision event to interact{} (a simple comment will do to trigger the collision) otherwise no collision will be registered. However, you can also specify that an object should belong to a specific, numbered,&nbsp;{}collision group{}. By assigning objects to a {}positive {}collision group (ie: three objects are all in group \" {}2{}\") you are telling {}GameMaker{} that instances of these objects should {}always {}collide, even if they have nothing in their collision event, obeying the physical properties that you have assigned them and the room they are in. Conversely, if you have objects with a {}negative {}collision group (ie: four objects assigned \"{}-1{}\"), you are telling {}GameMaker{} that these should {}never {}collide, and any collision events between them will be ignored.":"默认情况下，所有物理对象的碰撞组为 0，这意味着它们将正常交互，这又意味着它们{}必须有碰撞事件才能交互{}(简单的注释就可以触发碰撞)，否则不会注册碰撞。但是，您也可以指定对象应属于特定的、带编号的{}碰撞组{}。通过将对象指定给一个{}正{}碰撞组(即：三个对象都在组 \"{}2{}\" 中)，您告诉 {}GameMaker{} 这些对象的实例应该 {} 始终 {} 碰撞，即使它们在碰撞事件中没有任何内容，也要遵守您为它们指定的物理属性和它们所在的房间。相反，如果您的对象具有 {} 负 {} 碰撞组 (即：指定为 \"{}-1{}\" 的四个对象)，则您正在告诉 {}GameMaker{} 这些对象应该{}永远不会{}发生碰撞，并且它们之间的任何碰撞事件都将被忽略。",
    "Damping is used to reduce the physics world velocity of an instance as it moves through the room. In principle this is like friction against a surface in the \"real\" world, but in the {}GameMaker{} physics system, friction is actually only applied when two instances with collision shapes (fixtures) are in contact. So, you can consider linear damping as more like \"air friction\" that gradually slows&nbsp;any moving physics instance over time, without the need for contact with any other physics instance.":"阻尼用于降低实例在房间中移动时的物理世界速度。从原理上讲，这类似于在真实世界中与表面发生摩擦，但在 {}GameMaker{} 物理系统中，摩擦实际上仅在具有碰撞形状(夹具)的两个实例接触时应用。因此，你可以认为线性阻尼更像是\"空气摩擦\"，它会随着时间的推移逐渐减慢任何移动的物理实例，而不需要与任何其他物理实例接触。",
    "Finally there are three extra options that can be flagged as on or off for your fixture, {}Sensor{}, {}Start Awake{} and {}Kinematic{}. Each of these flags will change the behaviour of your fixture in the following ways:":"最后，有三个额外的选项可以标记为打开或关闭您的装置，{}传感器{}，{}开始唤醒{}和{}运动学{}。这些标志中的每一个都将以以下方式更改您的装置的行为：",
    "Finally there are three extra options that can flagged as on or off for your fixture, {}Sensor{}, {}Start Awake{} and {}Kinematic{}. Each of these flags will change the behaviour of your fixture in the following ways:":"最后，有三个额外的选项可以标记为打开或关闭您的装置，{}传感器{}，{}开始唤醒{}和{}运动学{}。这些标志中的每一个都将以以下方式更改您的装置的行为：",
    "Friction is the force that resists the relative motion of material elements sliding against each other, which in the {}GameMaker{} physics world, translates as the loss of momentum caused by the collision of two instances with physics fixtures. So, when two instances collide, their motion is affected by this value, with a high friction causing a larger loss of momentum than a lower value.":"摩擦力是抵抗材料元素相互滑动的相对运动的力，在 {0}GameMaker{1} 物理学世界中，摩擦力解释为两个实例与物理夹具碰撞导致的动量损失。因此，当两个实例发生碰撞时，它们的运动受该值的影响，高摩擦力比低摩擦力造成更大的动量损失。",
    "If you have a {}circular {}mask, then you can only pull any of the path points to make the circle diameter larger or smaller":"如果您有{}圆形{}蒙版，则只能拉动任意路径点以增大或减小圆形直径",
    "If you have a {}custom {}(polygon) mask, it must have a minimum of 3 and a maximum of 8 points to it, and it must be convex (see image below).":"如果您有一个{}自定义{}(多边形)蒙版，它必须至少有 3 个点，最多 8 个点，并且它必须是凸形的(请参见下图)。",
    "If you have {}rectangular {}mask, then you can move any of the four corners, but the corresponding ones will adjust position automatically to always maintain a rectangle":"如果您有{}矩形{}蒙版，则可以移动四个角中的任何一个，但相应的角将自动调整位置以始终保持矩形",
    "If you think about any rotating object in the \"real world\", unless it has a motor or is in space, its rotation will&nbsp;slow&nbsp;down over time due to the influence of external forces (like mechanical friction or friction against the air or water surrounding it). We can use the angular damping option to simulate this effect and reduce the velocity of rotation of instances in the physics world, as&nbsp;without it, any rotating instance would continue to rotate infinitely.":"如果你想一想\"现实世界\"中的任何旋转物体，除非它有马达或在太空中，否则它的自转速度会随着时间的推移而减慢，因为外力的影响(如机械摩擦或与周围空气或水的摩擦)。我们可以使用角度阻尼选项来模拟这种效果，并降低物理世界中实例的旋转速度，因为如果没有它，任何旋转的实例都将继续无限旋转。",
    "In physics, restitution is defined as \"the return of an object or system to its original state after elastic deformation\", but as the fixtures in the {}GameMaker{} are really rigid bodies and cannot be deformed, restitution is really a way of saying how \"bouncy\" the fixture is. This setting will affect how much an object \"bounces\" when it collides with other objects and is co-dependant on other forces that act on the instance like gravity and friction.":"在物理学中，复原的定义是\"物体或系统在发生弹性变形后恢复到原来的状态\"，但由于 GameMaker 中的装置实际上是刚体，不能变形，所以复原实际上是一种表示装置有多\"弹性\"的方式。此设置将影响对象与其他对象碰撞时的反弹程度，并共同依赖于作用在实例上的其他力，如重力和摩擦力。",
    "Note that physics instances will be flagged as \"asleep\" when they are no longer under any movement or having interaction with any other physics instance, and an \"asleep\" instance is simply one that is not currently being fully processed by the physics simulation (which saves on {}CPU overhead{}).":"请注意，当物理实例不再处于任何移动状态或不再与任何其他物理实例交互时，它们将被标记为\"休眠\"，而\"休眠\"实例只是当前未被物理模拟完全处理的实例(这节省了{}CPU开销{})。",
    "Note that setting the density to 0 will create a \"static\" fixture that is essentially infinmitely dense and will not be affected by external forces or collisions, except in special cases where the instance has been created as&nbsp;{}kinematic{}&nbsp;(see below for more details).":"请注意，将密度设置为0将创建本质上密度无限且不受外力或碰撞影响的\"静态\"灯具，除非在特殊情况下将实例创建为 {}运动学{} (有关更多详细信息，请参见下文)。",
    "Physics Objects":"物理对象",
    "The density of something is defined as its mass per unit volume, which basically means how much mass is crammed into the space it takes up in the world. So, a balloon would have a low density as it has little mass that occupies a large space, while a lead bar would have a high density as it has a great mass, yet occupies little space. In the {}GameMaker{} 2D physics world, mass is calculated automatically for you from the values you input for the density and by the surface area of the shape you define for the fixture. This will have a direct impact on how much inertia a fixture has as well as how it reacts to collisions and forces, so if you make a small shape with a high density it will have a very large mass (like a bar of lead), but if you define a large shape with a low density it will have a much smaller mass (like a balloon).":"某物的密度被定义为其单位体积的质量，这基本上意味着它在世界上占据的空间中塞入了多少质量。所以，气球的密度会很低，因为它的质量很小，占据了很大的空间，而铅条的密度会很高，因为它的质量很大，但占用的空间很小。在 {}GameMaker{} 2D 物理世界中，系统会根据您为密度输入的值和您为设备定义的形状的表面积自动计算质量。这将直接影响灯具的惯性大小以及它对碰撞和力的反应方式，因此，如果您以高密度制作一个小形状，它将具有非常大的质量 (如铅条)，但如果您以低密度定义一个大形状，它将具有小得多的质量 (如气球)。",
    "There will be certain instances in a physics based game which you want to move around but do not wish to be acted on by forces such as gravity, nor forces incurred by collisions with dynamic objects (think of moving platforms in a platform game, for example). For such objects simply setting the density of the fixture to 0 will mean that the physics will assume that the object is intended to be {}static {}and it will not react at all to anything. However, checking this box will make a static object {}kinematic {}and although it will still be unaffected by collisions and forces like gravity, it can now be moved around or rotated using the appropriate variables (see {}{}phy_position_x{}{}&nbsp;and {}{}phy_position_y{}{}, for example).":"在基于物理的游戏中会有某些情况，你想要四处移动，但不希望受到重力等力的作用，也不希望受到与动态对象碰撞产生的力(例如，想想平台游戏中的移动平台)。对于这样的物体，只需将灯具的密度设置为0，就意味着物理学将假设物体是{}静态{}的，它根本不会对任何东西做出反应。但是，选中此框将使静态对象处于{}运动状态{}，尽管它仍然不会受到碰撞和重力等力的影响，但现在可以使用适当的变量四处移动或旋转(例如，请参见 {}{}phy_position_x{}{} 和 {}{}phy_position_y{}{})。",
    "There will be certain instances in a physics based game which you want to move around but do not wish to be acted on by forces such as gravity, nor forces incurred by collisions with dynamic objects (think of moving platforms in a platform game, for example). For such objects simply setting the density of the fixture to 0 will mean that the physics will assume that the object is intended to be {}static {}and it will not react at all to anything. However, checking this box will make a static object {}kinematic {}and although it will still be unaffected by collisions and forces like gravity, it can now be moved around or rotated using the appropriate variables (see {}{}phy_position_x{}{}&nbsp;and {}{}phy_position_y{}{}, for example). ":"在基于物理的游戏中会有某些情况，你想要四处移动，但不希望受到重力等力的作用，也不希望受到与动态对象碰撞产生的力(例如，想想平台游戏中的移动平台)。对于这样的物体，只需将灯具的密度设置为0，就意味着物理学将假设物体是{}静态{}的，它根本不会对任何东西做出反应。但是，选中此框将使静态对象处于{}运动状态{}，尽管它仍然不会受到碰撞和重力等力的影响，但现在可以使用适当的变量四处移动或旋转(例如，请参见 {}{}phy_position_x{}{} 和 {}{}phy_position_y{}{})。",
    "This is checked by default and represents the initial \"state\" of the fixture at the start of the room it has been placed in. Normally you want it to be awake (ie: participating in the physics world) right from the start, but sometimes this can lead to certain instabilities and unwanted effects due to the abrupt start of the physics simulation. To avoid these effects, you can un-check this flag and the instance will be created with the fixture asleep, and it will not participate in the physics simulation unless something acts upon it.":"默认情况下，该选项处于选中状态，表示该设备在放置到的房间开始时的初始\"状态\"。通常情况下，您希望它从一开始就处于唤醒状态(即：参与物理世界)，但有时由于物理模拟的突然启动，这可能会导致某些不稳定和不必要的效果。要避免这些效果，可以取消选中此标志，实例将在设备处于睡眠状态时创建，并且它不会参与物理模拟，除非有东西作用于它。",
    "When you first create a new object resource, there is a check-box marked {}Uses Physics{}, which is {}not {}checked by default. Selecting this option will radically change the behaviour of your object when an instance of it is placed in a room, as this switches on the object\u0027s physical properties and means that its \"traditional\" movement and collision functions are no longer valid (but only when the room it is placed on is also marked as being a physics room. See the section on the&nbsp;{}Room Editor Properties{}). When you check this, the object resource window opens a new chained window for the physics editor:":"当您第一次创建新的对象资源时，会有一个标记为{}使用物理{}的复选框，默认情况下该复选框处于{}未{}选中状态。选择此选项将从根本上改变放置在房间中的对象的行为，因为这将打开对象的物理属性，并意味着其\"传统\"移动和碰撞功能不再有效(但仅当放置该对象的房间也被标记为物理房间时才有效。请参阅{}房间编辑器属性{})部分。选中此选项后，对象资源窗口将为物理编辑器打开一个新的链接窗口：",
    "{}Angular Damping{}{}Angular Damping{}":"{}角度阻尼{}{}角度阻尼{}",
    "{}Before you start to edit the values for the physics behaviours it\u0027s a good idea to first set the {}collision shape{}. With the \"normal\" collision system your collisions are based off of the mask of the sprite assigned to the object, but with physics enabled {}this is no longer the case{}. We need to assign a {}collision shape{} the object ourselves (this is properly called a {}fixture{}, see {}The Physics Functions{}&nbsp;for more information), which can either be a circle, a rectangle or a polygon shape that you yourself define. Clicking on the {}Modify Collision Shape{} button will open the following chained window to edit the shape:":"{}在开始编辑物理行为的值之前，最好先设置{}碰撞形状{}。在\"普通\"碰撞系统中，你的碰撞是基于指定给物体的精灵遮罩，但在启用物理的情况下，{}情况就不再是这样了{}。我们需要为对象自己指定一个{}碰撞形状{}(这被恰当地称为{}灯具{}，有关详细信息，请参阅{}物理函数{})，它可以是您自己定义的圆形、矩形或多边形。点击{}修改碰撞形状{}按钮将打开以下链接窗口以编辑该形状：",
    "{}Before you start to edit the values for the physics behaviours it\u0027s a good idea to first set the {}collision shape{}. With the \"normal\" collision system your collisions are based off of the mask of the sprite assigned to the object, but with physics enabled {}this is no longer the case{}. We need to assign a {}collision shape{}&nbsp;to the object ourselves (this is properly called a {}fixture{}, see {}The Physics Functions{}&nbsp;for more information), which can either be a circle, a rectangle or a polygon shape that you yourself define. Clicking on the {}Modify Collision Shape{} button will open the following chained window to edit the shape:":"{}在开始编辑物理行为的值之前，最好先设置{}碰撞形状{}。在\"普通\"碰撞系统中，你的碰撞是基于指定给物体的精灵遮罩，但在启用物理的情况下，{}情况就不再是这样了{}。我们需要为对象自己指定一个{}碰撞形状{}(这被恰当地称为{}装置{}，有关详细信息，请参阅{}物理函数{})，它可以是您自己定义的圆形、矩形或多边形。点击{}修改碰撞形状{}按钮将打开以下链接窗口以编辑该形状：",
    "{}Collision Group{}{}Collision Group{}":"{}碰撞组{}{}碰撞组{}",
    "{}Density{}{}Density{}":"{}密度{}{}密度{}",
    "{}Friction{}{}Friction{}":"{}摩擦{}{}摩擦{}",
    "{}Kinematic{}{}Kinematic{}":"{}运动学{}{}运动学{}",
    "{}Linear Damping{}{}Linear Damping{}":"{}线性阻尼{}{}线性阻尼{}",
    "{}NOTE{}: A sensor fixture will fire off the collision event when the collision {}first occurs only{}, meaning you don\u0027t get a stream of collision events as the two bodies continue to overlap (which is what would traditionally occur). If they stop overlapping and overlap subsequently there will be another collision event triggered.":"{}注意{}：传感器夹具将在碰撞{}首次发生{}时触发碰撞事件，这意味着当两个物体继续重叠时，您不会获得碰撞事件流(这是传统上会发生的)。如果它们停止重叠并随后重叠，则会触发另一个碰撞事件。",
    "{}NOTE{}: Using collision groups dramatically increases the processing required by the physics system and should be used only when absolutely necessary, and you should have as few groups as possible.":"{}注意{}：使用碰撞组显著增加了物理系统所需的处理，应该仅在绝对必要时使用，并且您应该拥有尽可能少的组。",
    "{}Once you have set up your shape, you then need to define the basic physical properties that your object is to have. These are configured by changing the following parameters:":"{}设置好形状后，您需要定义对象要具有的基本物理属性。可以通过更改以下参数来配置这些参数：",
    "{}Restitution{}{}Restitution{}":"{}复原{}{}复原{}",
    "{}Sensor{}{}Sensor{}":"{}传感器{}{}传感器{}",
    "{}Start Awake{}{}Start Awake{}":"{}开始唤醒{}{}开始唤醒{}",
    "{}This looks similar to the {}Path Editor{}, and functions in much the same way. However, depending on the mask you have chosen, it can be rather more restrictive:":"{}这看起来类似于{}路径编辑器{}，其功能也大体相同。但是，根据您选择的遮罩，它可能会有更多限制："
}