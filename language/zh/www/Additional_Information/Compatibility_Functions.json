{
<<<<<<< Updated upstream
    "When you are importing a project from a previous version of GameMaker you may see that the project has {}compatibility scripts{} added. In general, these scripts use the updated GameMaker Language (GML) functions\n    to convert obsolete functions into the new way of doing things, and are a great way to learn how things should be done in {}GameMaker{}. However, there are a few functions that are used for compatibility {}only{}&nbsp;that should not be used\n    anywhere else, and certainly not in your own projects. To help you identify these compatibility functions they are listed here, but we must stress that they should {}never be used outside of compatibility scripts{}:":"当您从以前版本的GameMaker导入项目时，您可能会看到该项目添加了{}兼容性脚本{}。一般来说，这些脚本使用更新的GameMaker语言(GML)函数\n将过时的功能转换为新的做事方式，这是学习{}GameMaker{}中应该如何做事的好方法。但是，有一些用于兼容性的函数{}仅{}不应该使用\n其他任何地方，当然不是在你自己的项目中。为了帮助您识别这些兼容性函数，它们在此处列出，但我们必须强调，不应在{}兼容性脚本{}之外使用它们："
=======
    "Compatibility Functions":"兼容性函数",
    "When you are importing a project from a previous version of GameMaker you may see that the project has {}compatibility scripts{} added. In general, these scripts use the updated GameMaker Language (GML) functions\n    to convert obsolete functions into the new way of doing things, and are a great way to learn how things should be done in {}GameMaker{}. However, there are a few functions that are used for compatibility {}only{}&nbsp;that should not be used\n    anywhere else, and certainly not in your own projects. To help you identify these compatibility functions they are listed here, but we must stress that they should {}never be used outside of compatibility scripts{}:":"当您从以前版本的 GameMaker 导入项目时，您可能会看到该项目添加了{}兼容性脚本{}。 一般来说，这些脚本使用更新的 GameMaker 语言 (GML) 函数将过时的函数转换为新的操作方式，是了解如何在 {}GameMaker{} 中完成任务的好方法。 但是，有一些函数{}仅{}用于兼容性，不应在其他任何地方使用，当然也不应在您自己的项目中使用。 为了帮助您识别这些兼容性函数，它们在此处列出，但我们必须强调，它们{}绝不能在兼容性脚本之外使用{}："
>>>>>>> Stashed changes
}