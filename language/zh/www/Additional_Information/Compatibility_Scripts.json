{
    "Also note that there are some functions that have been introduced to the GameMaker Language to ensure compatibility with older projects and that will appear in these compatibility scripts. However these functions should never be used in your own projects. You can find a list of these functions from the following section of the manual:":"另请注意，GameMaker 语言中引入了一些函数以确保与旧项目的兼容性，这些函数将出现在这些兼容性脚本中。 然而，这些函数不应该在您自己的项目中使用。 您可以从手册的以下部分找到这些函数的列表：",
    "Compatibility Functions":"兼容性函数",
    "Compatibility Scripts":"兼容脚本",
    "For those users coming from previous versions of GameMaker,&nbsp;&nbsp;it may be a bit confusing using {}GameMaker{} at first since there have been a number of changes made to the way that project assets, editing and coding are handled. These changes mean that the neither the {}IDE{} nor the {}GameMaker Language (GML){} supports the items listed below. However, that does not mean that you cannot import games made with previous versions&nbsp;into {}GameMaker{}, as you can. {}GameMaker{} will automatically convert all legacy functions into&nbsp;{}compatibility scripts{}, which are scripts containing functions that convert the legacy methods into the updated methods.":"对于那些来自早期版本的{}GameMaker{}的用户来说，一开始使用GameMaker可能会有些困惑，因为项目资源、编辑和编码的处理方式发生了许多变化。这些变化意味着{}IDE{}和{}GameMaker语言(GML){}都不支持下面列出的项目。然而，这并不意味着你不能将之前版本的游戏导入到{}GameMaker{}中。{}GameMaker{}将自动将所有遗留函数转换为{}兼容脚本{}，这些脚本包含将遗留方法转换为更新方法的函数。",
    "Note that if you see any scripts created with a double under-bar before their name (for example: {}__global_object_depths{}), then these are scripts that have been created by the IDE to help with compatibility and are not scripts that have been converted from obsolete functions, so these {}should not be tampered with{} as they are required for the other compatibility scripts to work.":"请注意，如果您看到任何在名称前使用双下划线创建的脚本(例如:{}__global_object_深度{})，那么这些脚本是由IDE创建的，以帮助实现兼容性，而不是从过时的函数转换而来的脚本，因此{}不应该修改{}这些脚本，因为其他兼容性脚本工作时需要这些脚本。",
    "Note that you can keep using these compatibility scripts just as you would have used the functions in the legacy version of GameMaker, however, due to the way they work, there will be a performance impact associated with this. We recommend that you update projects to directly use the new methods and remove the compatibility scripts if you can, as it will improve performance and also give you an insight into the way that {}GameMaker{} and the GameMaker Language works compared to legacy products.":"请注意，您可以像使用旧版 GameMaker 中的函数一样继续使用这些兼容性脚本，但是，由于它们的工作方式，这会对性能产生影响。 我们建议您更新项目以直接使用新方法并尽可能删除兼容性脚本，因为这将提高性能并让您深入了解 {}GameMaker{} 和 GameMaker 语言与旧产品相比的工作方式 .",
    "What happens is that {}GameMaker{} will parse your project for all the obsolete functions and variables that you have used, and then create a series of scripts using those function names. These scripts will contain either the new equivalent {}runtime function{} or a short {}script function{} that performs the same action as the obsolete function.":"{}GameMaker{}将解析你的项目中所有过时的函数和变量，然后使用这些函数名创建一系列脚本。这些脚本将包含新的等效{}运行时函数{}或一个简短的{}脚本函数{}，该函数执行与过时函数相同的操作。",
    "When you first import a {}GameMaker{} project you will be shown a compatibility report much like this one:":"当您第一次导入一个{} GameMaker {}项目时，您将看到一个与下面这个非常相似的兼容性报告:",
    "When you have finished revising the compatibility report you can close the workspace, but should you need to revise anything within the report you can find it again by going to the {}Notes{} section of the {}Asset Browser{}.":"当您完成兼容性报告的修改后，您可以关闭工作区，但如果您需要修改报告中的任何内容，您可以通过转至{}资源浏览器{}的{}注释(Notes){}部分再次找到它。",
    "You can also find a complete list of all the obsolete functions that have equivalent compatibility scripts created for them from the following page:":"您还可以在下面的页面中找到所有已过时的函数的完整列表，这些函数具有为它们创建的等效兼容脚本:",
    "{}Obsolete Functions{}":"{}过时的函数{}",
    "{}The main body of the report shows which objects and scripts have been affected and where, while at the end you can find a list of the scripts that have been created for your project. You can click the middle mouse button {}&nbsp;or press {}&nbsp;on any of the scripts listed in the report to open it and see what has been done.":"{}报告的主体显示了哪些对象和脚本受到了影响，以及在哪里受到了影响，而在末尾，您可以找到为您的项目创建的脚本列表。您可以单击鼠标中键{} 或在报告中列出的任何脚本上按{} 以打开它并查看已经完成了什么。"
}