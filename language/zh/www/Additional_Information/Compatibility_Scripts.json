{
    "Also note that there are some functions that have been introduced to the GameMaker Language to ensure compatibility with older projects and that will appear in these compatibility scripts. However these functions should never be used in your own projects.\n    You can find a list of these functions from the following section of the manual:":"另请注意，GameMaker语言中引入了一些功能，以确保与旧项目的兼容性，这些功能将出现在这些兼容性脚本中。但是，这些功能永远不应该在您自己的项目中使用。\n您可以从手册的以下部分中找到这些功能的列表：",
    "Compatibility Functions":"兼容性功能",
    "Compatibility Scripts":"兼容性脚本",
    "For those users coming from previous versions of GameMaker,&nbsp;&nbsp;it may be a bit confusing using {}GameMaker{} at first since there have been a number of changes made to the way that project assets, editing and coding are handled. These changes mean\n    that the neither the {}IDE{} nor the {}GameMaker Language (GML){} supports the items listed below. However, that does not mean that you\n    cannot import games made with previous versions&nbsp;into {}GameMaker{}, as you can. {}GameMaker{} will automatically convert all legacy functions into&nbsp;{}compatibility scripts{}, which are scripts containing functions that convert\n    the legacy methods into the updated methods.":"对于那些来自早期版本GameMaker的用户来说，起初使用{}GameMaker{}可能有点令人困惑，因为对项目资产、编辑和编码的处理方式进行了许多更改。这些变化意味着\n{}IDE{}和{}GameMaker语言(GML){}都不支持下面列出的项目。然而，这并不意味着你\n无法将使用以前版本制作的游戏导入{}GameMaker{}。{}GameMaker{}将自动将所有遗留函数转换为{}兼容性脚本{}，这些脚本包含转换函数的脚本\n将遗留方法转换为更新的方法。",
    "Note that if you see any scripts created with a double under-bar before their name (for example: {}__global_object_depths{}), then these are scripts that have been created by the IDE to help with compatibility and are not scripts\n    that have been converted from obsolete functions, so these {}should not be tampered with{} as they are required for the other compatibility scripts to work.":"请注意，如果您看到任何在名称前使用双下划线创建的脚本(例如：{}__global_object_depths{})，则这些是由IDE创建的用于帮助兼容性的脚本，而不是脚本\n已从过时的函数转换而来，因此不应篡改这些{}，因为它们是其他兼容性脚本工作所必需的。",
    "Note that you can keep using these compatibility scripts just as you would have used the functions in the legacy version of GameMaker, however, due to the way they work, there will be a performance impact associated with this. We recommend that you\n    update projects to directly use the new methods and remove the compatibility scripts if you can, as it will improve performance and also give you an insight into the way that {}GameMaker{} and the GameMaker Language works compared to legacy products.":"请注意，您可以继续使用这些兼容性脚本，就像您在GameMaker的旧版本中使用功能一样，但是，由于它们的工作方式，会有与此相关的性能影响。我们建议您\n如果可以的话，更新项目以直接使用新方法并删除兼容性脚本，因为它将提高性能，并让您深入了解{}GameMaker{}和GameMaker语言与传统产品相比的工作方式。",
    "Obsolete Functions":"过时的函数",
    "What happens is that {}GameMaker{} will parse your project for all the obsolete functions and variables that you have used, and then create a series of scripts using those function names. These scripts will contain either the new equivalent\n    {}runtime function{} or a short {}script function{} that performs the same action as the obsolete function.":"发生的情况是{}GameMaker{}将解析您的项目以查找您使用的所有过时的函数和变量，然后使用这些函数名称创建一系列脚本。这些脚本将包含新的等效脚本\n{}运行时函数{}或执行与过时函数相同操作的短{}脚本函数{}。",
    "When you first import a {}GameMaker{} project you will be shown a compatibility report much like this one:":"当您第一次导入{}GameMaker{}项目时，您将看到一个与此类似的兼容性报告：",
    "When you have finished revising the compatibility report you can close the workspace, but should you need to revise anything within the report you can find it again by going to the {}Notes{} section of the\n    {}Asset Browser{}.":"修改完兼容性报告后，您可以关闭工作区，但如果您需要修改报告中的任何内容，您可以通过转到{2}资产浏览器{3}的{}Notes{}部分再次找到它\n。",
    "You can also find a complete list of all the obsolete functions that have equivalent compatibility scripts created for them from the following page:":"您还可以从以下页面找到所有已过时函数的完整列表，这些函数具有为它们创建的等效兼容性脚本：",
    "{}The main body of the report shows which objects and scripts have been affected and where, while at the end\n    you can find a list of the scripts that have been created for your project. You can click the middle mouse button {}&nbsp;or press {}&nbsp;on any of the scripts listed in the report to open it and see what has been done.":"{}报告的主体显示了哪些对象和脚本受到了影响以及在哪里，而在最后\n您可以找到为您的项目创建的脚本列表。您可以单击鼠标中键{}或在报表中列出的任何脚本上按{}以打开它并查看已完成的操作。"
}