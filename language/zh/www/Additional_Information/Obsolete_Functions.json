{
<<<<<<< Updated upstream
    "As with backgrounds (explained above) the {}tile {}resource from legacy GameMaker&nbsp;no longer exists, and instead we have {}Tile Sets{} in {}GameMaker{}. In legacy GameMaker, tiles used a background resource and were placed at different depths in the room editor or through code, however the method used was not terribly flexible and was also not that efficient. To address these issues, in {}GameMaker{} tilesets are now created from a sprite resource, and can have various different properties (like animation or auto-tiling). They are then placed on a tilemap layer within the room editor or through code. Due to these changes the following functions are now obsolete:":"与背景(如上所述)一样，来自传统GameMaker的{}磁贴{}资源不再存在，取而代之的是{}GameMaker{}中的{}磁贴集{}。在传统GameMaker中，磁贴使用背景资源，并通过房间编辑器或代码放置在不同的深度，但是使用的方法并不非常灵活，效率也不高。为了解决这些问题，在{}GameMaker{}中，现在从精灵资源创建了图集，并且可以具有各种不同的属性(如动画或自动平铺)。然后将它们放置在房间编辑器或通过代码内的tilemap图层上。由于这些变化，以下功能现已过时：",
    "Both legacy GameMaker and {}GameMaker{} have a visual scripting {}GML Visual{}&nbsp;interface for creating your games, however the way it is handled in {}GameMaker{} is quite different to the previous methods used. Previously, all GML Visual actions had their own corresponding function which worked \"behind the scenes\" to get the desired results, however this was not very transparent and added in extra overheads to the function calls, resulting in poorer performance. In {}GameMaker{} this has been changed, and now all actions compile to pure code (and can be shown as such if required), meaning that the following action functions are obsolete:":"旧版本GameMaker和{}GameMaker{}都有一个可视化脚本{}GML Visual{}界面来创建您的游戏，但是{}GameMaker{}中处理它的方式与以前使用的方法大不相同。以前，所有GML Visual操作都有自己相应的函数，这些函数\"在幕后\"工作以获得所需的结果，但是这不是很透明，并且在函数调用中增加了额外的开销，导致性能较差。在{}GameMaker{}中，这已更改，现在所有操作都编译为纯代码(如果需要，可以显示为纯代码)，这意味着以下操作函数已过时：",
    "Here you can find a list of all the functions that have been made obsolete when you compare {}GameMaker{} to legacy versions of the product. The functions listed here will be converted into {}compatibility scripts{} when you import a {}*.yyz{} made with a legacy version, and you can continue to work on the project as before. However, we recommend that you revise all the compatibility scripts created in a project, and ensure that future projects use the new functions/methods of working rather than depend on these scripts.":"在这里，您可以找到将{}GameMaker{}与产品的旧版本进行比较已过时的所有功能的列表。当您导入使用旧版制作的{}*. yyz{}时，此处列出的函数将转换为{}兼容性脚本{}，您可以像以前一样继续处理该项目。但是，我们建议您修改项目中创建的所有兼容性脚本，并确保未来的项目使用新的功能/工作方法，而不是依赖这些脚本。",
    "In legacy GameMaker you had a separate {}background {}resource, where you could add images to be used as backgrounds. In {}GameMaker{} all images are considered sprites, and the use you put them too will depend on the layer they are assigned to in the room. This means that there is no longer a \"background\" resource, and it also means that the following functions are obsolete:":"在旧版GameMaker中，您有一个单独的{}背景{}资源，您可以在其中添加用作背景的图像。在{}GameMaker{}中，所有图像都被认为是精灵，你把它们放在房间里的用途也取决于它们被分配到的图层。这意味着不再有\"背景\"资源，也意味着以下功能已过时：",
    "Legacy GameMaker lso had a number of different background variables that accessed the global background array. These are no longer required in {}GameMaker{}:":"旧版本GameMaker lso有许多不同的背景变量来访问全局背景数组。{}GameMaker{}不再需要这些：",
    "Legacy GameMaker&nbsp;had two different sound API\u0027s, one which used the deprecated {}sound_{} functions (that was only really valid for the HTML5 target platform), and the other which used the {}audio_{} functions. The audio API has been improved and expanded in {}GameMaker{}, making the legacy functions listed below obsolete:":"旧版本GameMaker有两种不同的声音API，一种使用已弃用的{}sound_{}函数(仅对HTML5目标平台有效)，另一种使用{}audio_{}函数。音频API已在{}GameMaker{}中得到改进和扩展，使下面列出的旧功能过时：",
    "Obsolete Functions":"过时的函数",
    "The following built-in global variables are also obsolete, although they are still considered reserved variables in GML so that the IDE can recognise them and flag them for updating/removing&nbsp;when a legacy project that uses them is imported (as are the variables listed under the Views and the Backgrounds sections, above):":"以下内置的全局变量也已过时，尽管它们在GML中仍被视为保留变量，以便IDE可以识别它们并在导入使用它们的遗留项目时标记它们以进行更新/删除(如上面视图和背景部分下列出的变量)：",
    "The way objects are treated in {}GameMaker{} has changed slightly due to the introduction of layers in the room editor. There still exists the \"depth\" variable, but it is now only really used for compatibility and you can no longer get or set the depth for objects, only instances. This makes the following functions obsolete:":"由于在房间编辑器中引入了图层，{}GameMaker{}中处理对象的方式略有变化。仍然存在\"深度\"变量，但它现在仅用于兼容性，您不再可以获取或设置对象的深度，只能获取实例。这使得以下功能过时：",
    "When using 3D models or primitives in legacy GameMaker, you had to use the {}d3d_{} functions. These used an obsolete API for drawing and in many cases were not related strictly to Direct 3D API, or even to using 3D itself. With the advent of vertex buffers, matrices and cameras in {}GameMaker{}, the following functions have been made obsolete:":"在旧版本GameMaker中使用3D模型或基元时，必须使用{}d3d_{}函数。它们使用过时的API进行绘图，并且在许多情况下与直接3D API没有严格的关系，甚至与使用3D本身也没有关系。随着{}GameMaker{}中的顶点缓冲区、矩阵和相机的出现，以下功能已被淘汰：",
    "With the advent of the camera functions in {}GameMaker{}, it means that a number of view variables are no longer required, specifically those referring to the view into the room rather than the view_port (which is still used). There are also a few functions for controlling how things are displayed that were available in legacy versions of GameMaker&nbsp;Studio which are also no longer appropriate. These variables and functions are listed below:":"随着GameMaker{}中相机功能的出现，这意味着不再需要许多视图变量，特别是那些指进入房间的视图，而不是view_port(仍在使用)。还有一些用于控制事物如何显示的功能，这些功能在GameMaker Studio的旧版本中可用，但也不再合适。这些变量和函数如下所示：",
    "You can find out more about Tile Sets from the manual section on the {}Tile Set Editor{} and about how to use them in the room editor from the section on {}Tile Layers{}. For more information on the functions that control background layers using code see {}Tilemap Layers{}. It is also worth noting that the GameMaker Language has some specific funtions related to using legacy tiles in imported projects, and you can find information on those {}here{}.":"您可以从{}磁贴集编辑器{}的手册部分了解更多关于磁贴集的信息，以及如何在{}磁贴图层{}部分的房间编辑器中使用它们。有关使用代码控制背景图层的函数的更多信息，请参见{}磁贴图层{}。还值得注意的是，GameMaker语言有一些与在导入项目中使用旧磁贴相关的特定功能，您可以在{}此处{}找到有关这些的信息。",
    "You can find out more about audio resources from the manual section on the {}Sound Editor{} and on the functions that control audio using code from the section on {}Audio{}.&nbsp;":"您可以从{}声音编辑器{}的手册部分以及使用{}音频{}部分的代码控制音频的功能中找到有关音频资源的更多信息。",
    "You can find out more about cameras from the manual section on {}Cameras And The Display{}.":"您可以从手册的{}相机和显示器{}部分找到更多关于相机的信息。",
    "You can find out more about object resources from the manual section on the {}Object Editor{} and on the functions that control objects using code from the section {}Objects{}.":"您可以从{}物体编辑器{}的手册部分以及使用{}物体{}部分的代码控制对象的函数中找到有关对象资源的更多信息。",
    "You can find out more about the new GML Visual from the manual section on&nbsp;{}GML Visual{}.":"您可以从手册的{}GML Visual{}部分找到有关新GML Visual的更多信息。",
    "You can find out more about vertex buffers {}here{}, more about matrices {}here{}, more about cameras&nbsp;{}here{}, and more about the GPU functions {}here{}.":"您可以在{}此处{}找到有关顶点缓冲区的更多信息，在{}此处{}找到有关矩阵的更多信息，在{}此处{}找到有关相机的更多信息，在{}此处{}找到有关GPU功能的更多信息。",
    "You can find out more about {}Background Layers{} from the section on the {}Room Editor{}, and for more information on the functions that control background layers using code see {}Background Layers{}.":"您可以从{}房间编辑器{}部分找到有关{}背景图层{}的更多信息，有关使用代码控制背景图层的函数的更多信息，请参阅{}背景图层{}。",
    "You can get our official&nbsp;extensions for advertising and other APIs from the&nbsp;{}Marketplace Page{}.":"您可以从{}市场页面{}获取我们用于广告和其他API的官方扩展。",
    "{}3rd Party Support{}{}3rd Party Support{}":"{}第三方支持{}{}第三方支持{}",
    "{}Backgrounds{}{}Backgrounds{}":"{}背景(Backgrounds){}{}背景(Backgrounds){}",
    "{}GameMaker{} moves a lot of built in functionality from previous versions into {}extensions{}, meaning that the following 3rd party support functions are considered obsolete:":"{}GameMaker{}将许多内置功能从以前的版本转移到{}扩展{}中，这意味着以下第三方支持功能被认为是过时的：",
    "{}Objects{}{}Objects{}":"{}物体(Objects){}{}物体(Objects){}",
    "{}Sounds{}{}Sounds{}":"{}声音(Sounds){}{}声音(Sounds){}",
    "{}Tiles{}{}Tiles{}":"{}磁贴(Tiles){}{}磁贴(Tiles){}",
    "{}View Variables And Window Functions{}{}View Variables And Window Functions{}":"{}查看变量和窗口函数{}{}查看变量和窗口函数{}",
    "{}{}GML Visual{} Actions{}{}{}GML Visual{} Actions{}":"{}{}GML可视化{}操作{}{}{}GML可视化{}操作{}"
=======
    "As with backgrounds (explained above) the {}tile {}resource from legacy GameMaker&nbsp;no longer exists, and instead we have {}Tile Sets{} in {}GameMaker{}. In legacy GameMaker, tiles used a background resource and were placed at different depths in the room editor or through code, however the method used was not terribly flexible and was also not that efficient. To address these issues, in {}GameMaker{} tilesets are now created from a sprite resource, and can have various different properties (like animation or auto-tiling). They are then placed on a tilemap layer within the room editor or through code. Due to these changes the following functions are now obsolete:":"就像前面解释的背景一样，来自过时 GameMaker 的{}tile{}资源不再存在，取而代之的是我们在{}GameMaker{}中有{}tile Sets{}。在过时的GameMaker中，瓷砖使用背景资源，并通过房间编辑器或代码放置在不同的深度，然而所使用的方法并不灵活，也不是很有效。为了解决这些问题，在{}GameMaker{}中，现在从一个精灵资源创建瓷砖集，并且可以有各种不同的属性(如动画或自动瓷砖)。然后它们被放置在房间编辑器或通过代码的平铺图层上。由于这些变化，下列功能现已过时:",
    "Here you can find a list of all the functions that have been made obsolete when you compare {}GameMaker{} to legacy versions of the product. The functions listed here will be converted into {}compatibility scripts{} when you import a {}*.yyz{} made with a legacy version, and you can continue to work on the project as before. However, we recommend that you revise all the compatibility scripts created in a project, and ensure that future projects use the new functions/methods of working rather than depend on these scripts.":"在将 {}GameMaker{} 与产品的旧版本进行比较时，您可以在此处找到已过时的所有功能的列表。 当您导入使用旧版本制作的 {}*.yyz{} 时，此处列出的函数将转换为{}兼容性脚本{}，您可以像以前一样继续处理该项目。 但是，我们建议您修改项目中创建的所有兼容性脚本，并确保未来的项目使用新的函数/工作方式，而不是依赖于这些脚本。",
    "In legacy GameMaker you had a separate {}background {}resource, where you could add images to be used as backgrounds. In {}GameMaker{} all images are considered sprites, and the use you put them too will depend on the layer they are assigned to in the room. This means that there is no longer a \"background\" resource, and it also means that the following functions are obsolete:":"在旧版 GameMaker 中，您有一个单独的{}背景{}资源，您可以在其中添加要用作背景的图像。 在 {}GameMaker{} 中，所有图像都被视为精灵，您放置它们的用途也将取决于它们在房间中分配到的图层。 这意味着不再有“背景”资源，也意味着以下函数已过时：",
    "Legacy GameMaker lso had a number of different background variables that accessed the global background array. These are no longer required in {}GameMaker{}:":"旧版GameMaker也有许多访问全局背景数组的不同背景变量。这些在{}GameMaker{}中不再需要:",
    "Legacy GameMaker&nbsp;had two different sound API\u0027s, one which used the deprecated {}sound_{} functions (that was only really valid for the HTML5 target platform), and the other which used the {}audio_{} functions. The audio API has been improved and expanded in {}GameMaker{}, making the legacy functions listed below obsolete:":"过时的GameMaker有两个不同的声音API，一个使用已弃用的{}sound_{}函数(这只适用于HTML5目标平台)，另一个使用{}audio_{}函数。音频API在{}GameMaker{}中得到了改进和扩展，使以下列出的遗留功能过时:",
    "Obsolete Functions":"过时函数",
    "The following built-in global variables are also obsolete, although they are still considered reserved variables in GML so that the IDE can recognise them and flag them for updating/removing&nbsp;when a legacy project that uses them is imported (as are the variables listed under the Views and the Backgrounds sections, above):":"以下内置的全局变量也已过时，尽管它们在 GML 中仍被认为是保留变量，以便 IDE 能够识别它们，并在导入使用它们的遗留项目时标记它们以便更新/删除(上面视图和背景部分中列出的变量也是如此) :",
    "The way objects are treated in {}GameMaker{} has changed slightly due to the introduction of layers in the room editor. There still exists the \"depth\" variable, but it is now only really used for compatibility and you can no longer get or set the depth for objects, only instances. This makes the following functions obsolete:":"由于在房间编辑器中引入了层，{} GameMaker {}中处理对象的方式略有改变。仍然存在“深度”变量，但它现在只用于兼容性，您不能再获取或设置对象的深度，只能获取或设置实例。这使得以下函数过时:",
    "When using 3D models or primitives in legacy GameMaker, you had to use the {}d3d_{} functions. These used an obsolete API for drawing and in many cases were not related strictly to Direct 3D API, or even to using 3D itself. With the advent of vertex buffers, matrices and cameras in {}GameMaker{}, the following functions have been made obsolete:":"当在遗留的GameMaker中使用3D模型或原语时，你必须使用{}d3d_{}函数。这些游戏使用的是过时的绘图API，并且在许多情况下与Direct 3D API并不严格相关，甚至与使用3D本身并不相关。随着{}GameMaker{}中顶点缓冲区、矩阵和摄像机的出现，以下函数已经过时:",
    "With the advent of the camera functions in {}GameMaker{}, it means that a number of view variables are no longer required, specifically those referring to the view into the room rather than the view_port (which is still used). There are also a few functions for controlling how things are displayed that were available in legacy versions of GameMaker&nbsp;Studio which are also no longer appropriate. These variables and functions are listed below:":"随着{}GameMaker{}中的摄像机函数的出现，这意味着许多视图变量不再需要，特别是那些指向进入房间的视图而不是view_port的视图变量(仍然在使用)。还有一些控制内容显示的功能，在gamemaker的旧版本中是可用的，但现在也不合适了。下面列出了这些变量和函数:",
    "You can find out more about Tile Sets from the manual section on the {}Tile Set Editor{} and about how to use them in the room editor from the section on {}Tile Layers{}. For more information on the functions that control background layers using code see {}Tilemap Layers{}. It is also worth noting that the GameMaker Language has some specific funtions related to using legacy tiles in imported projects, and you can find information on those {}here{}.":"您可以从{}Tile Set 编辑器{}的手册部分了解更多关于Tile Sets的信息，也可以从{}Tile Layers{}部分了解如何在房间编辑器中使用它们。有关使用代码控制后台层的函数的更多信息，请参见{}Tilemap layers{}。同样值得注意的是，GameMaker语言有一些与在导入项目中使用遗留贴图相关的特定函数，你可以在这里{}找到关于这些{}的信息。",
    "You can find out more about audio resources from the manual section on the {}Sound Editor{} and on the functions that control audio using code from the section on {}Audio{}.&nbsp;":"您可以从{}声音编辑器{}上的手册部分和使用{}音频{}上的代码控制音频的函数部分了解有关音频资源的更多信息。",
    "You can find out more about cameras from the manual section on {}Cameras And The Display{}.":"你可以从{}相机和显示{}的手册部分找到更多关于相机的信息。",
    "You can find out more about object resources from the manual section on the {}Object Editor{} and on the functions that control objects using code from the section {}Objects{}.":"可以从{}对象编辑器{}的手册部分和使用{}对象{}部分的代码控制对象的函数中了解有关对象资源的更多信息。",
    "You can find out more about vertex buffers {}here{}, more about matrices {}here{}, more about cameras&nbsp;{}here{}, and more about the GPU functions {}here{}.":"你可以在这里{}找到更多关于顶点缓冲区{}的信息，在这里{}找到更多关于矩阵{}的信息，在这里{}找到更多关于相机&nbsp;{}的信息，在这里{}找到更多关于GPU函数{}的信息。",
    "You can find out more about {}Background Layers{} from the section on the {}Room Editor{}, and for more information on the functions that control background layers using code see {}Background Layers{}.":"您可以从{}房间编辑器{}一节中了解更多关于{} 背景层 {}的信息，并查看{} 背景层 {}了解更多关于使用代码控制背景层的函数的信息。",
    "You can get our official&nbsp;extensions for advertising and other APIs from the&nbsp;{}Marketplace Page{}.":"你可以从 {}市场页面 {}获得我们的广告和其他api的官方扩展。",
    "{}3rd Party Support{}{}3rd Party Support{}":"第三方支持",
    "{}Backgrounds{}{}Backgrounds{}":"{}背景{}背景{}",
    "{}GameMaker{} moves a lot of built in functionality from previous versions into {}extensions{}, meaning that the following 3rd party support functions are considered obsolete:":"{} GameMaker {}将大量以前版本的内置功能移植到{}扩展{}中，这意味着以下第三方支持功能被认为是过时的:",
    "{}Objects{}{}Objects{}":"{}对象{}对象{}",
    "{}Sounds{}{}Sounds{}":"声音",
    "{}View Variables And Window Functions{}{}View Variables And Window Functions{}":"{}视图变量和窗口函数{}{}查看变量和窗口函数{}",
    "{}{}GML Visual{} Actions{}{}{}GML Visual{} Actions{}":"{}{} GML 可视化{}操作{}{} GML 可视化{}操作{}"
>>>>>>> Stashed changes
}