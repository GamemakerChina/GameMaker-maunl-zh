{
    "Alternatively, you can supply a direct path to a {}tests.json{} file instead of a directory":"或者，您可以提供到{} tests.json {}文件的直接路径，而不是目录",
    "Below you can find examples of build commands for all platforms:":"下面您可以找到所有平台的构建命令示例:",
    "Build the projects through the IDE for the targets required, to make sure that they work fine":"通过IDE为所需目标构建项目，以确保它们工作正常",
    "Building HTML5 folder (make sure to specify a target folder with {}/tf){}:":"构建 HTML5文件夹(确保用{}/tf 指定目标文件夹){} :",
    "Building VM for Linux while on a PC:":"在 PC 上为 Linux VM 构建:",
    "Building VM for PS4 while on a PC:":"在 PC 上为 PS4 VM 构建:",
    "Building VM for PS5 while on a PC:":"在 PC 上为 PS5 VM 构建:",
    "Building VM for Switch while on a PC:":"在 PC 上为 Switch VM 构建:",
    "Building VM for Windows -- {}Run{}, {}PackageZip {}and {}PackageNsis{}:":"为 Windows 进行 VM 构建 —— {}Run{}、{} PackageZip {}和{} PackageNsis{} :",
    "Building VM for Xbox One while on a PC:":"在 PC 上为 Xbox One VM 构建:",
    "Building VM for Xbox Series X/S:":"为 Xbox X/S 系列 VM 构建:",
    "Building VM for YYC while on a PC:":"在 PC 上为 Switch YYC 构建:",
    "Building VM for iOS while on a Mac:":"在 Mac 上为 iOS VM 构建:",
    "Building VM for iOS while on a PC:":"在 PC 上为 iOS VM 构建:",
    "Building VM for macOS while on a Mac:":"在 Mac 上为 macOS VM 构建:",
    "Building VM for macOS while on a PC:":"在 PC 上为 macOS VM 构建:",
    "Building VM for tvOS while on a Mac:":"在 Mac 上为 tvOS VM 构建:",
    "Building VM for tvOS while on a PC:":"在 PC 上为 tvOS VM 构建:",
    "Building YYC for Linux while on a PC:":"在 PC 上为 Linux YYC 构建:",
    "Building YYC for PS4 while on a PC:":"在PC上为 PS4 YYC 构建:",
    "Building YYC for PS5 while on a PC:":"在PC上为 PS5 YYC 构建:",
    "Building YYC for Windows-- {}Run{}, {}PackageZip {}and {}PackageNsis{}:":"为 Windows 进行 YYC 构建 ——{}Run{}、{}PackageZip{}和{}PackageNsis{} :",
    "Building YYC for Xbox One while on a PC:":"在PC上为 Xbox One YYC 构建:",
    "Building YYC for Xbox Series X/S:":"为 Xbox X/S 系列 YYC 构建:",
    "Building YYC for iOS while on a Mac:":"在 Mac 上为 iOS YYC构建:",
    "Building YYC for iOS while on a PC:":"在PC上为 iOS YYC 构建:",
    "Building YYC for macOS while on a Mac:":"在 Mac 上为 macOS YYC 构建:",
    "Building YYC for macOS while on a PC:":"在 PC 上为 macOS YYC 构建:",
    "Building YYC for tvOS while on a Mac:":"在 Mac 上为 tvOS YYC 构建:",
    "Building YYC for tvOS while on a PC:":"在PC上为 tvOS YYC 构建:",
    "Building an Android APK using VM:":"使用 VM 构建 Android APK:",
    "Building an Android APK using YYC:":"使用 YYC 构建 Android APK:",
    "Building via Command Line":"通过命令行构建",
    "Calculates the checksums for all the installed files and compares them to the checksums written into the manifest {}folder{}. You can specify a folder to check, however if that is not specified it will default to the current directory. {} {} This will flag any files where the checksums don\u0027t match, files that are missing and files that should not be there. {} {} Do note that the manifest files themselves are not verified and a user can alter the manifest files to match the installed ones. ":"计算所有已安装文件的校验并将其与写入manifest{}文件夹{}的校验和进行比较。您可以指定要检查的文件夹，但是如果没有指定该文件夹，它将默认为工作目录。{}{}这将标记校验和不匹配的任何文件、丢失的文件和不应该存在的文件。{}{}请注意，manifest文件本身没有经过验证，用户可以修改manifest文件以匹配已安装的文件。",
    "Cleaning Android project:":"清理 Android 项目:",
    "Cleaning GX.games project:":"清理 GX.games 项目:",
    "Cleaning HTML5 project:":"清理 HTML5项目:",
    "Cleaning Linux project:":"清理 Linux 项目:",
    "Cleaning PS4 project:":"清理 PS4 工程:",
    "Cleaning PS5 project:":"清理 PS5 工程:",
    "Cleaning Switch project:":"清理Switch项目:",
    "Cleaning Windows project:":"清理 Windows 项目:",
    "Cleaning Xbox One project:":"清理 Xbox One 项目:",
    "Cleaning Xbox Series X/S project:":"清理 Xbox X/S 系列项目:",
    "Cleaning macOS project:":"清理 MacOS 项目:",
    "Cleaning tvOS project:":"清理 tvOS 工程:",
    "Comma-separated list of targets in the {}PLATFORM|DEVICE{} format, e.g.: {}/target=\"Windows|Local,HTML|Firefox\"{} {} {} If you specify&nbsp;{}all{}, the tests will attempt to run for every device in the {}devices.json{} file ":"{}PLATFORM|DevICE{}格式中以逗号分隔的目标列表，例如: {}/target=\"Windows|Local,HTML|Firefox\"{} {} {}如果指定{}all{} ，测试将尝试为{} devices.json {}文件中的每个设备运行",
    "Create a batch file that will do the build that you require within the task (test this from the command line)":"创建一个批处理文件，该文件将执行任务中所需的生成（从命令行测试）",
    "Each object should describe one test {} {}The test object must contain these keys: {} {}{}name{}: A name used to report whether the test has passed or failed{} {}{}path{}: A path to a {}.yyp{}, {}.yyz{}, {}.gml{}, {}.js{} file or folder for the test{} {}{}command{}: The Igor command for the test ({}Run{}, {}CreatePackage{}, etc.&nbsp;as described above){} {} {} {}The test object may also contain these keys: {} {}{}platform{}: Passed directly through to Igor to do the test{} {}{}device{}: The device name from the {}devices.json{} file{} {}{}target{}: The target in a \"{}PLATFORM|TARGET\"{} format, e.g.: \"{}Windows|Local\"{}{} {}{}timeout{}: A timeout for the total test including compile and run;&nbsp;if exceeded the test will be stopped and&nbsp;marked as failed{} {}{}waittime{}: The length of time to wait after entering the main loop before deciding whether the&nbsp;test has passed{} {}{}owner{}: the e-mail address of the user who will be e-mailed if this test fails{} {} {} {} ":"每个对象应该描述一个测试{}{}测试对象必须包含以下键:{}{}{}name{} : 用于报告测试是否通过或失败的名称{}{}{}path{} : 一个指向{}.yyp{},{}.yyz{},{}.gml{},{}.js{}的测试文件或文件夹路径。{}{}{}command{}: 测试的 Igor 命令({}Run{} ，{}CreatePackage{}等，如上所述){}{}{}{}测试对象还可以包含以下键:{}{}{}platform{} : 直接传递给 Igor 以执行测试{}{}{}device{} : 来自{}devices.json{}的设备名称{}{}{}target{} : 类似\"{}平台|目标\"{}格式，例如: \"{}Windows|Local\"{}{}{}{}timeout{} : 包括编译和运行在内的总测试的允许时长; 如果超时，将停止测试并标记为失败{}{}{}waittime{} : 在进入主循环之后等待的时间长度，然后再决定测试已通过{}{}{}owner{} : 如果此测试失败，将通过电子邮件发送的用户的电子邮件地址{}{}{}{}",
    "Example":"例子",
    "Examples":"例子",
    "Format":"格式",
    "Here are the commands that can be used with the Igor runtime:":"下面是可以与 Igor 运行时一起使用的命令:",
    "Here are the options that can be used for testing your builds with Igor:":"下面是用 Igor 测试构建的选项:",
    "Here are the options that can be used with the Igor runtime:":"下面是可以与 Igor 运行时一起使用的选项:",
    "Here are the options that you can use while running the {}Igor {}executable:":"以下是运行{}Igor{}可执行文件时可以使用的选项：",
    "Here is an example of a {}tests.json{} file:":"下面是{}tests.json{}文件的一个示例:",
    "Hook the batch file into the CI task and test within the Jenkins environment":"将批处理文件挂接到CI任务并在Jenkins环境中进行测试",
    "If it\u0027s a directory, Igor will look for a file called {}tests.json{} in the directory {} {}If the file {}is not found{}, Igor will recursively search for {}.yyz{} and {}.yyp{} files in the directory {} {}Each project found will be built and run on Windows{} {}It will wait till the runner reaches the main loop {} {}The test passes if the runner is still running after the wait time{} {}The test fails if the project does not compile within the timeout period, or crashes before the wait time is over{} {} {} {} {} {}If a&nbsp;{}tests.json{} file {}is found{}, Igor will run the tests described in the file (see example below){} {} ":"{12}注意{13}如果是一个目录，Igor 将在目录中查找名为{} tests.json {}的文件。{}{}如果{}没有找到{}文件 ，Igor 将递归地搜索在目录中的{}.yyz{}和{}.yyp{}文件。{}{}每个被找到的项目都将被构建并在 Windows 上运行它，直到运行程序到达主循环{}{}如果运行程序在等待时间之后仍在运行，则测试通过{}{}如果项目在超时期间内没有编译，或者在等待时间超过之前崩溃，则测试失败{}{}{}{}{}{}如果{26}找到{27}{}tests.json{}文件 ，Igor 将运行文件中描述的测试(参见下面的示例){}{}",
    "Igor CI Building":"Igor 持续集成构建",
    "Igor Runtime":"Igor 运行时",
    "Igor Testing":"Igor 测试",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- HTML5 Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- HTML5 Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Linux Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime文件夹] /project=[YYP项目文件夹] /cache=[Cache文件夹] /temp=[临时文件夹] -- Linux Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Mac Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime文件夹] /project=[YYP项目文件夹] /cache=[Cache文件夹] /temp=[临时文件夹] -- Mac Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- OperaGX Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Run":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- OperaGX Run",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Switch Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- Switch Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime文件夹] /project=[YYP项目文件夹] /cache=[Cache文件夹] /temp=[临时文件夹] -- Android Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Run":"Igor.exe /uf=[用户文件夹] /rp=[Runtime文件夹] /project=[YYP项目文件夹] /cache=[Cache文件夹] /temp=[临时文件夹] -- Windows Run",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOne Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- XBoxOne Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOneSeriesXS Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- XBoxOneSeriesXS Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps4 Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- ps4 Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps5 Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- ps5 Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- tvos Clean":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] -- tvos Clean",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Android Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] -- Android Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Mac Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] -- Mac Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageNsis":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] -- Windows PackageNsis",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageZip":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] -- Windows PackageZip",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- ios Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] -- ios Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- tvos Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] -- tvos Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Linux Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- Linux Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Mac Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- Mac Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Switch Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- Switch Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOne Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- XBoxOne Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOneSeriesXS Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- XBoxOneSeriesXS Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ios Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- ios Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps4 Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- ps4 Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps5 Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- ps5 Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- tvos Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /device=[设备名称] -- tvos Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Android Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC -- Android Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Mac Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC -- Mac Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageNsis":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC -- Windows PackageNsis",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageZip":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC -- Windows PackageZip",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- ios Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC -- ios Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- tvos Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC -- tvos Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Linux Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- Linux Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Mac Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- Mac Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Switch Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- Switch Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOne Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- XBoxOne Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOneSeriesXS Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- XBoxOneSeriesXS Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ios Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- ios Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps4 Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- ps4 Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps5 Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- ps5 Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- tvos Package":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] /platform=YYC /device=[设备名称] -- tvos Package",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_folder] -- HTML5 folder":"Igor.exe /uf=[用户文件夹] /rp=[Runtime路径] /project=[YYP项目文件] /cache=[Cache文件夹] /temp=[临时文件夹] /of=[输出文件夹] /tf=[目标文件] -- HTML5 folder",
    "Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /platform=YYC -- Windows Run":"Igor.exe /uf=[用户文件夹] /rp=[Runtime文件夹] /project=[YYP项目文件夹] /cache=[Cache文件夹] /temp=[临时文件夹] /platform=YYC -- Windows Run",
    "In addition to building your project through the IDE,&nbsp;{}GameMaker{}&nbsp;allows you to build your projects through a command-line interface using the many options and commands described below. You can use this to build your project, test it and deploy it to multiple platforms by running one batch file, and to set up continuous integration through an automation server such as {}Jenkins{}.":"{}GameMaker{}除了通过IDE构建项目外，还允许您使用下面介绍的许多选项和命令通过命令行界面构建项目。您可以通过运行一个批处理文件来生成项目、测试项目并将其部署到多个平台，以及通过自动化服务器（如{}Jenkins{}）设置连续集成。",
    "Install {}GameMaker{} and the runtimes needed":"安装{}GameMaker{}和所需的运行时",
    "Installs the latest runtime from the given feed using the given {}version{} as a search filter; if that is not specified, it defaults to the latest version. It will get all the modules that the user has on their licence.":"使用给定{}版本{}作为搜索筛选器从给定提要安装最新运行时; 如果未指定，则默认为最新版本。它将获得用户在其许可证上的所有模块。",
    "Lists the runtimes available in the current folder ({}directory{}=full path to the folder) {} {} You can specify a directory to look in, but if it\u0027s not specified it will default to the current directory {} {} This also checks whether there is a {}receipt.json{} file and a {}manifest{} folder inside the directory (making sure that it\u0027s actually a runtime) ":"列出当前文件夹中可用的运行时({}directory{} = 文件夹的完整路径){}{}可以指定要查看的目录，但是如果没有指定，它将默认为工作目录{}{}这也检查目录中是否有{}Receipt.json{}文件和{}manifest{}文件夹(确保它实际上是一个运行时)",
    "Lists the runtimes available on a feed (version number, date/time of build)":"列出提要上可用的运行时(版本号、生成日期/时间)",
    "Notes":"注意",
    "Number of seconds to wait in the main loop before declaring the test as passed, defaults to 30 seconds":"在主循环中声明测试通过之前等待的秒数，默认为30秒",
    "Options":"选项",
    "Prints out information about the most recent runtime on the given feed; also needs a licence file to show information regarding the modules available for the user {} {} {}version{} can either by a string used to search through the feed titles (e.g.: {}\"739\"{} would show information for all builds containing 739 in their version numbers), or it can be {}all{} to show information for all feeds {} {} It will list the modules with the {}.zip{} file names for each module ":"打印出给定提要上最近运行时的信息; 还需要一个许可文件来显示用户{}{}{}版本{}可以通过用于搜索提要标题的字符串(例如: {}“739”{}将显示所有包含739的版本号的构建的信息) ，或者它可以{}所有{}来显示所有提要的信息{}{}它将列出具有的每个模块的{} .zip {}文件名",
    "Running GX.games:":"运行 GX.game:",
    "Set a direct path to a licence file, can be used as an alternative to setting a user folder ({}/uf{})":"设置许可文件的直接路径，可以作为设置用户文件夹({}/uf{})的替代方法",
    "Set a direct path to a {}devices.json{} file, can be used as an alternative to setting a user folder ({}/uf{})":"设置到{}devices.json{}文件的直接路径，可以作为设置用户文件夹({}/uf{})的替代方法",
    "Set the URL to fetch runtime information from (defaults to the stable release)":"设置从中获取运行时信息的 URL (默认为稳定版本)",
    "Set the direct path to a licence file, can be used as an alternative to setting a user folder ({}/uf{})":"设置许可文件的直接路径，可以作为设置用户文件夹({}/uf{})的替代方法",
    "Set the local runtime install folder to list the installed runtimes or install new runtimes":"设置本地运行时安装文件夹以列出已安装的运行时或安装新的运行时",
    "Set the user folder used for retrieving licence information so {}GameMaker{} knows which modules can be installed":"设置用于检索许可证信息的用户文件夹，以便{} GameMaker {}知道可以安装哪些模块",
    "Set up a CI environment (this depends on how you are going to build your games); we suggest using {}Jenkins{}":"设置CI环境（这取决于您打算如何构建游戏）；我们建议使用{}Jenkins{}",
    "Set up your CI task&nbsp;and ensure that all the prerequisites are setup (i.e. source control sync to your project)":"设置您的CI任务并确保已设置所有先决条件(即源代码管理与项目同步)",
    "Setting Up":"设置",
    "Some platforms (notably Android) will automatically&nbsp;{}subst{} a drive while building, so you may need to manually clean this up in the event of an error":"有些平台（特别是安卓）会在构建时自动{}subst{}一个驱动器，所以你可能需要在出现错误时手动清理。",
    "Some platforms may have issues with the length of your file paths, in which case you will need to {}{}subst{}{}&nbsp;virtual drives on your PC (like the IDE does) before passing them into your commands":"某些平台可能会遇到文件路径长度问题，在这种情况下，您需要在PC上通过{}{}subst{}{}命令创建虚拟驱动器（如IDE所做的），然后才能将它们传递到您的命令中",
    "Test building from the command line (see examples below)":"从命令行进行构建测试（请参见下面的示例）",
    "Tests.json File":"Tests.json 文件",
    "The JSON file should contain an array&nbsp;of objects":"JSON 文件应该包含一个对象数组",
    "The actual file name of the ZIP file or NSIS installer that is created":"创建的 ZIP 文件或 NSIS 安装程序的实际文件名",
    "The cache directory to use (defaults to {}\\cache{}&nbsp;in the current directory)":"要使用的缓存目录(默认为当前目录中的{}\\cache{})",
    "The full path to the project\u0027s {}.yyp{} file":"*{}.yyp{}文件的完整路径",
    "The name of the configuration to use (defaults to {}Default{})":"要使用的配置的名称(默认值为{} Default {})",
    "The name of the target device as set up in the IDE":"在 IDE 中设置的目标设备的名称",
    "The number of CPUs to use during the build process":"生成过程中要使用的 CPU 数",
    "The output directory where the build will be extracted; do not specify just a directory as the trailing entry is always removed (e.g.: specifying {}d:\\game\\output{} will place the game files in {}d:\\game{}) {} {} If this is not specified, a directory named {}output{} will be created in the same directory as the {}.bat{} file (or where the command is running from), containing the extracted build files ":"将提取构建的输出目录; 不要指定一个目录，因为后面的条目总是被删除(例如: 指定{}d:\\game\\output{}将把游戏文件放在{}d:\\game{}){}{}如果没有指定，将在相同的目录中创建一个名为{}output{}的目录，{}.bat{}文件(或命令从其中运行) ，包含提取的生成文件",
    "The output type (either YYC or VM), defaults to VM":"输出类型(YYC 或 VM) ，默认为 VM",
    "The root folder of the runtime":"Runtime的根目录",
    "The temporary directory to use (defaults to {}c:\\temp{})":"要使用的临时目录(默认为{}c:\\temp{})",
    "The timeout to use for the test in seconds, defaults to 120 seconds; the test will be stopped after this timeout is over and will be marked as failed":"用于测试的超时(秒) ，默认为120秒; 超时结束后，测试将停止，并将标记为失败",
    "The user folder used for retrieving licence information {} {} On Windows, this will be:&nbsp;{}{}%appdata%\\GameMaker\\&lt;user_name&gt;_&lt;number&gt;{}{} {} On macOS, this will be:&nbsp;{}{}~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;{}{} ":"用于检索许可证信息的用户文件夹{}{}在Windows上，这将是：{}{}%appdata%\\GameMaker\\&lt;user_name&gt;_&lt;number&gt;{}{}{}在MacOS上，这将是：{}{}~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;{}{} ",
    "The {}tests.json{} file must have the following format:":"{}tests.json{}文件必须具有以下格式:",
    "There is one command that you can use to run tests with Igor:":"有一个命令可以用来对 Igor 运行测试:",
    "This is done by running the {}Igor.exe{} executable present within your runtime folder and passing in the options and commands listed on this page. On Windows this will be present in the&nbsp;{}C:\\ProgramData\\GameMaker\\Cache\\runtimes\\runtime-[version]\\bin{}&nbsp;folder and on Mac under {}/Users/Shared/GameMaker/Cache/runtimes/runtime-[version]/bin{}.":"这是通过运行Runtime文件夹中存在的{}Igor.exe{}可执行文件并输入此页上列出的选项和命令来完成的。在Windows上，该文件在 {}C:\\ProgramData\\GameMaker\\Cache\\runtimes\\runtime-[版本号]\\bin{}文件夹和Mac上的{}/Users/Shared/GameMaker/Cache/runtimes/runtime-[版本号]/bin{}下。",
    "To set up CI&nbsp;building on a machine, you will need to do the following:":"要在计算机上设置CI构建，需要执行以下操作：",
    "Used to look up the device name in the user folder\u0027s {}devices.json{} file":"用于在用户文件夹的{}devices.json{}文件中查找设备名称",
    "You must specify either a test directory or a test file name.":"必须指定测试目录或测试文件名。",
    "{}GameMaker{}除了通过IDE{}构建项目外，还允许您使用下面介绍的许多选项和命令通过命令行界面构建项目。您可以通过运行一个批处理文件来生成项目、测试项目并将其部署到多个平台，以及通过自动化服务器（如{}Jenkins{}）设置连续集成。":"GameMaker{}除了通过IDE{}构建项目外，还允许您使用下面介绍的许多选项和命令通过命令行界面构建项目。您可以通过运行一个批处理文件来生成项目、测试项目并将其部署到多个平台，以及通过自动化服务器（如{}Jenkins{}）设置连续集成。",
    "{}Note{} that on Mac you will need to use mono to run Igor, so you will need to write {}{}mono{}{} before all your commands, e.g.:&nbsp;{}mono Igor.exe [options]{}":"{}注意{}，在 Mac 上需要使用 mono 来运行 Igor，所以在所有命令之前需要编写{}{} mono {}{} ，例如: {}mono Igor.exe [options]{}",
    "{}{}NOTE{}{}&nbsp;Building executable packages via command line is only&nbsp;available on specific licences, so please look at {}this page{} to find out whether your licence supports that. For all other licences, you can run and debug your project through a command line without any restrictions.":"{}{}注意{}{}通过命令行生成可执行文件包仅在特定许可证上可用，因此请查看{}此页面{}以了解您的许可证是否支持此操作。对于所有其他许可证，您可以通过命令行运行和调试项目，而不受任何限制。",
    "某些平台可能会遇到文件路径长度问题，在这种情况下，您需要在PC上通过{}{}subst{}{}命令创建虚拟驱动器（如IDE所做的），然后才能将它们传递到您的命令中":"某些平台可能会遇到文件路径长度问题，在这种情况下，您需要在PC上通过{}{}subst{}{}命令创建虚拟驱动器（如IDE所做的），然后才能将它们传递到您的命令中"
}