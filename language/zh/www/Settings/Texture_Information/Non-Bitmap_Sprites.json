{
    "A sprite made using skeletal animation, is one in which a base \"skeleton\" has been created and animated using key-frames to move the component parts of the skeleton over time. This skeleton is then skinned from a {}texture atlas{} and the resulting animation exported in one of many file types. {}GameMaker{} permits you to import this type of sprite as long as it has been exported as a {}*.json{} format file and has the correctly associated texture atlas file ({}*.atlas{}) and image file (as a {}*.png{}) {}in the same directory{}.":"使用骨骼动画制作的精灵是其中已创建基础\"骨骼\"并使用关键帧设置动画以随时间移动骨骼的组件部分的精灵。然后从{}纹理图集{}中蒙皮该骨骼，并以多种文件类型之一导出生成的动画。{}GameMaker{}允许您导入此类精灵，只要它已导出为{}*.json{}格式的文件，并且在同一目录{}中具有正确关联的纹理图集文件({6}*.atlas{7})和图像文件(作为{8}*.png{9}){}。",
    "As a SWF file is created from multiple layers, some of which potentially overlap, alpha doesn\u0027t work quite the way it does with bitmap sprites - overlapping areas will not look as transparent as other parts of the sprite, as the pixels there are being drawn over multiple times.":"由于SWF文件是从多个图层创建的，其中一些图层可能会重叠，因此Alpha的工作方式与使用位图精灵的方式不太相同-重叠区域看起来不会像精灵的其他部分那样透明，因为那里的像素正在多次绘制。",
    "Bitmap fills {}are {}supported, though if you use tiled bitmap fills as part of your SWF file you need to make sure the bitmap is a power-of-two in size, otherwise it won\u0027t tile properly. Text rendering is also supported, but you need to embed the font in your SWF file for it to show up in the resulting sprite. Also, currently only left-aligned single line text is supported.":"{}支持位图填充{}，但如果将图块位图填充用作SWF文件的一部分，则需要确保位图的大小为二的倍数，否则将无法正确图块。也支持文本渲染，但您需要将字体嵌入到SWF文件中，以便在生成的精灵中显示该字体。此外，当前仅支持左对齐的单行文本。",
    "Currently {}GameMaker{} has {}limited {}support for vector sprites. and can only import vector images from {}SWF{} format files. The way of importing them into the program is almost identical to that for adding a normal bitmap image. To add a vector sprite, create a new sprite, which will bring up the standard Load Sprite dialogue, but make sure that you have selected {}*.swf{} from the file filter at the bottom.":"{}GameMaker{}目前对矢量精灵的{}支持{}有限。并且只能从{}SWF{}格式文件导入矢量图像。将它们导入程序的方式几乎与添加普通位图图像的方式相同。若要添加矢量精灵，请创建新的精灵，这将打开标准的\"加载精灵\"对话框，但请确保已从底部的文件筛选器中选择了{}*.swf{}。",
    "Generally all sprites in GameMaker use bitmaps which -&nbsp;while flexible in terms of content -&nbsp;place limitations on both the size and number of frames possible in a sprite before memory usage can become prohibitive. Vector sprites work around these limitations by storing and drawing their contents differently:&nbsp;instead of a grid of pixels, which can become blocky or fuzzy when scaled, they are drawn as triangles using vector maths and these can be scaled up (or down) without losing definition, as illustrated in the image below:":"通常，GameMaker中的所有精灵都使用位图，这些位图虽然在内容方面很灵活，但在内存使用之前，会对精灵中可能的帧的大小和数量进行限制。矢量精灵通过以不同的方式存储和绘制它们的内容来绕过这些限制：不是像素网格(缩放时可能会变成块状或模糊)，而是使用矢量数学将它们绘制为三角形，并且可以在不丢失定义的情况下向上(或向下)缩放这些三角形，如下图所示：",
    "Hitting the \"load\" button will add the skeletal animation to the {}Asset Browser{} as a sprite, with a progress bar being shown as the file is processed. Note that, depending on the complexity of the file, this may take a moment or two. When processing has finished you\u0027ll be returned to the sprite properties dialogue, which will now look like this:":"单击\"加载\"按钮将骨骼动画作为精灵添加到{}资源浏览器{}，并在处理文件时显示进度条。请注意，根据文件的复杂性，这可能需要一两分钟的时间。处理完成后，您将返回到精灵属性对话框，现在显示如下：",
    "If you quadruple the resolution of the sprite:":"如果将精灵的分辨率提高两倍：",
    "If your vector file has particularly fine detail you may occasionally find that holes or strange triangles will appear in the resulting sprites. This is because at small scales geometry can sometimes collapse together to create shapes that just don\u0027t triangulate well. In this case you have two options - you can scale up the contents of the vector file which will give the importer more room to play with, or you can try to reduce the level of detail in the object that is breaking.":"如果矢量文件具有特别精细的细节，您可能偶尔会发现在生成的精灵中会出现孔或奇怪的三角形。这是因为在小比例尺下，几何体有时会塌陷在一起，以创建只是不能很好地三角剖分的形状。在这种情况下，您有两个选项-您可以放大矢量文件的内容，这将给导入器更多的播放空间，或者您可以尝试减少正在破坏的对象中的细节级别。",
    "Non-Bitmap Sprites":"非位图精灵",
    "Note that SVGs can be imported, but they\u0027re converted to bitmaps on import.":"请注意，可以导入 SVG，但它们在导入时会转换为位图。",
    "On the flipside of the performance equation, because vector sprites only draw the pixels absolutely required (unlike bitmap sprites which also \"draw\" the empty space around the image) they can be cheaper from a GPU perspective. Also, in general vector sprites are much smaller than their bitmap equivalents - for the fireman example above the sizes of the various sprite types are as follows:":"在性能方程的另一面，因为矢量精灵只绘制绝对需要的像素(不像位图精灵也\"绘制\"图像周围的空白)，所以从Gpu的角度来看，它们可以更便宜。此外，在一般情况下，向量精灵远小于其等效位图-对于上面的消防员示例，各种精灵类型的大小如下所示：",
    "One addition to the Sprite Editor is that you can set the {}quality {}of the vector sprite when drawn using the {}SWF Precision{}&nbsp;slider at the top. This will simply reduce or increase the number of triangles used to generate the sprite -&nbsp;with a value of about 50%&nbsp;being sufficient normally for most games -&nbsp;however you should experiment with this value if you are using extreme scaling, or are having performance issues.":"\"精灵编辑器\"(Sprite Editor)的另一个功能是，我们可以设置矢量精灵的{}质量{}通过使用顶部的{}SWF精度{}滑块绘制矢量精灵。这将简单地减少或增加用于生成精灵的三角形的数量-大多数游戏通常情况下，大约50%的值就足够了-但是，如果使用极端缩放或存在性能问题，则应使用此值进行实验。",
    "Skeletal Animation Sprites (Spine)":"骨骼动画精灵(Spine)",
    "So, as you can see, a lot of memory can potentially be saved by using vector sprites, and we still have a lot of potential for future space savings.":"因此，正如您可以看到的那样，使用矢量精灵可以潜在地节省大量内存，而且我们在未来的空间节省方面仍然有很大的潜力。",
    "The stage size also affects the size of any collision masks that are generated, therefore if you have a large stage size and a lot of frames in your animation you can potentially eat up a lot of memory. So, only use precise collision masks if you really need it.":"载物台大小还会影响生成的任何碰撞遮罩的大小，因此，如果在动画中具有较大的载物台大小和大量帧，则可能会占用大量内存。因此，只有在真正需要的时候才使用精确的碰撞面具。",
    "There are a number of things that you should be aware of when importing skeleton animation sprites, with the most important being that some of the sprite drawing and sprite management functions are not supported for technical reasons, particularly those draw functions that draw only part of a sprite, or that \"skew\" the position in some way (see the individual {}{}draw_sprite_*(){}{}&nbsp;functions for exact details of which). However the basic sprite drawing functions are fully supported as are the built in sprite variables. Apart from these functions and variables, you can also set and change animation properties using special {}skeleton_*{} functions, which are listed and explained in the reference section on {}Skeletal Animations{}.":"在导入骨骼动画精灵时，有许多事情需要注意，其中最重要的是，由于技术原因，某些精灵绘制和精灵管理功能不受支持，特别是那些仅绘制精灵部分的绘制功能，或者以某种方式\"倾斜\"位置(有关详细信息，请参见个人{}{}draw_sprite_*(){}{}功能)。但是，基本的精灵绘制功能和内置的精灵变量都是完全支持的。除了这些函数和变量之外，还可以使用{}特殊{}skeleton_*{}函数设置和更改动画属性，这些函数在{}骨骼动画{}的参考部分中列出并说明。",
    "There are a number of things that you should be aware of when importing vector sprites, with the most important being that some of the sprite drawing and sprite management functions are not supported for technical reasons, particularly those draw functions that draw only part of a sprite, or that \"skew\" the position in some way (see the individual {}{}draw_sprite_*(){}{}&nbsp;functions for exact details of which). However the basic sprite drawing functions are fully supported as are the built in sprite variables. You can also set different&nbsp;{}anti-aliasing{}&nbsp;(AA) values for the SWF sprites being drawn using the functions {}{}draw_enable_swf_aa(){}{},&nbsp;{}{}draw_get_swf_aa_level(){}{} or {}{}draw_set_swf_aa_level(){}{}.":"在导入矢量精灵时，有许多事情需要注意，最重要的是，由于技术原因，某些sprite绘制和sprite管理功能不受支持，特别是那些仅绘制精灵的一部分的绘制功能，或者以某种方式\"倾斜\"位置的绘制功能(有关详细信息，请参见个人{}{}draw_sprite_*(){}{}功能)。但是，基本的精灵绘制功能和内置的精灵变量都是完全支持的。我们可以为正在绘制的SWF精灵设置不同的{}抗锯齿{}(AA)值通过使用函数{}{}draw_enable_swf_aa(){}{},{}{}draw_get_swf_aa_level(){}{}或{}{}draw_set_swf_a_level(){}{}",
    "Unlike bitmap sprites, the imported skeletal animation sprite {}cannot be modified in the editor{} in any way, but there are a number of functions available within the GameMaker Language (GML) which can be used to change skins, set properties, and control other aspects of the animation. You also cannot set any of the texture options for the sprite (except for the texture group), as GameMaker will use the supplied texture atlas that was made by the program that generated the sprite.":"与位图精灵不同，导入的骨骼动画精灵 {} 无法在编辑器 {} 中以任何方式进行修改，但 GameMaker 语言 (GML) 中有许多可用的函数，这些函数可用于更改外观、设置属性以及控制动画的其他方面。也不能为精灵设置任何纹理选项，因为 GameMaker 将使用由生成精灵的程序生成的提供的纹理图集。",
    "Unlike bitmap sprites, the imported skeletal animation sprite {}cannot be modified in the editor{} in any way, but there are a number of functions available within the GameMaker Language (GML) which can be used to change skins, set properties, and control other aspects of the animation. You also cannot set any of the texture options for the sprite, as GameMaker will use the supplied texture atlas that was made by the program that generated the sprite.":"与位图精灵不同，导入的骨骼动画精灵{}无法在编辑器{}中以任何方式进行修改，但GameMaker语言(GML)中有许多可用的函数，这些函数可用于更改外观、设置属性以及控制动画的其他方面。也不能为精灵设置任何纹理选项，因为GameMaker将使用由生成精灵的程序生成的提供的纹理图集。",
    "Vector Sprites (SWF)":"矢量精灵(SWF)",
    "When importing a {}*.SWF{} file, Actionscript is {}not {}supported, so if your SWF relies on it to work correctly then it probably won\u0027t turn out right. Similarly, any embedded movie clips that have their own timeline will only have their first frame shown throughout the animation - all animation must be on the main timeline.":"导入{}*.SWF{}文件时，{}不{}支持Actionscript，因此如果您的SWF依赖它来正常工作，则可能无法正常工作。同样，任何具有自己的时间轴的嵌入式影片剪辑在整个动画中将只显示其第一帧-所有动画都必须位于主时间轴上。",
    "You should also be aware of the following:":"您还应注意以下事项：",
    "{}Currently {}GameMaker{} can {}only import vector images from JSON format files made by the program {}Spine{}{}, however the way to import them into the program is almost identical to that for adding a normal bitmap image. To add a skeletal animation, you need to create a new sprite, which will bring up the standard {}Load Sprite{} dialogue, only here you need to make sure that you have selected {}*.json{} from the file filter at the bottom:":"{}当前 {}GameMaker{} 只能{}从程序 {}Spine{}{} 生成的 JSON 格式文件中导入矢量图像，但是将它们导入程序的方法与添加普通位图图像的方法几乎相同。要添加骨骼动画，您需要创建新的精灵，这将打开标准的{}加载精灵{}对话框，只需在此处确保已从底部的文件筛选器中选择了 {}*.json{}：",
    "{}GameMaker{} has support for non-{}bitmap{} sprites in the form of {}vector{} {}SWF {}files or {}Spine Skeletal Animation{} files. Both these formats have their pros and cons, and the two sections below explain how to import them into the {}Sprite Editor{} as well as a bit of information about how they are drawn.":"{}GameMaker{} 支持非{}位图{}精灵，其形式为{}矢量{} {}SWF{} 文件或 {}Spine 骨骼动画{}文件。这两种格式各有利弊，下面的两节介绍了如何将它们导入到{}精灵编辑器{}中，并介绍了一些有关如何绘制它们的信息。",
    "{}GameMaker{} has support for non-{}bitmap{} sprites in the form of {}vector{} {}SWF{}&nbsp;files or {}Spine Skeletal Animation{} files. Both these formats have their pros and cons, and the two sections below explain how to import them into the {}Sprite Editor{} as well as a bit of information about how they are drawn.":"{}GameMaker{} 支持非{}位图{}精灵，其形式为{}矢量{} {}SWF{} 文件或 {}Spine 骨骼动画{}文件。这两种格式各有利弊，下面的两节介绍了如何将它们导入到{}精灵编辑器{}中，并介绍了一些有关如何绘制它们的信息。",
    "{}GameMaker{} uses the stage size of the SWF as the bounds of the resulting sprite. However, if you have anything on the stage outside these bounds it is still drawn. This means that you should either try to avoid putting anything outside your stage bounds if you don\u0027t want it to be shown, or use a mask layer to limit drawing to this area.":"{}GameMaker{}使用SWF的载物台大小作为产生的精灵的边界。但是，如果舞台上有任何超出这些界限的内容，则仍会绘制该内容。这意味着，如果不希望显示任何内容，则应尽量避免将其置于舞台边界之外，或者使用遮罩层将绘制限制在此区域。",
    "{}Hitting the \"load\" button will add the vector image or animation to the {}Asset Browser{}, with a progress bar being shown as the file is processed. Note that, depending on the complexity of the file, this can take a while (up to a minute for more complex animations). When processing has finished you\u0027ll be returned to the sprite properties dialogue, which&nbsp;will now look like this:":"{}单击\"加载\"按钮将向量图像或动画添加到{}资源浏览器{}，并在处理文件时显示进度条。请注意，根据文件的复杂程度，这可能需要一段时间(对于更复杂的动画，最多需要一分钟)。处理完成后，您将返回到精灵属性对话框，现在显示如下：",
    "{}However, nothing is ever for free when it comes to programming games, and the trade-off here with vector sprites is that they are more CPU&nbsp;expensive to draw than bitmap sprites and this speed difference increases as the complexity of the animation being imported increases. Also, their memory usage is affected by their visual complexity, unlike bitmap sprites. Bearing that in mind, they do make it possible to add large animated graphics in ways that would be impossible using traditional bitmapped sprites.":"{}但是，对于编程游戏来说，没有什么是绝对自由的，矢量精灵的权衡比位图精灵的绘制成本更高，并且随着导入的动画的复杂性增加，这种速度差异也会增加。此外，与位图精灵不同，它们的内存使用受到视觉复杂性的影响。考虑到这一点，它们确实能够以使用传统位图精灵不可能实现的方式添加大型动画图形。",
    "{}However, nothing is ever for free when it comes to programming games, and the tradeoff here with vector sprites is that they are more CPU&nbsp;expensive to draw than bitmap sprites and this speed difference increases as the complexity of the animation being imported increases. Also, their memory usage is affected by their visual complexity, unlike bitmap sprites. Baring that in mind, they do make it possible to add large animated graphics in ways that would be impossible using traditional bitmapped sprites.":"{}但是，对于编程游戏来说，没有什么是绝对自由的，矢量精灵的权衡比位图精灵的绘制成本更高，并且随着导入的动画的复杂性增加，这种速度差异也会增加。此外，与位图精灵不同，它们的内存使用受到视觉复杂性的影响。考虑到这一点，它们确实能够以使用传统位图精灵不可能实现的方式添加大型动画图形。",
    "{}NOTE{}&nbsp;Due to the complexity of skeletal animations, the preview image shown in the sprite editor is not intended to accurately represent your animation, but rather give you a simple image that represents the animation for visualising in the room editor.":"{}注意{}由于骨骼动画的复杂性，sprite编辑器中显示的预览图像不是为了准确地表示动画，而是为您提供表示动画的简单图像，以便在房间编辑器中可视化。",
    "{}NOTE{}&nbsp;How the image looks in your chosen preview editor will not be the same as how it looks in your game, nor how it looks in the preview window of the sprite editor. The vector image will be imported at the size it was created at, which is not necessarily the size that the preview is shown at (browsers will normally scale the image to fit, for example).":"{}注意{}图像在所选预览编辑器中的外观与在游戏中的外观不同，也不同于在sprite编辑器的预览窗口中的外观。矢量图像将以创建时的大小导入，该大小不一定是预览显示时的大小(例如，浏览器通常会缩放图像以适应图像大小)。",
    "{}Once you have imported the animation, you can set the collision properties, but note that you are limited here to simply using precise collisions or bounding box collisions, and that the collision data for a skeletal animation is explicitly taken from the data provided. {}GameMaker{} does not generate any collision mask if the data is missing from imported file, meaning you simply won\u0027t get working collisions if the masks are not set correctly in the program used to create the image being imported.":"{}导入动画后，可以设置碰撞属性，但请注意，此处仅限于使用精确碰撞或边界框碰撞，并且骨骼动画的碰撞数据显式取自提供的数据。{}如果导入的文件中缺少数据，GameMaker{}将不会生成任何冲突掩码，这意味着如果在用于创建正在导入的图像的程序中未正确设置掩码，则不会发生工作冲突。",
    "{}The sprite editor won\u0027t have changed much, but now the {}Edit Image{}&nbsp;button has been greyed out and can\u0027t be clicked since there aren\u0027t any bitmaps to edit in this sort of sprite. Secondly, all the texture options have been greyed out too. SWF sprites are maths-based and as such don\u0027t usually have textures associated with them, so none of the available options are applicable for this kind of sprite.":"{}Sprite编辑器不会有太大更改，但现在{}\"编辑图像\"{}按钮已灰显，无法单击，因为在此类精灵中没有任何位图可供编辑。其次，所有纹理选项也已灰显。SWF精灵是基于数学的，因此通常没有与其关联的纹理，因此没有任何可用选项适用于此类精灵。",
    "{}The sprite editor won\u0027t have changed much, but now the {}Edit Image{}&nbsp;button has been greyed out and can\u0027t be clicked since there aren\u0027t any bitmaps to edit in this sort of sprite. Secondly, all the texture options have been greyed out, except for the texture group.":"{}精灵编辑器不会有太多更改，但现在{}编辑图像{} ；按钮已灰显，无法单击，因为在这种精灵中没有任何位图可供编辑。其次，除纹理组外，所有纹理选项都已灰显。",
    "{}To help you visualise how this is done, the image below is of the same vector Fireman sprite only now we can see the polygons that are used to make the image within {}GameMaker{}:":"{}为了帮助您直观了解如何完成此操作，下面的图像只是同一矢量的Fireman 精灵，现在我们可以在{}GameMaker{}中查看用于制作图像的多边形：",
    "在导入骨骼动画精灵时，有许多事情需要注意，其中最重要的是，由于技术原因，某些精灵绘制和精灵管理功能不受支持，特别是那些仅绘制精灵部分的绘制功能，或者以某种方式\"倾斜\"位置(有关详细信息，请参见个人{}{}draw_sprite_*(){}{}功能)。但是，基本的精灵绘制功能和内置的精灵变量都是完全支持的。除了这些函数和变量之外，还可以使用{}特殊{}skeleton_*{}函数设置和更改动画属性，这些函数在{}骨骼动画{}的参考部分中列出并说明。":"在导入骨骼动画精灵时，有许多事情需要注意，其中最重要的是，由于技术原因，某些精灵绘制和精灵管理功能不受支持，特别是那些仅绘制精灵部分的绘制功能，或者以某种方式\"倾斜\"位置(有关详细信息，请参见个人{}{}draw_sprite_*(){}{}功能)。但是，基本的精灵绘制功能和内置的精灵变量都是完全支持的。除了这些函数和变量之外，还可以使用特殊{}skeleton_*{}函数设置和更改动画属性，这些函数在{}骨骼动画{}的参考部分中列出并说明。",
    "在性能方程的另一面，因为矢量精灵只绘制绝对需要的像素(不像位图精灵也\"绘制\"图像周围的空白)，所以从Gpu的角度来看，它们可以更便宜。此外，在一般情况下，向量精灵远小于其等效位图-对于上面的消防员示例，各种精灵类型的大小如下所示：":"在性能方程的另一面，因为矢量精灵只绘制绝对需要的像素(不像位图精灵也\"绘制\"图像周围的空白)，所以从GPU的角度来看，它们可以更省性能。此外，在一般情况下，矢量精灵远小于其等效位图-对于上面的消防员示例，各种精灵类型的大小如下所示："
}