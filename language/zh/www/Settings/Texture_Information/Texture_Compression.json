{
    "A comparison of different texture group formats.{} From left to right: BZ2 + QOI (no GPU texture compression), BC7 and BC3.":"不同纹理组格式的比较。{}从左到右：BZ2 + QOI (无 GPU 纹理压缩)、BC7 和 BC3。",
    "A game\u0027s textures can take up a large part of memory, in RAM as well as in VRAM.{}&nbsp;For example, a texture image of 2048 x 2048 pixels that contains all four channels (R, G, B and A) takes up (2048 x 2048) pixels x 4 channels/pixel x 1 bytes/channel =&nbsp;16777216 bytes, or 16MB of video memory.&nbsp;{}All this data needs to be loaded into RAM and then sent to VRAM.":"游戏的纹理可能会占用很大一部分内存，在内存和显存中也是如此。{}例如，一个 2048x2048 像素的纹理图像包含所有四个通道 (R,G,B 和 A)，占用 (2048x2048) 像素 x4 通道 / 像素 x1 字节 / 通道 = 16777216 字节或 16MB 的显存。{}所有这些数据都需要加载到内存中，然后发送到内存中。",
    "After adding the extension, to enable GPU compressed textures for a texture group:&nbsp;":"添加扩展后，要为纹理组启用GPU压缩纹理：",
    "Custom GPU texture compression is done using an extension:&nbsp;{}GM-GPUTextureCompression{}. To generate GPU textures, you should first add this extension to your project.":"自定义GPU纹理压缩使用扩展：{}GM-GPUTextureCompression{}。要生成 GPU 纹理，应首先将此扩展添加到项目中。",
    "Enter the tool to use, along with the settings under&nbsp;{}Custom Options{}. For example, to generate medium quality BC7 compressed textures, set this to&nbsp;{}BCN -u2{}.":"输入要使用的工具以及{}自定义选项{}下的设置。例如，若要生成中等质量的 BC7 压缩纹理，请将其设置为 {}BCN -u2{}。",
    "For full information on the available texture formats that are supported, see the {}wiki{}.":"有关支持的可用纹理格式的完整信息，请参阅 {}wiki{}。",
    "GPU Compressed Textures":"GPU 压缩纹理",
    "GPU compressed textures are compressed using {}block compression{}. This is the most common form of GPU compression and is supported in some format on almost all modern platforms. When the GPU texture is generated from the original image using e.g. BCN compression, it is subdivided into fixed-size blocks of 4x4 pixels or texels (other compression algorithms support different block sizes). The information in the pixels in this block is converted to a 128 bit value. When the GPU reads back this value, it restores the colour value of the requested pixel from it as precisely as possible. See&nbsp;{}S3_Texture_Compression{}&nbsp;for more information.":"GPU 压缩纹理使用{}块压缩{}进行压缩。这是 GPU 压缩的最常见形式，几乎所有现代平台都支持某种格式。当 GPU 纹理使用例如 BCN 压缩从原始图像生成时，它被细分为固定大小的 4x4 像素或纹理块 (其他压缩算法支持不同的块大小 ). 这个块中像素的信息被转换成一个 128 位的值.当 GPU 读回这个值时，它会尽可能精确地从请求的像素中恢复颜色值。有关详细信息，请参阅 {}S3_Texture_Compression{}。",
    "Set the&nbsp;{}Texture Group Format{}&nbsp;to {}Custom{}.":"将{}纹理组格式{}设置为{}自定义{}。",
    "Texture compression is image compression applied to textures specifically.":"纹理压缩是专门应用于纹理的图像压缩。",
    "The following image shows a comparison of different texture formats:&nbsp;":"下图显示了不同纹理格式的比较：&nbsp;",
    "The textures are stored in a compressed format in VRAM and are decompressed in real time by the GPU.":"纹理以压缩格式存储在 VRAM 中，并由 GPU 实时解压缩。",
    "When the game is compiled, the textures are generated by the external tool, which is executed through the extension. The tool compresses the textures to a format optimised for decompressing on the GPU.":"当游戏被编译时，纹理由外部工具生成，该工具通过扩展执行。该工具将纹理压缩为优化的格式，以便在 GPU 上解压缩。",
    "{}BZ + {}{}QOI{},&nbsp;{}QOI{}, {}PNG{} - The asset compiler compresses all textures in the texture group to the given format and stores them with the game. When they are loaded from disk into RAM, they remain compressed while in RAM. When a texture from this texture group format is then fetched into VRAM, it is decompressed on the CPU and this decompressed data stored in VRAM.":"{}BZ + {}{}QOI{}, {}QOI{}, {}PNG{} - 资源编译器将纹理组中的所有纹理压缩为给定格式，并将它们与游戏一起存储。当它们从磁盘加载到 RAM 中时，它们在 RAM 中保持压缩状态。然后，当来自该纹理组格式的纹理被提取到 VRAM 中时，它在 CPU 上被解压缩，并且解压缩的数据存储在 VRAM 中。",
    "{}Custom{} - GPU texture compression. The textures are generated at compile time using an external tool that compresses the textures to a format optimised for decompressing on the GPU and are then stored with the game. When a texture of this format is loaded into RAM, it remains compressed there. When it\u0027s fetched into VRAM, the texture data still remains compressed. The texture is decompressed by the GPU in real time when it performs&nbsp;texel&nbsp;lookups on the texture.":"{}自定义{} - GPU纹理压缩。纹理是在编译时使用外部工具生成的，该工具将纹理压缩为优化的格式，以便在 GPU 上解压缩，然后与游戏一起存储。当此格式的纹理加载到 RAM 中时，它将保持压缩状态。当它被提取到 VRAM 中时，纹理数据仍然保持压缩状态。当 GPU 对纹理执行纹理查找时，它会实时解压缩纹理。",
    "{}GameMaker{}&nbsp;has two ways to allow for texture compression and decompression. Texture compression is set per {}texture group{} and works differently according to the format used:&nbsp;":"{}GameMaker{}&nbsp;有两种方式支持纹理压缩和解压缩。纹理压缩按{}纹理组{}设置，并根据使用的格式而不同：&nbsp;",
    "{}Texture Compression{}":"{}纹理压缩{}",
    "{}{}Textures can be compressed to reduce their size, which minimises the amount of data that needs to be moved from RAM memory to VRAM when textures are prefetched (as the available \"bandwidth\" is limited). Additionally, if your game does many texture lookups and t{}he platform it\u0027s running on does not have sufficient graphics memory bandwidth to handle the texture reading at a high frame rate, the game may slow down.{}":"{}{}可以压缩纹理以减小其大小，从而最大限度地减少在预取纹理时需要从 RAM 内存移动到 VRAM 的数据量(因为可用带宽有限)。此外，如果您的游戏执行多次纹理查找，并且运行该游戏的平台没有足够的图形内存带宽来处理高帧速率的纹理读取，则游戏可能会变慢。{}{}",
    "{}{}WARNING{}{}&nbsp;Certain texture formats are only supported on certain platforms. You should make sure to select an appropriate one for the platform that you\u0027re compiling to. An error message is shown in {}The Output Window{}&nbsp;if the extension isn\u0027t present or any of the settings is incorrect.":"{}{}警告{}{} 某些纹理格式仅在某些平台上受支持。您应确保为要编译的平台选择适当的纹理格式。如果扩展不存在或任何设置不正确，则{}输出窗口{}中会显示错误消息。"
}