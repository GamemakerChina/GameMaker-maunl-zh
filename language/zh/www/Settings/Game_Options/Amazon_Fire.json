{
    "Amazon Fire&nbsp;Game Options (Legacy)":"Amazon Fire 游戏选项(已过时)",
    "Finally there is the option to set the size of the {}texture page{}. The default (and most compatible) size is 2048x2048, but you can choose from anywhere between 256x256 up to 8192x8192.&nbsp;There is also a button marked {}{}Preview&nbsp;{}{}which will generate the texture pages for this platform and then open a window so that you can see how they look. This can be very useful if you wish to see how the texture pages are structured and to prevent having texture pages larger (or smaller) than necessary. For more information on texture pages, please see {}here{}.":"最后，还有设置{}纹理页大小的选项{}。默认(也是最兼容的)大小是2048x2048，但是您可以从256x256到8192x8192之间的任何位置进行选择。还有一个标记为{}{}预览{}{}的按钮，它将为此平台生成纹理页，然后打开一个窗口，以便您可以看到它们的外观。如果您希望了解纹理页面的结构，并防止纹理页面过大(或过小) ，那么这将非常有用。有关纹理页的详细信息，请参阅{}此处{}。",
    "Finally you can set the {}Banner Image{}, which is also a 24bit&nbsp;{}*.png{}.":"最后，您可以设置{}横幅图像{} ，它也是一个24位{} *.png {}。",
    "Finally you have the following miscellaneous options:":"最后，你有以下各种选择:",
    "General":"常规",
    "Graphics":"图形",
    "Icons":"图标",
    "Images":"图像",
    "It is worth noting that for target API 28 and above, you will no longer be permitted to use any external web calls using \"{}http{}\" - \"{}https{}\" is required instead -&nbsp;unless you add the following tag:":"值得注意的是，对于目标 API 28及以上，您将不再被允许使用任何使用“{}http{}”-“{}https{}”的外部 Web 调用-除非您添加以下标记:",
    "It is worth noting that {}GameMaker{} has a {}Project Image Generator{} tool which can be used to automatically create all the images required for all the different target platforms your game is being compiled to. If you use this tool, you should revise the images created to ensure that they are what you require. The tool will generate Icons as well as Images (see the section below).":"值得注意的是，{} GameMaker {}有一个{}项目图像生成器{}工具，可用于自动创建所有不同目标平台所需的图像。如果您使用这个工具，您应该修改所创建的图像，以确保它们是您所需要的。该工具将生成图标以及图像(见下一节)。",
    "Landscape":"横向",
    "Landscape-flipped":"横向翻转",
    "Permissions":"权限",
    "Portrait":"竖向",
    "Portrait-flipped":"竖向翻转",
    "The Amazon Fire Permissions secton also has an area where you can inject permissions into the {}Android Application Tags{} in the {}Androidmanifest.xml{}. You can find a full list of available tags from the Android documentation here:":"Amazon Fire Permission 部分还有一个区域，您可以将权限注入到{} AndroidManif.xml {}中的{} Android Application Tags {}中。你可以在这里找到 Android 文档中可用标签的完整列表:",
    "The Build Tools (and Support Library if required) are used when {}GameMaker{} builds your game for the Android/Amazon Fire&nbsp;target and should be set to appropriate values based on the tools you have installed using Android Studio.":"当{} GameMaker {}为 Android/Amazon Fire 目标构建您的游戏时，使用构建工具(如果需要，还有支持库) ，并且应该根据您使用 Android Studio 安装的工具将其设置为适当的值。",
    "The list below outlines those permissions that are available:":"下面的列表概述了可用的权限:",
    "The {}Compile SDK{} version is the version of the API that the project is compiled against. This means you can use Android API features included in that version of the API. If you try and use API 16 features - for example - but set Compile SDK 15, then you will get a compilation error. However, if you set the Compile SDK to 28 then you can still run the app on an API 26 device (as well as all other previous versions too).":"{}编译SDK {}版本是项目所编译的 API 的版本。这意味着您可以使用该版本 API 中包含的 Android API 特性。如果您尝试使用 API 16特性-例如-但是设置 编译SDK15，那么您将得到一个编译错误。但是，如果您将 编译SDK 设置为28，那么您仍然可以在 API 26设备上运行该应用程序(以及所有其他以前的版本)。",
    "The {}Minimum SDK{} version is the minimum API level that will run your project. From November 2019 Google has made API level 16 the absolute minimum required, but if you add extensions then they may require a higher minimum API level.":"{}最小 SDK {}版本是将运行项目的最小 API 级别。从2019年11月开始，谷歌已经将 API 级别定为16级，但是如果你添加了扩展，那么他们可能需要更高的最低 API 级别。",
    "The {}Target SDK{} indicates that you have tested your app on (up to and including) the version you specify here. This is simply to give the Android OS an idea of how it should handle your app in terms of OS features. For all practical purposes, most apps are going to want to set Target SDK to the latest released version of the API (as used by the Compile SDK setting). This will ensure your app looks as good as possible on the most recent Android devices. Note that from November 2019 Google has made API level 28 the required target.":"{}目标 SDK {}表示您已经在(直到并包括)您在这里指定的版本上测试了您的应用程序。这只是为了让 Android 操作系统知道它应该如何根据操作系统的特性来处理你的应用程序。出于各种实际目的，大多数应用程序都希望将 Target SDK 设置为 API 的最新发布版本(如 CompileSDK 设置所使用的那样)。这将确保您的应用程序在最新的 Android 设备上看起来尽可能好。请注意，从2019年11月开始，谷歌已经将 API 级别28作为必要的目标。",
    "This section outlines the different options available to you that control how your Amazon Fire game projects will be compiled. The different sections are:":"本节概述了可用于控制如何编译 Amazon Fire 游戏项目的不同选项。不同的章节是:",
    "You can also set the Amazon Fire {}Sleep Margin{} here. This option is related to reducing stuttering when running your game on specific systems. Basically, if your game is running faster than your room speed {}GameMaker{} will \"sleep\" for the remaining time, but this sleep can be quite inaccurate and you can often end of sleeping for longer than necessary, causing your frame to take longer which causes stuttering. To get around this we can sleep for less time, then sit in a tight loop for the remainder of the time to make it more accurate - although the problem with sitting in a loop is that it causes CPU usage to increase, which in turn can cause your CPU temperatures to rise and your device to use more battery. By default, this value is set to 4, and in 99.99% of the cases you\u0027ll be fine with this, but for low end devices or for devices with a lot of background processes running this may not be an ideal solution and a value of 5 up to 10 may be required. Note though that this is very much a device specific configuration and what works on your build device may not be appropriate for another user, and as such if in doubt leave it set to 4.":"你也可以在这里设置Amazon Fire{}睡眠边缘{}。这个选项与在特定系统上运行游戏时减少卡顿有关。基本上，如果你的游戏运行速度比你的房间速度快{}Gamemaker{}将“睡眠”剩余的时间，但这种睡眠可能是相当不准确的，你可以经常结束睡眠超过必要的时间，造成你的框架需要更长的时间，导致卡顿。为了解决这个问题，我们可以缩短睡眠时间，然后在剩下的时间里保持一个紧密的循环，以使它更加精确——尽管坐在循环中的问题是，它会导致 CPU 使用量增加，这反过来又会导致你的 CPU 温度上升，你的设备使用更多的电池。默认情况下，这个值被设置为4，在99.99% 的情况下你可以接受这个值，但是对于低端设备或者运行大量后台进程的设备来说，这可能不是一个理想的解决方案，可能需要设置5到10的值。但是请注意，这是一个非常特定于设备的配置，在构建设备上运行的配置可能不适合其他用户，因此，如果有疑问，请将其设置为4。",
    "You can select from one of the predefined target settings by clicking on the {}Pre-populate SDK{} values to chosen API level button, which will open a list of different APIs to choose from. Selecting any one of them will populate all the SDK files with appropriate values which you can then use or edit as required.":"您可以从一个预定义的目标设置中进行选择，方法是单击{}预填充 SDK {}值到选定的 API 级别按钮，该按钮将打开一个可供选择的不同 API 列表。选择其中任何一个都将使用适当的值填充所有 SDK 文件，然后您可以根据需要使用或编辑这些值。",
    "You then need to set the {}Build Tools{} as well as the {}Target{}, {}Minimum {}and {}Compile SDK{} versions.":"然后需要设置{}生成工具{}以及{}目标{}、{}最小{}和{}编译 SDK {}版本。",
    "{}ACCESS_NETWORK_STATE{}: Permit your game to access information about networks.":"{}ACCESS_NETWORK_STATE{} : 允许游戏访问有关网络的信息。",
    "{}BLUETOOTH{}: Will permit your game to connect to paired Bluetooth devices.":"{}BLUETOOTH{} : 将允许游戏连接到配对的蓝牙设备。",
    "{}Crop To Fit{}: This will keep the image 1:1 with the device screen and crop (or pad) the edges as required.":"{}裁剪适合{} : 这将使图像与设备屏幕保持1:1，并根据需要裁剪(或填充)边缘。",
    "{}Enable Bluetooth/iCade support{}: This will add support for bluetooth or iCade gamepads to your game project. This is on by default.":"{}启用蓝牙/iCade 支持{} : 这将为您的游戏项目添加对蓝牙或 iCade 游戏平台的支持。这是默认开启的。",
    "{}From this tab you can change some of the permissions that your game may request within the Amazon Fire Manifest. {}GameMaker{} will allocate permissions automatically as required based on the functions the game uses, however you may find you require a permission for your game that hasn\u0027t been correctly assigned (for example, when you use custom extensions) in which case tick the requisite permission box.":"{}在此选项卡中，您可以更改游戏在Amazon Fire Manifest中可能请求的一些权限。{} GameMaker {}会根据游戏使用的功能自动分配权限，但是你可能会发现你的游戏需要一个未正确分配的权限(例如，当你使用自定义扩展时) ，在这种情况下，勾选必要的权限框。",
    "{}Here you can change the following details related to how your game will be displayed, with the following options are available:":"{}这里您可以更改下列与游戏显示方式相关的详细信息，并提供以下选项:",
    "{}Here you can set the&nbsp;{}Border Colour{}&nbsp;that will be used as the background for splash screens that are not set to fill the full screen. You can also add {}Splash Screens{} to your final game file, for both {}landscape {}and {}portrait {}modes, which will be shown while the game loads on the device. This screen should be a 24bit {}*.png{}&nbsp;file, and is recommended to be the same size as the first room (or view) of your game. If you require that the splash screen be shown for a specific time then you can also set it here from 0 to 10 seconds (the default time of 0 means that it will only show for the duration of the asset loading). You can also set how the splash screen should be displayed from the following options:":"{}这里您可以设置{}边框颜色{} ，它将用作未设置为填充全屏的启动画面的背景。您还可以为最终的游戏文件添加{}闪屏{}和{}纵向{}模式的{}启动画面{} ，这将在游戏装载到设备上时显示。此屏幕应为24位{} *.png {}文件，建议大小与游戏的第一个房间(或视图)相同。如果您需要显示启动画面的特定时间，那么您也可以在这里将其从0设置为10秒(默认时间为0意味着它只会在资源加载期间显示)。您还可以通过以下选项设置启动画面的显示方式:",
    "{}INTERNET{}: Permit your game to open network sockets.":"{}INTERNET{}: 允许您的游戏打开网络套接字",
    "{}Install Location{}: Here you can set the default Install Location for your game. This can either be set to {}Automatic{}, in which case the game will be installed to the location chosen by the user on their device, or it can be set to {}Prefer External{} which will always try to install the game to the external storage of the device.":"{}安装位置{} : 您可以在这里设置游戏的默认安装位置。这可以设置为{}自动{} ，在这种情况下，游戏将被安装到用户在他们的设备上选择的位置，或者可以设置为{}首选外部{} ，它将总是尝试安装游戏到设备的外部存储。",
    "{}Interpolate colours between pixels{}: Turns on {}linear interpolation{}, which basically \"smooths\" pixels. For crisp pixel graphics, it should be off, but if you have nice alpha blends and smoothed edged graphics it is better left on. This is on&nbsp;by default.":"{}在像素之间插入颜色{} : 打开{}线性插值{} ，基本上是“平滑”像素。对于清晰的像素图形，它应该关闭，但如果你有很好的阿尔法混合和平滑的边缘图形，它是更好地留在。这是默认开启的。",
    "{}Keep Aspect Ratio{}: This will maintain the aspect ratio of the image compared to the device screen, adding \"padding\" around the edges where required.":"{}保持长宽比{} : 这将保持图像与设备屏幕的长宽比，在需要的地方在边缘添加“填充”。",
    "{}NOTE{}: Be aware that the larger the size of the texture page, the less compatible your game will be with different browsers and devices.":"{}注意{}: 纹理页面的大小越大，游戏对不同浏览器和设备的兼容性就越差。",
    "{}NOTE{}: If you are not sure that you need these, you should probably just leave them un-checked by default and let {}GameMaker{} deal with the permissions for your game.":"{}注意{} : 如果您不确定是否需要这些权限，那么您可能只需要在默认情况下保留这些权限，并让{} GameMaker {}处理您的游戏的权限。",
    "{}NOTE{}: If you have already set up the {}Android{}&nbsp;target Game Options, you can click the \"{}Sync from Android{}\" button at the top to transfer the relevant information from the Android target to the Amazon Fire.":"{}注意{}: 如果你已经设置了 {}Android{} 目标游戏选项，你可以点击顶部的“{}同步 Android{}”按钮将相关信息从 Android 目标传输到 Amazon Fire。",
    "{}NOTE{}: There is also an option for the \"{}Support Library{}\" version to use. From {}GameMaker{} v2.2.4 and above, this is no longer required and any values used here will be ignored. The setting is maintained for use with legacy projects that require an earlier runtime than 2.2.4.":"{}注意{} : 还有一个供“{}支持库{}”版本使用的选项。从{} GameMaker {} v2.2.4及以上版本开始，就不再需要这个值了，这里使用的任何值都将被忽略。该设置用于需要比2.2.4更早的运行时的遗留项目。",
    "{}NOTE{}: You must have installed the appropriate APIs in the Android SDK Manager or through Android Studio for your projects to compile correctly.":"{}注意{} : 要正确编译项目，您必须已经在 Android SDK 管理器或通过 Android Studio 安装了适当的 API。",
    "{}READ_PHONE_STATE{}: Allow read only access to the phone state.":"{}READ_PHONE_STATE{} : 允许只读访问电话状态。",
    "{}RECORD_AUDIO{}: Will permit your game to record audio input from the microphone.":"{}RECORD_AUDIO{}: 将允许您的游戏记录来自麦克风的音频输入。",
    "{}Run Lint Code Analysis{}: When this option is flagged, the build tools will run a lint code analysis on the project as it builds, giving a more in-depth error check and showing more information in the output window as the project compiles (a LOG file will be created too, with the path to the file shown at the end of compiling in the {}Output Window{}). Note that not everything flagged by lint analysis as an error is necessarily problematic for your game, and having this enabled may mean that your game no longer compiles, even though when it is off, it will compile and run fine. Essentially this is only for debugging, and the option is off by default.":"{}运行 Lint 代码分析{} : 当这个选项被标记时，构建工具将在项目构建时运行一个 Lint 代码分析，进行更深入的错误检查，并在项目编译时在输出窗口中显示更多信息(也将创建一个 LOG 文件，在{} Output Window {}中编译结束时显示文件的路径)。请注意，并不是所有被 lint 分析标记为错误的东西对于您的游戏都必然是有问题的，启用这个功能可能意味着您的游戏不再编译，即使当它关闭时，它也会编译并运行良好。本质上，这仅用于调试，默认情况下该选项是关闭的。",
    "{}Scaling{}: Here you can select to scale the draw canvas maintaining the aspect ratio within the device screen - adding \"padding\" around the edges to fit the screen - or you can select to have the draw canvas stretched to fit the device screen.":"{}缩放{} : 在这里你可以选择缩放画布来保持设备屏幕的高宽比——在边缘添加“填充”来适应屏幕——或者你可以选择拉伸画布来适应设备屏幕。",
    "{}Screen Colour Depth{}: This can be used to set the colour depth for rendering to either 16bit or 24bit. This will affect the compatibility with some older devices if it is set to 24bit, and will also increase the {}ashmem {}that is needed (this is the shared memory on AmazonFire devices).":"{}屏幕颜色深度{} : 这可以用来将渲染的颜色深度设置为16位或24位。如果设置为24位，这将影响与一些旧设备的兼容性，并且还会增加所需的{} ashmem {}(这是 AmazonFire 设备上的共享内存)。",
    "{}Stretch{}: This will stretch the image to fill the device screen (and may distort the image shown).":"{}拉伸{} : 这将拉伸图像以填充设备屏幕(并可能使显示的图像失真)。",
    "{}The first part of the {}General {}section is dedicated to the {}Product Information{} and the {}Build Settings{}. You should fill in the Product information, which includes the projects {}Display Name{}, its Package information, which consists of a {}Domain{}, {}Company {}and {}Product{}. The package information can only be made up of letters from A-Z and numbers 0-9, with no symbols or other special characters at all, nor should it have uppercase characters. These details will then be used to generate a Package ID with the format \"{}com.company.myappname{}\".":"{}{}常规{}部分的第一部分专用于{}产品信息{}和{}生成设置{}。您应该填写 Product 信息(包括项目{}显示名称{})及其包信息(包括{}域名{}、{}公司{}和{}产品名{})。包信息只能由 A-Z 字母和数字0-9组成，不能有任何符号或其他特殊字符，也不能有大写字母。然后，这些详细信息将用于生成格式为“{} com.company.myappname {}”的 Package ID。",
    "{}The second part of the General section covers the different {}Orientations {}that your game can be run on for the best user experience. The available options are:":"{}常规部分的第二部分介绍了为获得最佳用户体验而可以运行游戏的不同{}方向{}。现有的选择包括:",
    "{}This section permits you to add the various {}Icon{} images that your project will need for the different store pages and devices. All icon images should be created as 24bit {}*.png{} files of the appropriate sizes given.":"{}此部分允许您添加项目需要用于不同存储页和设备的各种{}图标{}图像。所有图标图像应该创建为24位指定大小的 {}*.png{}文件。",
    "{}WRITE_EXTERNAL_STORAGE{}: Will permit your game to write to external storage.":"{}WRITE_EXTERNAL_STORAGE{} : 将允许游戏写入外部存储。",
    "{}{}IMPORTANT{}{}&nbsp;Amazon Fire options are only visible for old projects, and are read-only. Amazon Fire and all other Android targets are now configured in the {}Android Game Options{}.":"{}{}重要{}{} Amazon Fire 选项只对老项目可见，并且是只读的。Amazon Fire和所有其他 Android 目标现在配置在{}Android 游戏选项{}。"
}