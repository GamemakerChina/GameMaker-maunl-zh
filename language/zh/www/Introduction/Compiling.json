{
    "Before doing a final build of your project for release, you should {}always clear the Asset Compiler {}Cache{}{} (using the \"broom\" icon {}&nbsp;at the top of the IDE). {}GameMaker{} will cache many of your game files to keep compilation speed to a minimum and these can sometimes get corrupted, so it is safer to clear that cache before doing a release build.":"在为要发布的项目进行最终构建之前，您应该{}始终清除资源编译器{}缓存{}{}(使用 IDE 顶部的\"扫帚\"图标{} )。{}GameMaker{} 将缓存许多游戏文件以将编译速度保持在最低水平，这些文件有时会被损坏，因此在进行发布版本之前清除缓存会更安全。",
    "Before doing a final build of your project for release, you should {}always clear the Asset Compiler {}cache{}{} (using the \"broom\" icon {}&nbsp;at the top of the IDE). {}GameMaker{} will cache many of your game files to keep compilation speed to a minimum and these can sometimes get corrupted, so it is safer to clear that cache before doing a release build.":"在完成项目的最终版本发布之前，您应该{}总是清除资源编译器 {}缓存{}{} (使用 IDE 顶部的“扫帚”图标{})。{} GameMaker {}会缓存很多游戏文件，以将编译速度保持在最低限度，这些文件有时会被破坏，所以在进行发布版本构建之前清除缓存更安全。",
    "By default {}GameMaker{} will run and debug using the built in {}Virtual Machine (VM){}, which is more or less the same as running on the desktop OS being used. However {}GameMaker{} is a {}cross platform engine{} and you can test, debug and compile executable packages of your projects on a number of different target platforms (the exact platforms available will depend on the details of your licence). To change the current target platform you can click {} on the Targets button {}&nbsp;to open the {}Targets Window{}, which will look something like this (exact details will vary based on your licence type):":"默认情况下{}GameMaker{}将使用内置的{}虚拟机(VM){}运行和调试，这与正在使用的桌面操作系统上运行的情况大致相同。但是{}GameMaker{}是一个{}跨平台引擎{}，您可以在许多不同的目标平台上测试，调试和编译项目的可执行包(可用的确切平台将取决于您的许可证的详细信息)。要更改当前目标平台，您可以单击目标按钮{}上的{}以打开{}目标窗口{}, 该窗口看起来像这样(确切的详细信息将根据您的许可证类型而有所不同):",
    "By default {}GameMaker{} will run and debug using the built-in {}Virtual Machine (VM){}, which is more or less the same as running on the desktop OS being used. However,&nbsp;{}GameMaker{} is a {}cross-platform engine{} and you can test, debug and compile executable packages of your projects on a number of different target platforms (the exact platforms available will depend on the details of your licence). To change the current target platform you can click {} on the Targets button {}&nbsp;to open the {}Targets Window{}, which will look something like this (exact details will vary based on your licence type):":"默认情况下，{}GameMaker{} 将使用内置的 {} 虚拟机 (VM){} 运行和调试，这或多或少与正在使用的桌面操作系统上运行相同。但是，{}GameMaker{} 是一个 {} 跨平台引擎 {}，您可以测试，在许多不同的目标平台上调试和编译项目的可执行程序包 (具体可用的平台将取决于您的许可证的详细信息)。要更改当前 {} 目标平台 {}，您可以单击 {8} 目标按钮 {9} 打开目标窗口，它看起来像这样 (具体细节将根据您的许可证类型而有所不同)：",
    "Certain platforms (like iOS or Android) permit you to associate one or more devices with {}GameMaker{} so that games can selectively compile to them. Initially, the device list will be empty and you need to click {} on the Pencil icon {}&nbsp; to open the {}Device Editor{}:":"某些平台(例如 iOS 或 Android)允许您将一台或多台设备与{}GameMaker{}关联，以便游戏可以有选择地根据这些设备进行编译。最初，设备列表将为空，您需要单击{}铅笔图标{}才能打开{}设备编辑器{}：",
    "Compiler Optimisations":"更好的优化",
    "Compiling Preferences":"编译首选项",
    "Compiling for Testing":"为测试而编译",
    "Compiling your game for testing can be done by simply pressing the Play button&nbsp;{} at the top of the IDE, which will launch the game for testing using the specified target. You can also run the game in {}Debug Mode{} by testing using the Debug button {}. This will run the game, but also open up the {}Debug Window{}, where you can monitor how your game performs and see any issues (see the section on {}Debugging{} for more information).":"编译你的游戏进行测试，只需按下IDE顶部的Play按钮&nbsp;{}，就可以使用指定的目标启动游戏进行测试。 你也可以通过使用调试按钮{}测试{}，在调试模式{}下运行游戏。 这将运行游戏，但也会打开{}调试窗口{}，在那里你可以监控你的游戏表现，并看到任何问题（更多信息见{}调试{}部分）。",
    "Compiling your game for testing can be done by simply pressing the Play button&nbsp;{} at the top of the IDE, which will launch the game for testing using the specified target. You can also run the game in {}Debug Mode{} by testing using the Debug button {}. This will run the game, but also open up the {}Debug Window{}, where you can monitor how your game performs and see any issues (see the section on&nbsp;{}Debugging{} for more information).":"只需按 IDE 顶部的 \" 播放 \" 按钮 {} 即可编译游戏进行测试，这将使用指定的目标启动游戏进行测试。您还可以通过使用 \" 调试 \" 按钮 {3} 进行测试，在 {}\" 调试模式 \"{} 下运行游戏。这将启动游戏，但也会打开 {}\" 调试窗口 \"{}，您可以在其中监视游戏的性能并查看任何问题 (有关详细信息，请参阅 {} 调试 {} 部分)。",
    "Creating A Final Executable Package":"创建最终的可执行文件包",
    "Debugging":"调试",
    "Depending on your {}licence{}, you may have the option to build your game via command line,&nbsp;allowing you to set up continuous integration for your project and streamline your building and testing process. See&nbsp;{}Building via Command Line{} for more information on command line building.":"根据您的{}许可证{}，您可以选择通过命令行构建游戏，从而允许您为项目设置持续集成并简化构建和测试过程。有关命令行构建的更多信息，请参见{}通过命令行构建{}。",
    "Distributing your Game":"分发您的游戏",
    "Each target option saves to a platform specific format, listed below:":"每个目标选项保存为平台特定格式，如下所示：",
    "Each target platform can have one or more output formats, the main ones being:":"每个目标平台可以有一种或多种输出格式，主要有：",
    "For certain platforms, compiling your game project&nbsp;will require that you have set up the correct {} {}build tools{}{} (see {}Required SDKs{})&nbsp;and also filled in the appropriate {}Platform Preferences{}.":"对于某些平台，编译您的游戏项目将要求您设置了正确的{}{}构建工具{}{}(请参阅{}所需的SDKs{})，并且还填写了适当的{}平台首选项{}。",
    "Here are some things to keep in mind when creating executables:":"以下是创建可执行文件时需要牢记的事项：",
    "How Different Targets Build":"如何构建不同的目标",
    "If you select \"No\" here then the target will be reset to the previous target you had selected.":"如果您在此处选择 \"否\"，则目标将重置为之前选择的目标。",
    "If you select \"Yes\" then the modules for the target will be downloaded and installed.":"如果选择 \"是\"，则将下载并安装目标模块。",
    "If you select \"{}No{}\" here then the target will be reset to the previous target you had selected.":"如果您在此处选择\"{}否{}\"，则目标将重置为您以前选择的目标。",
    "If you select \"{}Yes{}\" then the modules for the target will be downloaded and installed.":"如果您在此处选择\"{}是{}\"，则将下载并安装目标的模块。",
    "Introduction To {}GameMaker{}":"{}GameMaker 简介{}",
    "Note that you are free to distribute the games you create with {}GameMaker{} in any way you like, including selling them. Of course, this assumes that the sprites, images, and sounds you used to make it can be distributed or sold as well and that you have the legal rights to all assets, and it also assumes that the game complies with the {}YoYo Games EULA for {}GameMaker{}{}.":"请注意，您可以以任何您喜欢的方式，包括销售{}GameMaker{}免费分发您创建的游戏。当然，这假定您用来制作游戏的精灵、图像和声音也可以分发或出售，并且您对所有资源拥有合法权利，并且还假定游戏符合{}YoYo Games EULA for{}GameMaker{}{}。",
    "On the GX.games target, it will open a special window allowing you to compile and upload your game to GX.games; on all other targets&nbsp;it will open a file explorer window where you can give the final name that you wish to use for your game executable, before clicking {}Save {}to start the compile and build process. Once you have done this, the necessary files will be generated so that you can distribute it as you wish.":"在GX.games目标上，它将打开一个特殊的窗口，允许您将游戏编译并上传到GX.games; 在所有其他目标上，它将打开一个文件资源管理器窗口，您可以在其中给出您希望用于游戏可执行文件的最终名称，在单击{}保存{}开始编译和构建过程之前。完成此操作后，将生成必要的文件，以便您可以根据需要进行分发。",
    "Once you have created your executable asset package you can then give the file to other people or place it on your website to download, or upload these files to the different hosting services for individual distribution or even to online stores (like Google Play, Apple App Store or the Microsoft&nbsp;Store) for general distribution and retail.":"创建可执行资源包后，您可以将文件提供给其他人或将其放在您的网站上进行下载，或者将这些文件上传到不同的托管服务进行单独分发，甚至上传到在线商店(例如Google Play、Apple App Store或Microsoft Store)进行一般分发和零售。",
    "Overview":"概述",
    "See&nbsp;{}{}gml_pragma{}{}&nbsp;for the full list of optimisations you can use and how to use them.":"请参阅{}{}gml_pragma{}{}以了解您可以使用的优化的完整列表以及如何使用它们。",
    "Specific details on compiling for each platform are given below in&nbsp;{}Creating A Final Executable Package{}.":"有关每个平台编译的具体细节在下面{}创建最终可执行文件包{}中给出。",
    "Target Formats":"目标格式",
    "Target Settings":"目标设置",
    "The maximum size of the final game package is 4GB (not including {}streamed sounds{},&nbsp;{}dynamic textures{}&nbsp;and {}Included Files{}). See {}tips for reducing the final game size{}.":"最终游戏包的最大大小为 4GB (不包括{}流媒体声音{}、{}动态纹理{}和{}包含的文件{})。请参阅{}缩小最终游戏大小的提示{}。",
    "The maximum size of the final game package is 4GB. See {}tips for reducing the final game size{}.":"最终游戏包的最大大小为4gb。参见{}缩小最终游戏大小的提示{}。",
    "There are also a number or preferences that can be set to modify and customise the compile workflow, explained on the following page:":"还可以设置一些首选项来修改和自定义编译工作流程，详见以下页面：",
    "This section lists all the available target platforms, which depends on the licence you have.":"本节列出了所有可用的目标平台，这取决于您拥有的许可证。",
    "This section lists all the available target platforms, which depends on the licence you have. It will always have at least the \"GX.games\" target.":"本部分列出了所有可用的目标平台，具体取决于您拥有的许可证。它将始终至少有 \"Gx.Games\" 目标。",
    "To select a target, simply click {} on it; this will then update the rest of the options windows to show different details depending on the platform selected. If you don\u0027t have the required module installed in the current runtime then&nbsp;{}GameMaker{}&nbsp;will ask you to download and install it when you click&nbsp;{} the target:&nbsp;":"要选择目标，只需在目标上单击{};然后，这将更新其余选项窗口，根据所选平台显示不同的详细信息。如果你在当前运行时没有安装所需的模块，那么当你点击目标{}时{}GameMaker{}会要求你下载并安装它：",
    "You Should Know":"你需要知道",
    "You can click the {}Create Executable{} button&nbsp;{} in the IDE to start the compiler build or select {}Create Executable{} from the {}Build Menu{}. Either process will start the build process which will depend on the target platform selected.":"您可以在IDE中单击{}创建可执行文件{}按钮{}或从{5}构建{6}菜单中选择{}创建可执行文件{}。任一过程都将启动构建过程，具体取决于所选的目标平台。",
    "You can click the {}Create Executable{} button&nbsp;{} in the IDE to start the compiler build or select {}Create Executable{} from {}The Build Menu{}. Either process will start the build process which will depend on the target platform selected.":"可以单击 IDE 中的 {} 创建可执行文件 {} 按钮 {} 启动编译器生成，也可以从 {}\" 生成菜单 \"{} 中选择 {} 创建可执行文件 {}。这两个进程都将启动生成进程，生成进程将取决于所选的目标平台。",
    "You can optimise how the compiler compiles (parts of) your game\u0027s code by providing it optimisations with the&nbsp;{}\"optimise\"{} (or {}\"optimize\"{}) pragma. These may apply to multiple targets or be specific to some build targets. Using them in the right places in your code can lead to great performance improvements in your game.":"您可以通过使用 {}\"optimize\"{}( 或 {}\"optimize\"{}) 杂注来优化编译器编译游戏代码 (部分) 的方式。这些杂注可能适用于多个目标或特定于某些构建目标。在代码中的正确位置使用它们可以极大地提高游戏的性能。",
    "You can simply click the Create Executable button&nbsp;{} in the IDE to start the compiler build or select {}Create Executable{} from the {}Build Menu{}. Either process will start the build process which will depend on the target platform selected.":"您可以简单地单击IDE中的 \"创建可执行文件\" 按钮{}以启动编译器构建，或者从{}构建菜单{}中选择{}创建可执行文件{}。任何一个过程都将启动构建过程，这将取决于所选的目标平台。",
    "You will not be able to create an executable if you\u0027re not logged in. Use the&nbsp;{}&nbsp;{}Account Menu{}&nbsp;menu to log in before creating an executable.":"如果您没有登录，您将无法创建可执行文件。在创建可执行文件之前，请使用 {} {}账户菜单{} 菜单登录。",
    "{}Android {}- For Android devices, you can choose to build an {}*.apk{} or an {}*.aab{} (Android App Bundle) file from the window that is shown for saving the game:{} {} {}The type of file you choose will depend on the store that you wish to target, with the {}*.aab{} file being required for Google Play, while the {}*.apk{} file can be used on other stores. You can find out more from the {}YoYo Games Help Center{}. ":"{}Android{}-对于Android设备，您可以从显示的用于保存游戏的窗口中选择构建{}*.apk{}或{}*.aab{}(Android应用程序捆绑包)文件：{}{}{}您选择的文件类型将取决于您希望锁定的商店，Google Play需要{}*. aab{}文件，而{}*. apk{}文件可用于其他商店。您可以从{}YoYo游戏帮助中心{}了解更多信息。",
    "{}As explained in the section on{}&nbsp;{}{}{}Configurations{}{}, you can store certain details for compiling your game as{}&nbsp;{}{}{}Configs{}{}. This section of the Targets window permits you to have {}GameMaker{} automatically select a specific configuration for a specific target platform.{}":"正如在{}{}{}{}{}配置{}{}一节中解释的那样，您可以将编译游戏的某些细节存储为{}{}{}{}配置{}{}。目标窗口的这个部分允许您让{} GameMaker {}自动为特定的目标平台选择特定的配置。{}",
    "{}At the top, beside the Targets button, you have the current settings which tells you the platform and the specific settings actually being used, and then the rest of the window is taken up with the details and options for all the available targets which you can select to use instead. Each section of this window is explained below:&nbsp;":"{}在顶部，在\"目标\"按钮旁边，您有当前设置，该设置告诉您实际使用的平台和特定设置，然后窗口的其余部分将讨论所有可用目标的详细信息和选项，您可以选择使用这些详细信息和选项。此窗口的每个部分解释如下：",
    "{}Compiling{}":"{}编译{}",
    "{}Compiling{} your game can mean one of two things: compiling it for testing, or compiling it to create a final&nbsp;{}{}executable package{}{}&nbsp;for a specific target platform. This page aims to explain both of those options in detail.":"{}编译{}你的游戏可能意味着两件事中的一件。 编译它以进行测试，或编译它以创建一个最终的&nbsp;{}{}可执行包{}{}&nbsp;用于特定的目标平台。 本页旨在详细解释这两个选项。",
    "{}Config{}{}Config{}":"{}配置{}{}配置{}",
    "{}Device{}{}Device{}":"{}设备{}{}设备{}",
    "{}GX.games{} - When compiling for the \"GX.games\" target, you will see the \"GX.games Packaging\" window&nbsp;which will first ask you to sign in using your Opera account:{}You won\u0027t need to sign in here if you\u0027ve already signed into {}GameMaker{} using {}Opera Single Sign-In{}.{} {} After you have signed in, it will start compiling your game and proceed to upload it to GX.games. You can then click on \"Edit Game on Opera\" to edit it on GX.games DevCloud and publish it:{} {}Please refer to {}this page{} to learn more about the GX.games upload process, and {}this page{}&nbsp;for setting up the various exports, such as {}YYC{} and Mobile. ":"{}GX.games{}-为 \"GX.games\" 目标编译时，您将看到 \"GX.games 打包\" 窗口，该窗口将首先要求您使用Opera账户登录 :{}如果您已经使用{}Opera单点登录{}登录到{}GameMaker{}，则无需在此处登录。{}{}登录后，它将开始编译您的游戏，并继续将其上传到GX.games。然后，您可以单击 \"在Opera上编辑游戏\" 在GX.games DevCloud上进行编辑并发布 :{}{}请参考{}本页{}了解更多关于GX.games上传过程的信息，以及{}本页{}用于设置各种导出，例如{}YYC{}和Mobile。",
    "{}GX.games{} - When compiling for the \"GX.games\" target, you will see the \"GX.games Packaging\" window&nbsp;which will first ask you to sign in using your Opera account:{}You won\u0027t need to sign in here if you\u0027ve already signed into {}GameMaker{} using {}Opera Single Sign-In{}.{} {} Next you will be asked the packaging option to use:&nbsp;{} {}{} After you have signed in, it will start compiling your game and proceed to upload it to GX.games. You can then click on \"Edit Game on Opera\" to edit it on GX.create&nbsp;and publish it:{} {}Please refer to {}this page{} to learn more about the GX.games upload process, and {}this page{}&nbsp;for setting up the various exports, such as {}YYC{} and Mobile. ":"{}GX.games{} - 编译\"GX.games\"目标时，您将看到\"GX.games Packaging\"窗口，该窗口将首先要求您使用Opera帐户登录：{}如果您已经使用{5}Opera Single Sign-In{6}登录到{}GameMaker{}，则无需在此处登录。{7}{8}接下来，您将被要求使用打包选项：{}{}{} 登录后，它将开始编译您的游戏并将其上传到GX. games。然后您可以点击\"在Opera上编辑游戏\"在GX上编辑游戏。创建并发布游戏：{}{}请参阅{}此页面{}以了解有关GX.games上传过程的更多信息，以及{}此页面{}以设置各种导出，例如{}YYC{}和移动的。",
    "{}GX.games{} - When compiling for the \"GX.games\" target, you will see the \"GX.games Packaging\" window&nbsp;which will first ask you to sign in using your Opera account:{}You won\u0027t need to sign in here if you\u0027ve already signed into {}GameMaker{} using {}Opera Single Sign-In{}.{} {} Next you will be asked the packaging option to use:&nbsp;{} {}{} After you have signed in, it will start compiling your game and proceed to upload it to GX.games. You can then click on \"Edit Game on Opera\" to edit it on GX.games DevCloud and publish it:{} {}Please refer to {}this page{} to learn more about the GX.games upload process, and {}this page{}&nbsp;for setting up the various exports, such as {}YYC{} and Mobile. ":"{}GX.games{}-为 \"GX.games\" 目标编译时，您将看到 \"GX.games 打包\" 窗口，该窗口将首先要求您使用Opera账户登录 :{}如果您已经使用{}Opera单点登录{}登录到{}GameMaker{}，则无需在此处登录。{}{}登录后，它将开始编译您的游戏，并继续将其上传到GX.games。{} {}{}然后，您可以单击 \"在Opera上编辑游戏\" 在GX.games DevCloud上进行编辑并发布 :{}{}请参考{}本页{}了解更多关于GX.games上传过程的信息，以及{}本页{}用于设置各种导出，例如{}YYC{}和Mobile。",
    "{}HTML5 {}- If you have chosen to build HTML5, then an {}index.html{} file (this is the default name, but you can give your own name too in the Platform Preferences) along with a folder containing your game&nbsp;files will be created and saved to the specified location. For your game to work you will need both of these to be uploaded to a {}server{}. The {}index.html{} can also be customised to show your game with a different background colour, or at a different position etc... but a knowledge of HTML is necessary for this, and you can also specify your own custom index file when you build the package (see the {}HTML5 Game Options{}). You can find out more from the {}YoYo Games Help Center{}.":"{}HTML5{}-如果你选择构建 HTML5，则将创建{}index.html{}文件(这是默认名称，但你也可以在 \"平台偏好设置\" 中给出自己的名字)以及一个包含游戏文件的文件夹，并将其保存到指定位置。为了让你的游戏正常运行，你需要将这两个都上传到{}服务器{}。{}index.html{}也可以进行自定义，以不同的背景颜色或在不同的位置等显示你的游戏... 但是要做到这一点，你还需要了解 HTML，你也可以在构建软件包时指定自己的自定义索引文件(参见{}HTML5 Game Options{})。您可以从{}YoYo 游戏帮助中心{}了解更多信息。",
    "{}Here you can add new devices as well as have {}GameMaker{} test for a connection to any device(s) that may be connected. The exact contents of this window will depend on the platform specifics (see the section on the {}Device Manager{}&nbsp;for exact details for any given platform). Once a device has been found or added, it will then be shown in this window, like in this example image for Android:":"{}在这里，您可以添加新设备，同时对{}GameMaker{}测试到任何可能连接的设备的连接。此窗口的确切内容将取决于平台的详细信息(有关任何给定平台的确切详细信息，请参阅{}设备管理器{}上的部分)。找到或添加设备后，该设备将显示在此窗口中，如本Android示例图片所示：",
    "{}JavaScript{}: The JavaScript target will only be available for specific targets, like the HTML5 target, and sets the game to be compiled to pure JavaScript. This uses {}ECMAScript 2015{} (or ES6) for the JS it outputs.":"{}JavaScript{}: JavaScript目标将仅适用于特定目标，例如HTML5目标，并将要编译的游戏设置为纯JavaScript。这对它输出的JS使用{}ECMAScript 2015{}(或ES6)。",
    "{}Output{}{}Output{}":"{}输出{}{}输出{}",
    "{}Platform{}{}Platform{}":"{}平台{}{}平台{}",
    "{}The exact procedure and requirements for setting up devices and troubleshooting issues can be found in the appropriate section of the {}{}GameMaker{} Knowledge Base{}.":"{}设置设备和故障排除问题的确切程序和要求可以在{}{}GameMaker{}知识库{}的相应部分中找到。",
    "{}Ubuntu (Linux){} - Compiling for Ubuntu will ask you to choose between creating an {}.AppImage{} or a {}.zip{} file, containing either an x64 or an ARM executable (however AppImage does not support ARM).&nbsp;You can find out more from the {}YoYo Games Help Center{}.{} {}{}.AppImage{} is used for sharing as a package via any distributor except Steam, while {}.zip{} is used {}only{} for uploading to Steam (as it uses the Steam Runtime specifically). Because of this, the created&nbsp;{}.zip{}&nbsp;cannot be opened as a regular zip file. ":"{}Ubuntu(Linux){}-\"为Ubuntu编译\"将要求您在创建{}. AppImage{}或{}. zip{}文件(包含x 64或Arm可执行文件)之间进行选择(但AppImage不支持Arm)。您可以从{}YoYo游戏帮助中心{}了解更多信息。{}{}{}. AppImage{}作为软件包通过除Steam之外的任何分发服务器进行共享，而{}. zip{}仅用于{}{}上载到Steam(因为它专门使用Steam运行时)。因此，无法将创建的{}.zip{}作为常规zip文件打开。",
    "{}VM{}: The VM (Virtual Machine) target uses a generic {}runner {}for each platform and then interprets the code for your game. In general this option is used for testing due to its faster build times, but it does not offer the same performance boost that using the YYC option (if available) offers. You can use this to compile executable packages for smaller games or games where performance is not ever going to be an issue.":"{}VM{}：VM(虚拟机)目标为每个平台使用通用{}runner{}，然后解释游戏的代码。通常，此选项用于测试是因为它的构建时间更快，但是它提供的性能提升不如使用 YYC 选项(如果可用)所提供的性能提升。你可以用它来为性能永远不会成为问题的小型游戏或游戏编译可执行软件包。",
    "{}Windows {}- Compiling for the general Windows OS will first request that you choose between creating an {}Installer {}or a {}Zip {}package, where the installer will be a single executable that will install your game, and the Zip file will be a single {}*.zip{} format compressed file with all your game files stored within (the files will need extracted for the game to run). {}If you check the box marked {}Remember Packaging Option{} then {}GameMaker{} will remember the choice for all future compiles (this can be reset or changed from the {}Windows Preferences{}). You can find out more from the {}YoYo Games Help Center{}.{} {} The Windows target only compiles 64-bit&nbsp;executables. ":"{}Windows{}-为通用 Windows 操作系统进行编译将首先要求您在创建{}Installer{}或{}Zip{}包之间进行选择，其中安装程序将是安装游戏的单个可执行文件，而 Zip 文件将是单个{}*.zip{}格式的压缩文件，其中存储了所有游戏文件(需要提取文件才能运行游戏)。{}如果你选中标有{}记住包装选项{}的复选框，则{}GameMaker{}将记住未来所有编译的选择(可以从{}窗口首选项{}中重置或更改)。你可以从{}YoYo 游戏帮助中心{}了解更多信息。{}{}Windows 目标只能编译 64 位的可执行文件。",
    "{}YYC{}: The YYC ({}YoYo Compiler{}) generates C++ code from your GML code, before using the target\u0027s C++ compiler to compile&nbsp;it into native code for the target platform. It strips out unneeded functions and performs a host of other optimisation techniques to create a smaller and performance-enhanced executable package.{} {} This can increase your game\u0027s performance by at least two or three times, especially on logic-heavy games, and is ideal for those larger or CPU-intensive projects. Compile times may take longer and you should always clear the compiler cache before building any final complete asset package for a target platform. Note that the YYC target may require extra tools to be installed for the platform selected, otherwise it will not work - you can find further information about this from the {}YoYo Games Help Center{} as well as on the individual {}target Preferences{}&nbsp;pages detailed in this manual. ":"{}YYC{}：YYC({}YoYo Compiler{}) 从你的 GML 代码生成 C++ 代码，然后使用目标的 C++ 编译器将其编译成目标平台的原生代码。它去除了不需要的函数，并执行许多其他优化技术，以创建一个更小、性能增强的可执行包。{}{}这可以将游戏的性能提高至少两到三倍，尤其是在逻辑密集型游戏中，非常适合那些大型或 CPU 密集型项目。编译时间可能会更长，在为目标平台构建任何最终的完整资源包之前，应始终清除编译器缓存。请注意，YYC 目标可能需要为所选平台安装额外的工具，否则它将无法正常工作——您可以从{}YoYo Games 帮助中心{}以及本手册中详细介绍的各个{}目标首选项{}页面上找到有关此的更多信息。",
    "{}iOS {}- Compiling to iOS will create an {}xarchive{} file which is then used in Xtools to create the final iOS package. Note that {}to compile for iOS you will require an Apple Mac computer running OSX or higher as well as the relevant certificates and permissions{}. You can find out more from the {}YoYo Games Help Center{}.":"{}iOS{}-编译到iOS将创建一个{}xarchive{}文件，然后在Xtools中使用该文件创建最终的iOS包。请注意{}要为iOS编译，您将需要一台运行OSX或更高版本的Apple Mac计算机以及相关的证书和权限{}。您可以从{}YoYo Games帮助中心{}中找到更多信息。",
    "{}macOS {}- Compiling for the macOS target will first request that you&nbsp;choose between creating a {}DMG {}or a {}Zip {}file:{} {}\"Package as DMG\" will build a .dmg installer package which can be used to install the game on a Mac computer. Note that during this build process you will see the installer appear on the Mac, which will disappear once the build process is complete.{} {} \"Package as Zip\"&nbsp;will build either an {}*.app{} file or a {}*.pkg{} file, depending on whether you want to later upload it to the Mac App Store or not. As with iOS {}you will require an Apple Mac computer running OSX or higher as well as the relevant certificates and permissions{}. You can find out more from the {}YoYo Games Help Center{}. ":"{}macOS{}-为 macOS 目标编译将首先要求你在创建{}DMG{}或{}Zip{}文件之间进行选择：{}{}\"Package as DMG\" 将构建 .dmg 安装程序包，可用于在 Mac 电脑上安装游戏。请注意，在此构建过程中，您将看到安装程序出现在 Mac 上，构建过程完成后，安装程序将消失。{}{}\"打包为 Zip\" 将构建 {}*.app{} 文件或 {}*.pkg{} 文件，具体取决于你以后是否想将其上传到 Mac App Store。与 iOS一样，{}你需要一台运行 OSX 或更高版本的 Apple Mac 电脑以及相关的证书和权限{}。您可以从{}YoYo 游戏帮助中心{}了解更多信息。",
    "{}{}NOTE{}{}&nbsp;Before doing a final build of your project for release, you should {}always clear the Asset Compiler {}Cache{}{} (using the \"broom\" icon {}&nbsp;at the top of the IDE). {}GameMaker{} will cache many of your game files to keep compilation speed to a minimum and these can sometimes get corrupted, so it is safer to clear that cache before doing a release build.":"{}{}注意{}{}在完成项目的最终版本发布之前，您应该{}总是清除资源编译器 {}缓存{}{} (使用 IDE 顶部的“扫帚”图标{})。{} GameMaker {}会缓存很多游戏文件，以将编译速度保持在最低限度，这些文件有时会被破坏，所以在进行发布版本构建之前清除缓存更安全。",
    "{}{}NOTE{}{}&nbsp;See the&nbsp;{}Runtime Feeds Preferences{}&nbsp;page for more info on how to change which modules are included.":"{}{}注意{}{}有关如何更改包含哪些模块的更多信息，请参阅{}Runtime Feeds 首选项{}页面。"
}