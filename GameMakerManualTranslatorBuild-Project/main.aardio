
import win.ui;
import win.ui.menu;
/*DSG{{*/
mainForm = win.form(text="GameMaker Manual_Build";right=895;bottom=679)
mainForm.add(
button={cls="button";text='1, Unpack Manual\r\n解压手册到预读取目录';left=24;top=16;right=200;bottom=80;dl=1;dt=1;z=2};
button3={cls="button";text='1,Build init\r\n解压手册到build目录';left=264;top=16;right=440;bottom=80;dl=1;dt=1;z=3};
button4={cls="button";text='3,Packing Manual\r\n打包build目录到IDE手册目录';left=264;top=160;right=440;bottom=224;dl=1;dt=1;z=4};
button5={cls="button";text='2,Build!!!!\r\n编译字典覆盖到build目录';left=264;top=88;right=440;bottom=152;dl=1;dt=1;z=5};
log={cls="edit";left=8;top=232;right=888;bottom=672;autohscroll=false;bgcolor=0;color=16777215;db=1;dl=1;dr=1;dt=1;edge=1;font=LOGFONT(h=-16);hidesel=1;multiline=1;readonly=1;vscroll=1;z=1}
)
/*}}*/

import console
import fsys
import web.json
import process.popen

import System.IO.Compression.ZipFile;
var ZipFile = System.IO.Compression.ZipFile;
import zlib.zip
	
//根据有无debug文件判断是否是在ide调试
debug=io.exist("debug")

if debug{
	path=//../
}else{
	path=//./
}

//读取setting.json
var file=path+"setting.json"
if !io.exist(file){
	win.msgbox("你搞丢了配置文件setting.json","注意!")
	return 0
}

//日志输出
log=function(...){
	mainForm.log.log(...)
}
nlog=function(...){
	mainForm.log.log(...,'\r\n')
}

setting=web.json.parse(string.load(file))


manualFile					=	string.replace(io.fullpath(setting.manualPath+"\"+setting.manualFileName),"\\","/")
manualNewFile			=	string.replace(io.fullpath(setting.manualPath+"\"+setting.manualNewFileName),"\\","/")

manualUnpackDir		=	string.replace(io.fullpath(path+"\"+setting.manualUnpackDirName),"\\","/")
buildDir						=	string.replace(io.fullpath(path+"\"+setting.buildDirName),"\\","/")

log("load 'setting.json' over",'\r\n' )
log("=======================",'\r\n')

log("manualFile:",'\r\n',manualFile,'\r\n' ,'\r\n')
log("manualNewFile:",'\r\n',manualNewFile,'\r\n' ,'\r\n')
log("manualUnpackDir:",'\r\n',manualUnpackDir,'\r\n' ,'\r\n')
log("buildDir:",'\r\n',buildDir,'\r\n','\r\n')



mainForm.button.oncommand = function(id,event){
	
	log("=======================",'\r\n')
	
	var t=time.tick()
	
	//删除目录
	log("Deleting directory:",manualUnpackDir)
	fsys.delete(manualUnpackDir)
	log(" -> over! ","time:",time.tick()-t,"ms",'\r\n')

	var t=time.tick()
	
	//解压
	log("Unzipping manual to:",manualFile)
	var cmdText="7za.exe x "+ manualFile + " -o" + manualUnpackDir
	var prcs = process.popen.cmd("cd "+path+" && "+cmdText)
	prcs.read(-1)
	prcs.close()
	log(" -> over! ","time:",time.tick()-t,"ms",'\r\n')
}


mainForm.button3.oncommand = function(id,event){
	log("=======================",'\r\n')
	
	var t=time.tick()
	
	//删除目录
	log("Deleting directory:",buildDir)
	fsys.delete(buildDir)
	log(" -> over! ","time:",time.tick()-t,"ms",'\r\n')

	var t=time.tick()
	
	//解压到build
	
	log("Unzipping manual to:",buildDir)
	
	var cmdText="7za.exe x "+ manualFile + " -o" + buildDir
	var prcs = process.popen.cmd("cd "+path+" && "+cmdText)
	prcs.read(-1)
	prcs.close()
	
	//ZipFile.ExtractToDirectory(manualFile,buildDir)
	log(" -> over! ","time:",time.tick()-t,"ms",'\r\n')

}

mainForm.button5.oncommand = function(id,event){
	
	log("=======================",'\r\n')
	var t=time.tick()
	
	//编译

	log("Building!!!!")
	loadcodex("\res\build.aardio");
	log(" -> over! ","time:",time.tick()-t,"ms",'\r\n')
	
}

mainForm.button4.oncommand = function(id,event){
	
	log("=======================",'\r\n')
	var t=time.tick()
	
	//删除文件
	log("Deleting file:",manualNewFile)
	fsys.delete(manualNewFile)
	log(" -> over! ","time:",time.tick()-t,"ms",'\r\n')
	
	var t=time.tick()
	//打包回去
	log("Pack manual to:",manualNewFile)
	
	var cmdText="7za.exe -mx1 -tzip a "+manualNewFile+" "+buildDir+"/*"
	var prcs = process.popen.cmd("cd "+path+" && "+cmdText)//打包到指定ide手册目录
	prcs.read(-1)//单纯为了堵塞进程
	prcs.close() 
	
	log(" -> over! ","time:",time.tick()-t,"ms",'\r\n')
}

mainForm.show();
win.loopMessage();