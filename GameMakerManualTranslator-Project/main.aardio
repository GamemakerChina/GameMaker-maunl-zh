import win.ui;
import win.ui.menu;
/*DSG{{*/
mainForm = win.form(text="GameMaker Manual";right=1379;bottom=959)
mainForm.add()
/*}}*/

import console
import fsys;


debug=io.exist("debug")


robohelp=//GMS2-Robohelp-en
mainfile=//index.htm
if debug{
	path=//../
}else{
	path=//./
}

mainPath=fsys.path.canonicalize(path+"\"+robohelp+"\"+mainfile)

//console.log(mainPath)

//读取或初始化setting.json
var file=path+"setting.json"
if !io.exist(file){
var str=`{
	"chromeCondition":"--disable-web-security --disable-features=site-per-process -–allow-no-sandbox-job",
	"group":"zh",
	"importPath":"patch/import",
	"mainJs":"patch/main.js",
	"template":"patch/template.htm",
	"team":"patch/team.htm",
}`
	string.save(file,str)
}
setting=web.json.parse(string.load(file))

//设置语言组
if setting.group{
	group=setting.group
}else{
	group="def"
}

//当目录出现变更,直接一个刷的新
import fsys.dirWatcher;
win.thrdWatcher = fsys.dirWatcher.thread(function(filename,action,actionText){
	f5=false
}, path+"/patch");

loadcodex("\res\翻译.aardio");
loadcodex("\res\热键设置.aardio");

import web.view;
theView  = web.view(mainForm,,setting.chromeCondition);

//关闭右键菜单
theView.enableDefaultContextMenus(false) 


//检测hack
mainForm.setInterval(100,function(){
try{
	//刷新加载
	if !f5{
		f5=true
		theView.go(mainPath)
	}
	//主界面
	var hack=theView.eval("hackState")
	var ready=theView.eval("document.readyState=='complete'")
	
	//加载完成与是否没有hack过
	if ready and !hack{
		
		//加载依赖js
		fsys.enum(path+setting.importPath,"*.js",function(dirname,filename,fullpath,findData){
			if(filename){
				theView.doScript(string.load(fullpath))
			}
		},);
		
		//加载依赖css
		var css=""
		fsys.enum(path+setting.importPath,"*.css",function(dirname,filename,fullpath,findData){
			if(filename){
				css+=//<link rel="stylesheet" href="
				css+=string.replace(fullpath,"@\","/")
				css+=//">
			}
		},);
		
		//标正,并运行主js
		theView.eval("hackState=true")//标记这个js已经运行过了
		theView.doScript("target=null")//初始化一个没用的变量
		theView.doScript("cssHtml=`"+css+"`")//css的html
		theView.doScript(string.load(path+setting.mainJs))//主要js
		
		theView.doScript(`group="`+group+`"`)
	}
}
catch(e){
	console.log(e)
}
});


//语言缓存
Lfile={
	file:"";
	struct:{};
}

//////
//备注:别他妈用table当变量名,有个库叫table
//////

reload_Lfile=function(file){
    //先判断预读文件是否加载过了
	if file!=Lfile.file{
		var str=string.load(path+"/language/"+file)
		
		//序列化内容缓存起来
		Lfile.file=file
		
		if str==null{
			Lfile.struct={}
		}else{
			Lfile.struct=web.json.parse(str)
		}
	}
}

theView.external = {
    toString = function(){
    	return owner.property; 
    };
	property = "这是 aardio 对象的属性值";
	methodWithParametersAndReturnValue = function(a,b){
		return a + b
	}
	//aardio 函数如果抛出异常，网页 DevTools 调试工具可查看错误信息
}
//前端函数
theView.export({
    L= function(file,key){
		reload_Lfile(file)
		var ret=Lfile.struct[key]
		if !ret ret=""
		return ret
	};
	
	setL=function(file,key,old,new){
		reload_Lfile(file)
		Lfile.struct[key]=new
		
		var p=path+"/language/"+file
		var r=web.json.stringify(Lfile.struct,true)
		
		fsys.createParentDir(p)
		string.save(p,r)
		
		return p,r
	}
	caiyun=function(str){
		var ret=translate_caiyun(str)
		if !ret ret=""
		return ret
	}
	translate=function(str,eng){
		var ret=translate(str,eng)
		if !ret ret=""
		return ret
	}
	translate_tts=function(str){
		var ret=translate_tts(str)
		//console.log(ret)
		if !ret ret=""
		return ret
	}
})


//必须这样不然无法加载资源
import wsock.tcp.simpleHttpServer; 



mainForm.show();
win.loopMessage();